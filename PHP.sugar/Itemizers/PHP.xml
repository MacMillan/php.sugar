<?xml version="1.0"?>
<itemizer>
	<!-- PHP Source; <?php ... ?>, <?= =?> -->
    <recipe name="source.block.php.processing-instruction">
		<class>ESBaseItem</class>
		<start-selector>php.begin:capture(name) + *</start-selector>
		<end-selector>php.end:capture(name)</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<!-- Defining a custom class -->
	<recipe name="container.class">
		<class>ESBaseItem</class>
		<start-selector>container.class:has-child(current:has-child((name:capture(name))) + delimiter.balanced.curly-brace.begin:capture(itemizer-firstused)</start-selector>
		<end-selector>delimiter.balanced.curly-brace.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<!-- Defining a magic function -->
	<recipe name="container.function.magic">
		<class>ESBaseItem</class>
		<start-selector>container.function.magic:has-child(name:capture(name)) + delimiter.balanced.curly-brace.begin:capture(itemizer-firstused)</start-selector>
		<end-selector>delimiter.balanced.curly-brace.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<!-- Defining a custom function -->
	<recipe name="container.function">
		<class>ESBaseItem</class>
		<start-selector>container.function:has-child(name:capture(name)) + delimiter.balanced.curly-brace.begin:capture(itemizer-firstused)</start-selector>
		<end-selector>delimiter.balanced.curly-brace.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<!-- Defining control structures; (if, else, switch, for, foreach...)-->
	<recipe name="container.block">
		<class>ESBaseItem</class>
		<start-selector>container.block:capture(name) + delimiter.balanced.curly-brace.begin:capture(itemizer-firstused)</start-selector>
		<end-selector>delimiter.balanced.curly-brace.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<recipe name="container.block.hidden">
		<class>ESBaseItem</class>
		<start-selector>container.block > delimiter.balanced.parenthesis.begin</start-selector>
		<end-selector>container.block > delimiter.balanced.parenthesis.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<recipe name="literal.collection.hidden">
	    <class>ESBaseItem</class>
		<start-selector>literal.collection > delimiter.balanced.parenthesis.begin</start-selector>
		<end-selector>literal.collection > delimiter.balanced.parenthesis.begin.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<recipe name="identifier.function.hidden">
	    <class>ESBaseItem</class>
		<start-selector>identifier.function > delimiter.balanced.parenthesis.begin</start-selector>
		<end-selector>literal.collection > delimiter.balanced.parenthesis.begin.end</end-selector>
		<subrecipes>
			<include-root-recipes />
		</subrecipes>
	</recipe>
	
	<!-- Defining an include -->
	<recipe name="include">
		<class>ESBaseItem</class>
		<start-selector>keyword.include:capture(name)</start-selector>
		<end-selector>delimiter.terminator</end-selector>
		<subrecipes>
			<recipe>
			    <class>ESBaseItem</class>
			    <selector>variable:capture(name), keyword:capture(name), literal:capture(name)</selector>
			</recipe>
		</subrecipes>
	</recipe>
	
	<recipe name="metadata.comment.documentation">
	    <selector>comment.documentation:has-child(delimiter.begin + line:capture(name))</selector>
	</recipe>
	
	<recipe name="metadata.comment.line">
		<class>ESCommentItem</class>
		<selector>metadata.comment.line:has-child(content:capture(name))</selector>
	</recipe>
	
</itemizer>