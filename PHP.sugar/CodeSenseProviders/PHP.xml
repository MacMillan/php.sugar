<?xml version="1.0" encoding="UTF-8"?>
<!--

CodeSense Providers map contexts in a document to possible completions. The actual completions are defined in the various CodeSense libraries, categorized using their key. A CodeSense Provider tells Espresso what CodeSense libraries are active in the current context. One of these XML files can contain many <provider> elements.

-->
<codesense>
	
	<provider>
        <selector>php-html > *:not(php-html, tag.open, tag.close), php *:not(metadata.comment, string, variable, variable *, variable ~ *, variable > *), php > *:not(metadata.comment, string, string > *, variable, variable *, variable ~ *, variable > *)</selector>
		<completions>com.gridlee.identifier.function.support</completions>
		<complete-match>[a-zA-Z0-9-_]+\s*</complete-match>
	</provider>
    
    <provider>
        <selector>php-html > *:not(php-html, tag.open, tag.close), php *:not(metadata.comment, string, variable, variable *, variable > *), php > *:not(metadata.comment, string, string > *, variable, variable *, variable > *)</selector>
		<completions>com.gridlee.magic-constants</completions>
		<complete-match>(_{2})+\s*</complete-match>
	</provider>
    
    <provider>
		<selector>php-html > *:not(php-html, tag.open, tag.close), php *, php > *</selector>
		<completions>com.gridlee.identifier.global-variables</completions>
		<complete-match>\$+[a-zA-Z0-9-_]*\s*</complete-match>
	</provider>
    
    <provider>
        <selector>php-html > *:not(php-html, tag.open, tag.close), php *:not(metadata.comment, string, variable, variable *), php > *:not(metadata.comment, string, string > *, variable, variable *)</selector>
		<completions>com.gridlee.identifier.snippets</completions>
		<complete-match>([a-zA-Z0-9-_])+\s*</complete-match>
	</provider>
    
    <provider>
        <selector>php-html > *:not(php-html, tag.open, tag.close), php *:not(metadata.comment, string, variable, variable *), php > *:not(metadata.comment, string, string > *, variable, variable *)</selector>
		<completions>com.gridlee.keyword.scope</completions>
		<complete-match>([a-zA-Z0-9-_])+\s*</complete-match>
	</provider>
    
</codesense>