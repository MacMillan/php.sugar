<?xml version="1.0" encoding="UTF-8"?>
<!--
@description Defines PHP codesense library
@author Derek Reynolds <derekr@me.com>
@copyright The MIT License

Copyright (c) 2009

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<codesense version="1.0">
    <set name="com.gridlee.identifier.snippets">
	    
	    <completion string="if" />
	    <completion string="for" />
	    <completion string="foreach" />
	    <completion string="dowhile" />
	    <completion string="while" />
	    <completion string="function" />
	    <completion string="class" />
	    <completion string="doc" />
	    <completion string="var" />
	
	</set>
    
    <set name="com.gridlee.magic-constants">
	    
	    <completion string="__LINE__" />
	    <completion string="__FILE__" />
	    <completion string="__DIR__" />
	    <completion string="__FUNCTION__" />
	    <completion string="__CLASS__" />
	    <completion string="__METHOD__" />
	    <completion string="__NAMESPACE__" />
	
	</set>
    
    <set name="com.gridlee.keyword.scope">
	    
	    <behavior>
            <append-dynamic>
    	        <matched-suffix>(\s*:)|[^:]</matched-suffix>
    	        <transform-into> $0</transform-into>
    	    </append-dynamic>
    	    
        </behavior>
	    
	    <completion string="static" />
	    <completion string="public" />
	    <completion string="protected" />
	    <completion string="private" />
	    <completion string="abstract" />
	    <completion string="global" />
	
	</set>
    
    <set name="com.gridlee.identifier.global-variables">
	    
	    <behavior>
            <append-dynamic>
    	        <matched-suffix>(\s*:)|[^:]</matched-suffix>
    	        <transform-into>${1:['${2:booyah}']}</transform-into>
    	    </append-dynamic>
        </behavior>
	    
	    <completion string="$GLOBALS" />
	    <completion string="$_SERVER" />
	    <completion string="$_GET" />
	    <completion string="$_POST" />
	    <completion string="$_FILES" />
	    <completion string="$_COOKIE" />
	    <completion string="$_SESSION" />
	    <completion string="$_REQUEST" />
	    <completion string="$_ENV" />
	
	</set>
    
	<!-- Built In Support Function -->
	
	<set name="com.gridlee.identifier.function.support">
        <behavior>
            <append-dynamic>
    	        <matched-suffix>(\s*:)|[^:]</matched-suffix>
    	        <transform-into>(${1:arguments})</transform-into>
    	    </append-dynamic>
        </behavior>
	    
	    <completion string="include">
	        <behavior>
				<append-dynamic>
					<matched-suffix>(\s*:)|[^:]</matched-suffix>
					<transform-into> (${1:'${2:/path/to/file}'})</transform-into>
				</append-dynamic>
			</behavior>
	    </completion>
	    
	    <completion string="include_once">
	        <behavior>
				<append-dynamic>
					<matched-suffix>(\s*:)|[^:]</matched-suffix>
					<transform-into>(${1:'${2:/path/to/file}'})</transform-into>
				</append-dynamic>
			</behavior>
	    </completion>
	    
	    <completion string="require">
	        <behavior>
				<append-dynamic>
					<matched-suffix>(\s*:)|[^:]</matched-suffix>
					<transform-into>(${1:'${2:/path/to/file}'})</transform-into>
				</append-dynamic>
			</behavior>
	    </completion>
	    
	    <completion string="require_once">
	        <behavior>
				<append-dynamic>
					<matched-suffix>(\s*:)|[^:]</matched-suffix>
					<transform-into>(${1:'${2:/path/to/file}'})</transform-into>
				</append-dynamic>
			</behavior>
	    </completion>
	    
	    <completion string="abs">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="acos">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="acosh">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="addcslashes">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$charlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="addslashes">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_info">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_methods_by_list">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class}, ${3:array \$methods}${4:${5:[, bool \$exclude]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_methods_by_regexp">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class}, ${3:string \$regexp}${4:${5:[, bool \$exclude]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_methods">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_properties_by_list">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class}, ${3:array \$properties}${4:${5:[, bool \$exclude]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_properties_by_regexp">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class}, ${3:string \$regexp}${4:${5:[, bool \$exclude]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate_properties">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregate">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="aggregation_info">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_child_terminate">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_get_modules">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_get_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_getenv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$variable}${2:${3:[, bool \$walk_to_top]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_lookup_uri">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_note">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$note}${2:${3:[, string \$note_value]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_request_headers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_reset_timeout">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_response_headers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apache_setenv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$variable}, ${2:string \$value}${3:${4:[, bool \$walk_to_top= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:mixed \$var}${3:${4:[, int \$ttl= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_cache_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$cache_type]}${3:${4:[, bool \$limited= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_clear_cache">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$cache_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_compile_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_define_constants">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:array \$constants}${3:${4:[, bool \$case_sensitive= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_fetch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}${2:${3:[, bool &amp;\$success]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_load_constants">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}${2:${3:[, bool \$case_sensitive= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_sma_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$limited= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apc_store">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:mixed \$var}${3:${4:[, int \$ttl= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_breakpoint">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$debug})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_callstack">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_clunk">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$warning}${2:${3:[, string \$delimiter]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_continue">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$debug})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_croak">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$warning}${2:${3:[, string \$delimiter]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_dump_function_table">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_dump_persistent_resources">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_dump_regular_resources">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_echo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$output})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_get_active_symbols">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_set_pprof_trace">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$dump_directory]}${3:${4:[, string \$fragment= &quot;pprof&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_set_session_trace_socket">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$tcp}, ${2:int \$socket}, ${3:int \$port}, ${4:int \$debug})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_set_session_trace">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$debug}${2:${3:[, string \$dump_directory]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="apd_set_session">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$debug})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_change_key_case">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}${2:${3:[, int \$case= CASE_LOWER]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_chunk">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}, ${2:int \$size}${3:${4:[, bool \$preserve_keys= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_combine">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$keys}, ${2:array \$values})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_count_values">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_diff_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}${3:${4:[, array \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_diff_key">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}${3:${4:[, array \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_diff_uassoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$key}${4:${5:[, array \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_diff_ukey">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$key}${4:${5:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_diff">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}${3:${4:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_fill_keys">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$keys}, ${2:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_fill">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$start}, ${2:int \$num}, ${3:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_filter">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}${2:${3:[, callback \$callback]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_flip">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$trans})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_intersect_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}${3:${4:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_intersect_key">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}${3:${4:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_intersect_uassoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$key}${4:${5:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_intersect_ukey">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$key}${4:${5:[, array \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_intersect">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}${3:${4:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_key_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$key}, ${2:array \$search})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_keys">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}${2:${3:[, mixed \$search_value]}${4:${5:[, bool \$strict= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_map">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$callback}, ${2:array \$arr}${3:${4:[, array \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_merge_recursive">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}${2:${3:[, array \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_merge">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}${2:${3:[, array \$array2]}${4:${5:[, array \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_multisort">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arr}${2:${3:[, mixed \$arg]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_pad">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}, ${2:int \$pad}, ${3:mixed \$pad})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_pop">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_product">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_push">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}, ${2:mixed \$var}${3:${4:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_rand">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}${2:${3:[, int \$num_req= 1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_reduce">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input}, ${2:callback \$function}${3:${4:[, int \$initial]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_reverse">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}${2:${3:[, bool \$preserve_keys= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_search">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$needle}, ${2:array \$haystack}${3:${4:[, bool \$strict]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_shift">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_slice">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:int \$offset}${3:${4:[, int \$length]}${5:${6:[, bool \$preserve_keys= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_splice">
			<behavior>
				<append-static>
					<transform-into>(${1:\$input}, ${2:int \$offset}${3:${4:[, int \$length= 0]}${5:${6:[, mixed \$replacement]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_sum">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_udiff_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$data}${4:${5:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_udiff_uassoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$data}, ${4:callback \$key}${5:${6:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_udiff">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$data}${4:${5:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_uintersect_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$data}${4:${5:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_uintersect_uassoc">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$data}, ${4:callback \$key}${5:${6:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_uintersect">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}, ${2:array \$array}, ${3:callback \$data}${4:${5:[, array \$ ...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_unique">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_unshift">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}, ${2:mixed \$var}${3:${4:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_values">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$input})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_walk_recursive">
			<behavior>
				<append-static>
					<transform-into>(${1:\$input}, ${2:callback \$funcname}${3:${4:[, mixed \$userdata]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array_walk">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}, ${2:callback \$funcname}${3:${4:[, mixed \$userdata]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="array">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="arsort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ascii2ebcdic">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ascii})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="asin">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="asinh">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="asort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="assert_options">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$what}${2:${3:[, mixed \$value]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="assert">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$assertion})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="atan">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="atan2">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$y}, ${2:float \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="atanh">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="base_convert">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$number}, ${2:int \$frombase}, ${3:int \$tobase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="base64_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, bool \$strict= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="base64_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="basename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, string \$suffix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_add_element">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bbcode}, ${2:string \$tag}, ${3:array \$tag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_add_smiley">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bbcode}, ${2:string \$smiley}, ${3:string \$replace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_create">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$bbcode_initial_tags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bbcode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bbcode}, ${2:string \$to})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_set_arg_parser">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bbcode}, ${2:resource \$bbcode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bbcode_set_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bbcode}, ${2:int \$flags}${3:${4:[, int \$mode= BBCODE_SET_FLAGS_SET]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcadd">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}${3:${4:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bccomp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}${3:${4:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcdiv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}${3:${4:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcmod">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$modulus})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcmul">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}${3:${4:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_load_exe">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_load">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_parse_class">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$class}, ${2:string \$callback})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_class">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:string \$className}${3:${4:[, string \$extends]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_constant">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:string \$constantName})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_exe_footer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:int \$startpos})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_footer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_function">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:string \$functionName})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_functions_from_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:string \$fileName})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_header">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}${2:${3:[, string \$write_ver]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcompiler_write_included_filename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcpow">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}${3:${4:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcpowmod">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}, ${3:string \$modulus}${4:${5:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcscale">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$scale})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcsqrt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$operand}${2:${3:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bcsub">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$left}, ${2:string \$right}${3:${4:[, int \$scale]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bin2hex">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bind_textdomain_codeset">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$codeset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bindec">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$binary})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bindtextdomain">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzclose">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzcompress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$source}${2:${3:[, int \$blocksize= 4]}${4:${5:[, int \$workfactor= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzdecompress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$source}${2:${3:[, int \$small= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzerrno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzerror">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzerrstr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzflush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzopen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzread">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz}${2:${3:[, int \$length= 1024]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="bzwrite">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$bz}, ${2:string \$data}${3:${4:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cal_days_in_month">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$calendar}, ${2:int \$month}, ${3:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cal_from_jd">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$jd}, ${2:int \$calendar})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cal_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$calendar= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cal_to_jd">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$calendar}, ${2:int \$month}, ${3:int \$day}, ${4:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="calcul_hmac">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clent}, ${2:string \$siretcode}, ${3:string \$price}, ${4:string \$reference}, ${5:string \$validity}, ${6:string \$taxation}, ${7:string \$devise}, ${8:string \$language})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="calculhmac">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clent}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="call_user_func_array">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$function}, ${2:array \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="call_user_func">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$function}${2:${3:[, mixed \$parameter]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="call_user_method_array">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$method}, ${2:\$obj}, ${3:array \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="call_user_method">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$method}, ${2:\$obj}${3:${4:[, mixed \$parameter]}${5:${6:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ceil">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chdir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="checkdate">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$month}, ${2:int \$day}, ${3:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="checkdnsrr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, string \$type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chgrp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:mixed \$group})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chmod">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chop">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chown">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:mixed \$user})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$ascii})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chroot">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="chunk_split">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$body}${2:${3:[, int \$chunklen]}${4:${5:[, string \$end]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="class_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$class}${2:${3:[, bool \$autoload= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="class_implements">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$class}${2:${3:[, bool \$autoload= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="class_parents">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$class}${2:${3:[, bool \$autoload= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="classkit_import">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="classkit_method_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname}, ${3:string \$args}, ${4:string \$code}${5:${6:[, int \$flags= CLASSKIT_ACC_PUBLIC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="classkit_method_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dClass}, ${2:string \$dMethod}, ${3:string \$sClass}${4:${5:[, string \$sMethod]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="classkit_method_redefine">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname}, ${3:string \$args}, ${4:string \$code}${5:${6:[, int \$flags= CLASSKIT_ACC_PUBLIC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="classkit_method_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="classkit_method_rename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname}, ${3:string \$newname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="clearstatcache">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$clear_realpath_cache= false]}${3:${4:[, string \$filename]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="closedir">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$dir_handle]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="closelog">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_addref">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_create_guid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_event_sink">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$comobject}, ${2:object \$sinkobject}${3:${4:[, mixed \$sinkinterface]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_get_active_object">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$progid}${2:${3:[, int \$code_page]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_invoke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$com}, ${2:string \$function}${3:${4:[, mixed \$function_parameters]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_isenum">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$com})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_load_typelib">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$typelib}${2:${3:[, bool \$case_insensitive]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_load">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_message_pump">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timeoutms]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_print_typeinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$comobject}${2:${3:[, string \$dispinterface]}${4:${5:[, bool \$wantsink]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_propget">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_propput">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_propset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_release">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="com_set">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="compact">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$varname}${2:${3:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="connection_aborted">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="connection_status">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="connection_timeout">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="constant">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="convert_cyr_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$from}, ${3:string \$to})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="convert_uudecode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="convert_uuencode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="copy">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$source}, ${2:string \$dest}${3:${4:[, resource \$context]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cos">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cosh">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="count_chars">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$mode= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="count">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var}${2:${3:[, int \$mode= COUNT_NORMAL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="crack_check">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dictionary}, ${2:string \$password}, ${3:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="crack_closedict">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$dictionary]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="crack_getlastmessage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="crack_opendict">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dictionary})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="crc32">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="create_function">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$args}, ${2:string \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="crypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$salt]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_alnum">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_alpha">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_cntrl">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_digit">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_graph">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_lower">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_print">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_punct">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_space">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_upper">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ctype_xdigit">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_copy_handle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_errno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_getinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch}${2:${3:[, int \$opt= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_init">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$url= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_add_handle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mh}, ${2:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mh})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mh}, ${2:\$still})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_getcontent">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_info_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mh}${2:${3:[, int &amp;\$msgs_in_queue= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_remove_handle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mh}, ${2:resource \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_multi_select">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mh}${2:${3:[, float \$timeout= 1.0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_setopt_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch}, ${2:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_setopt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ch}, ${2:int \$option}, ${3:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="curl_version">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$age= CURLVERSION_NOW]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="current">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cyrus_authenticate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$mechlist]}${4:${5:[, string \$service]}${6:${7:[, string \$user]}${8:${9:[, int \$minssf]}${10:${11:[, int \$maxssf]}${12:${13:[, string \$authname]}${14:${15:[, string \$password]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cyrus_bind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:array \$callbacks})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cyrus_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cyrus_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$host]}${3:${4:[, string \$port]}${5:${6:[, int \$flags]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cyrus_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="cyrus_unbind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$trigger})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_add">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_create_from_format">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_create">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$time= &quot;now&quot;]}${3:${4:[, DateTimeZone \$timezone= NULL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_date_set">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_default_timezone_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_default_timezone_set">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$timezone})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_diff">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_format">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_get_last_errors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_interval_create_from_date_string">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_interval_format">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_isodate_set">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_modify">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_offset_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_parse_from_format">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}, ${2:string \$date})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$date})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_sub">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_sun_info">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$time}, ${2:float \$latitude}, ${3:float \$longitude})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_sunrise">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$timestamp}${2:${3:[, int \$format= SUNFUNCS_RET_STRING]}${4:${5:[, float \$latitude= ini_get(&quot;date.default_latitude&quot;)]}${6:${7:[, float \$longitude= ini_get(&quot;date.default_longitude&quot;)]}${8:${9:[, float \$zenith= ini_get(&quot;date.sunrise_zenith&quot;)]}${10:${11:[, float \$gmt_offset= 0]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_sunset">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$timestamp}${2:${3:[, int \$format= SUNFUNCS_RET_STRING]}${4:${5:[, float \$latitude= ini_get(&quot;date.default_latitude&quot;)]}${6:${7:[, float \$longitude= ini_get(&quot;date.default_longitude&quot;)]}${8:${9:[, float \$zenith= ini_get(&quot;date.sunset_zenith&quot;)]}${10:${11:[, float \$gmt_offset= 0]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_time_set">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_timestamp_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_timestamp_set">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_timezone_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date_timezone_set">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="date">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, int \$timestamp]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_autocommit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, bool \$value]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_bind_param">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:int \$parameter}, ${3:string \$variable}${4:${5:[, int \$parameter-type]}${6:${7:[, int \$data-type= 0]}${8:${9:[, int \$precision= -1]}${10:${11:[, int \$scale= 0]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_client_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_column_privileges">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$qualifier]}${4:${5:[, string \$schema]}${6:${7:[, string \$table-name]}${8:${9:[, string \$column-name]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_columns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$qualifier]}${4:${5:[, string \$schema]}${6:${7:[, string \$table-name]}${8:${9:[, string \$column-name]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_conn_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_conn_errormsg">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$username}, ${3:string \$password}${4:${5:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_cursor_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$statement}${3:${4:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, array \$parameters]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, int \$row_number= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, int \$row_number= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_fetch_both">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, int \$row_number= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, int \$row_number= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, int \$row_number]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_display_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_num">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_precision">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_field_width">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_foreign_keys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$schema}, ${4:string \$table})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_free_stmt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$resource}, ${2:string \$option})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_last_insert_id">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$resource})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_lob_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:int \$colnum}, ${3:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_next_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_pclose">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$resource})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_pconnect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$username}, ${3:string \$password}${4:${5:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$statement}${3:${4:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_primary_keys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$schema}, ${4:string \$table})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_procedure_columns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$schema}, ${4:string \$procedure}, ${5:string \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_procedures">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$schema}, ${4:string \$procedure})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:mixed \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_rollback">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_server_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$resource}, ${2:array \$options}, ${3:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_special_columns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$schema}, ${4:string \$table}, ${5:int \$scope})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_statistics">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$schema}, ${4:string \$table}, ${5:bool \$unique})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_stmt_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$stmt]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_stmt_errormsg">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$stmt]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_table_privileges">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$qualifier]}${4:${5:[, string \$schema]}${6:${7:[, string \$table_name]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="db2_tables">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$qualifier]}${4:${5:[, string \$schema]}${6:${7:[, string \$table-name]}${8:${9:[, string \$table-type]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_fetch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:resource \$handle}, ${3:string \$key}, ${4:int \$skip}, ${5:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_firstkey">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_handlers">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$full_info= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_insert">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:string \$value}, ${3:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_key_split">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_nextkey">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}, ${2:string \$mode}${3:${4:[, string \$handler]}${5:${6:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_optimize">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_popen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}, ${2:string \$mode}${3:${4:[, string \$handler]}${5:${6:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:string \$value}, ${3:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dba_sync">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_add_record">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase}, ${2:array \$record})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_close">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_create">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:array \$fields})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_delete_record">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase}, ${2:int \$record})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_get_header_info">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_get_record_with_names">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase}, ${2:int \$record})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_get_record">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase}, ${2:int \$record})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_numfields">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_numrecords">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_pack">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbase_replace_record">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dbase}, ${2:array \$record}, ${3:int \$record})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_add">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:array \$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_aql">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, string \$server]}${4:${5:[, string \$dbpath]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_chdir">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$newdir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_curr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:\$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_errcode">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$errno]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_errno">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_find">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:array \$constraints}, ${3:mixed \$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_first">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:\$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_flush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_freealllocks">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_freelock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:string \$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_freerlocks">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_getlock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:string \$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_getunique">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:int \$uniqueid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:string \$key}, ${3:\$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_last">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:\$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_lockrel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_next">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:\$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_prev">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:\$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rchperm">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:int \$mask}, ${3:string \$user}, ${4:string \$group})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rcreate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:mixed \$domlist}${3:${4:[, bool \$overwrite]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rcrtexact">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:resource \$relation}${3:${4:[, bool \$overwrite]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rcrtlike">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:resource \$relation}${3:${4:[, int \$overwrite]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_resolve">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_restorepos">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:array \$tuple})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rkeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:mixed \$domlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_ropen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rquery">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, string \$dbpath]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rrename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rsecindex">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:mixed \$domlist}, ${3:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_runlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_rzap">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_savepos">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_setindex">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:string \$idx})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_setindexbynumber">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:int \$idx})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_sql">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, string \$server]}${4:${5:[, string \$dbpath]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_tcl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$sid}, ${2:string \$script})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_tremove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:array \$tuple}${3:${4:[, array &amp;\$current]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_undo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_undoprepare">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_unlockrel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_unselect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_update">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation}, ${2:array \$old}, ${3:array \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_xlockrel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbplus_xunlockrel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$relation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_close">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_compare">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$row}, ${2:array \$row}, ${3:string \$column}${4:${5:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$module}, ${2:string \$host}, ${3:string \$database}, ${4:string \$username}, ${5:string \$password}${6:${7:[, int \$persistent]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_error">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$link}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_query">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$link}, ${2:string \$sql}${3:${4:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dbx_sort">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$result}, ${2:string \$user})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dcgettext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$message}, ${3:int \$category})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dcngettext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$msgid}, ${3:string \$msgid}, ${4:int \$n}, ${5:int \$category})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="deaggregate">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}${2:${3:[, string \$class_name]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="debug_backtrace">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$provide_object= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="debug_print_backtrace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="debug_zval_dump">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="decbin">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dechex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="decoct">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="define_syslog_variables">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="define">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:mixed \$value}${3:${4:[, bool \$case_insensitive= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="defined">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="deg2rad">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="delete">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dgettext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$message})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="die">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_fcntl">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd}, ${2:int \$cmd}${3:${4:[, mixed \$args]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:int \$flags}${3:${4:[, int \$mode= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd}${2:${3:[, int \$len= 1024]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd}, ${2:int \$pos}${3:${4:[, int \$whence= SEEK_SET]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_stat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_tcsetattr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd}, ${2:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_truncate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd}, ${2:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dio_write">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fd}, ${2:string \$data}${3:${4:[, int \$len= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dirname">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="disk_free_space">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="disk_total_space">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="diskfreespace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dl">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$library})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dngettext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$msgid}, ${3:string \$msgid}, ${4:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dns_check_record">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dns_get_mx">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dns_get_record">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}${2:${3:[, int \$type= DNS_ANY]}${4:${5:[, array &amp;\$authns]}${6:${7:[, array &amp;\$addtl]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dom_import_simplexml">
			<behavior>
				<append-static>
					<transform-into>(${1:SimpleXMLElement \$node})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomAttribute->name">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomAttribute->set_value">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomAttribute->specified">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomAttribute->value">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->add_root">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_cdata_section">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_comment">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_element_ns">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$uri}, ${2:string \$name}${3:${4:[, string \$prefix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_element">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_entity_reference">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_processing_instruction">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->create_text_node">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->doctype">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->document_element">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->dump_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$compressionmode]}${4:${5:[, bool \$format]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->dump_mem">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$format]}${3:${4:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->get_element_by_id">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->get_elements_by_tagname">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->html_dump_mem">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocument->xinclude">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocumentType->entities">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocumentType->internal_subset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocumentType->name">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocumentType->notations">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocumentType->public_id">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomDocumentType->system_id">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->get_attribute_node">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->get_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->get_elements_by_tagname">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->has_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->remove_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->set_attribute_node">
			<behavior>
				<append-static>
					<transform-into>(${1:DomNode \$attr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->set_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomElement->tagname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->add_namespace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$uri}, ${2:string \$prefix})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->append_child">
			<behavior>
				<append-static>
					<transform-into>(${1:DOMNode \$newnode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->append_sibling">
			<behavior>
				<append-static>
					<transform-into>(${1:domelement \$newnode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->attributes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->child_nodes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->clone_node">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->dump_node">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->first_child">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->get_content">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->has_attributes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->has_child_nodes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->insert_before">
			<behavior>
				<append-static>
					<transform-into>(${1:domelement \$newnode}, ${2:domelement \$refnode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->is_blank_node">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->last_child">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->next_sibling">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->node_name">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->node_type">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->node_value">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->owner_document">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->parent_node">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->prefix">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->previous_sibling">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->remove_child">
			<behavior>
				<append-static>
					<transform-into>(${1:domtext \$oldchild})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->replace_child">
			<behavior>
				<append-static>
					<transform-into>(${1:domelement \$newnode}, ${2:domelement \$oldnode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->replace_node">
			<behavior>
				<append-static>
					<transform-into>(${1:domelement \$newnode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->set_content">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->set_name">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->set_namespace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$uri}${2:${3:[, string \$prefix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomNode->unlink_node">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomProcessingInstruction->data">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomProcessingInstruction->target">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_new_doc">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$version})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_open_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$mode]}${4:${5:[, array &amp;\$error]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_open_mem">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, int \$mode]}${4:${5:[, array &amp;\$error]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_xmltree">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_xslt_stylesheet_doc">
			<behavior>
				<append-static>
					<transform-into>(${1:DomDocument \$xsl})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_xslt_stylesheet_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xsl})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_xslt_stylesheet">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xsl})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="domxml_xslt_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomXsltStylesheet->process">
			<behavior>
				<append-static>
					<transform-into>(${1:DomDocument \$xml}${2:${3:[, array \$xslt_params]}${4:${5:[, bool \$is_xpath_param]}${6:${7:[, string \$profile_filename]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomXsltStylesheet->result_dump_file">
			<behavior>
				<append-static>
					<transform-into>(${1:DomDocument \$xmldoc}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="DomXsltStylesheet->result_dump_mem">
			<behavior>
				<append-static>
					<transform-into>(${1:DomDocument \$xmldoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="dotnet_load">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$assembly}${2:${3:[, string \$datatype_name]}${4:${5:[, int \$codepage]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="doubleval">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="each">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="easter_date">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$year]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="easter_days">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$year]}${3:${4:[, int \$method= CAL_EASTER_DEFAULT]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ebcdic2ascii">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ebcdic})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="echo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$arg}${2:${3:[, string \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="empty">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_describe">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_dict_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker}, ${2:string \$tag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_free_dict">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_get_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_list_dicts">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_request_dict">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker}, ${2:string \$tag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_request_pwl_dict">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_broker_set_ordering">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$broker}, ${2:string \$tag}, ${3:string \$ordering})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_add_to_personal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_add_to_session">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_check">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_describe">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_get_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_is_in_session">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_quick_check">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$word}${3:${4:[, array &amp;\$suggestions]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_store_replacement">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$mis}, ${3:string \$cor})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="enchant_dict_suggest">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dict}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="end">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ereg_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$replacement}, ${3:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ereg">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, array &amp;\$regs]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="eregi_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$replacement}, ${3:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="eregi">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, array &amp;\$regs]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="error_get_last">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="error_log">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$message}${2:${3:[, int \$message_type= 0]}${4:${5:[, string \$destination]}${6:${7:[, string \$extra_headers]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="error_reporting">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$level]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="escapeshellarg">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="escapeshellcmd">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$command})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="eval">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exec">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$command}${2:${3:[, array &amp;\$output]}${4:${5:[, int &amp;\$return_var]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exif_imagetype">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exif_read_data">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, string \$sections= NULL]}${4:${5:[, bool \$arrays= false]}${6:${7:[, bool \$thumbnail= false]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exif_tagname">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exif_thumbnail">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int &amp;\$width]}${4:${5:[, int &amp;\$height]}${6:${7:[, int &amp;\$imagetype]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exit">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status}${2:${3:[, string \$status]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="exp">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="expect_expectl">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$expect}, ${2:array \$cases}${3:${4:[, array &amp;\$match]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="expect_popen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$command})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="explode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$delimiter}, ${2:string \$string}${3:${4:[, int \$limit]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="expm1">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="extension_loaded">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="extract">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$var}${2:${3:[, int \$extract_type= EXTR_OVERWRITE]}${4:${5:[, string \$prefix]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ezmlm_hash">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$addr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_cancel_monitor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam}, ${2:resource \$fam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_monitor_collection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam}, ${2:string \$dirname}, ${3:int \$depth}, ${4:string \$mask})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_monitor_directory">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam}, ${2:string \$dirname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_monitor_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_next_event">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_open">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$appname]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_pending">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_resume_monitor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam}, ${2:resource \$fam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fam_suspend_monitor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fam}, ${2:resource \$fam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_affected_rows">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_autocommit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, bool \$OnOff]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_blob_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$blob}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_change_user">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$password}${3:${4:[, string \$database]}${5:${6:[, resource \$link_identifier]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_clob_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clob}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_commit">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$hostname]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_create_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$blob}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_create_clob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clob}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_create_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}${4:${5:[, string \$database_options]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_data_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_database_password">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$database_password]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_database">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$database]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_db_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$query}${3:${4:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_db_status">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_drop_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_errno">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_fetch_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_fetch_lengths">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_field_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_field_len">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_index]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_field_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_field_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_get_autostart_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_hostname">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$host_name]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_insert_id">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_list_dbs">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_list_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$table}${3:${4:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_list_tables">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_next_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_password">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$password]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$hostname]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$link_identifier]}${4:${5:[, int \$batch_size]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_read_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$blob}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_read_clob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clob}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$row]}${4:${5:[, mixed \$field]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_rollback">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_rows_fetched">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_select_db">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database_name]}${3:${4:[, resource \$link_identifier]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_set_characterset">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:int \$characterset}${3:${4:[, int \$in_out_both]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_set_lob_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$lob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_set_password">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$user}, ${3:string \$password}, ${4:string \$old})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_set_transaction">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:int \$locking}, ${3:int \$isolation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_start_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}${4:${5:[, string \$database_options]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_stop_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_table_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_tablename">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_username">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$username]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fbsql_warnings">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$OnOff]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fclose">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_add_doc_javascript">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$script}, ${3:string \$script})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_add_template">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:int \$newpage}, ${3:string \$filename}, ${4:string \$template}, ${5:int \$rename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_create">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_enum_values">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:callback \$function}${3:${4:[, mixed \$userdata]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_errno">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$error_code]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_ap">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$field}, ${3:int \$face}, ${4:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_attachment">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:string \$savepath})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:int \$whichflags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_opt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}${3:${4:[, int \$element]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}${3:${4:[, int \$which]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_get_version">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$fdf_document]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_header">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_next_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}${2:${3:[, string \$fieldname]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_open_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$fdf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_remove_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:int \$item})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_save_string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_save">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}${2:${3:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_ap">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$field}, ${3:int \$face}, ${4:string \$filename}, ${5:int \$page})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$url}${3:${4:[, string \$target_frame]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:int \$whichFlags}, ${4:int \$newFlags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_javascript_action">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:int \$trigger}, ${4:string \$script})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_on_import_javascript">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$script}, ${3:bool \$before})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_opt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:int \$element}, ${4:string \$str}, ${5:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_submit_form_action">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:int \$trigger}, ${4:string \$script}, ${5:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_target_frame">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$frame})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$fieldname}, ${3:mixed \$value}${4:${5:[, int \$isName]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fdf_set_version">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fdf}, ${2:string \$version})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="feof">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fflush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fgetc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fgetcsv">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}${2:${3:[, int \$length]}${4:${5:[, string \$delimiter]}${6:${7:[, string \$enclosure]}${8:${9:[, string \$escape]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fgets">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}${2:${3:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fgetss">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}${2:${3:[, int \$length]}${4:${5:[, string \$allowable_tags]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="file_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="file_get_contents">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags= 0]}${4:${5:[, resource \$context]}${6:${7:[, int \$offset= -1]}${8:${9:[, int \$maxlen= -1]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="file_put_contents">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:mixed \$data}${3:${4:[, int \$flags= 0]}${5:${6:[, resource \$context]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags= 0]}${4:${5:[, resource \$context]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fileatime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filectime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filegroup">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fileinode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filemtime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fileowner">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fileperms">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro_fieldcount">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro_fieldname">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro_fieldtype">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro_fieldwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro_retrieve">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$row}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro_rowcount">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filepro">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filesize">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filetype">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_has_var">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:string \$variable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_id">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filtername})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_input_array">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}${2:${3:[, mixed \$definition]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_input">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:string \$variable}${3:${4:[, int \$filter= FILTER_DEFAULT]}${5:${6:[, mixed \$options]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_var_array">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$data}${2:${3:[, mixed \$definition]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="filter_var">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variable}${2:${3:[, int \$filter= FILTER_DEFAULT]}${4:${5:[, mixed \$options]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="finfo_buffer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$finfo}, ${2:string \$string}${3:${4:[, int \$options= FILEINFO_NONE]}${5:${6:[, resource \$context= NULL   )    string buffer     ( string \$string= NULL]}${7:${8:[, int \$options= FILEINFO_NONE]}${9:${10:[, resource \$context= NULL]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="finfo_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$finfo})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="finfo_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$finfo}, ${2:string \$file}${3:${4:[, int \$options= FILEINFO_NONE]}${5:${6:[, resource \$context= NULL   )    string file     ( string \$file_name= NULL]}${7:${8:[, int \$options= FILEINFO_NONE]}${9:${10:[, resource \$context= NULL]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="finfo_open
		finfo->__construct
		">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$options= FILEINFO_NONE]}${3:${4:[, string \$magic_file= NULL   )     __construct     ( int \$options= FILEINFO_NONE]}${5:${6:[, string \$magic_file= NULL]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="finfo_set_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$finfo}, ${2:int \$options}, ${3:int \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="floatval">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="flock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:int \$operation}${3:${4:[, int &amp;\$wouldblock]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="floor">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="flush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fmod">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fnmatch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fopen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$mode}${3:${4:[, bool \$use_include_path= false]}${5:${6:[, resource \$context]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fpassthru">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fprintf">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$format}${3:${4:[, mixed \$args]}${5:${6:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fputcsv">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:array \$fields}${3:${4:[, string \$delimiter]}${5:${6:[, string \$enclosure]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fputs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fread">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="FrenchToJD">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$month}, ${2:int \$day}, ${3:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fribidi_log2vis">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$direction}, ${3:int \$charset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fscanf">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$format}${3:${4:[, mixed &amp;\$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fseek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:int \$offset}${3:${4:[, int \$whence]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fsockopen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}${2:${3:[, int \$port= -1]}${4:${5:[, int &amp;\$errno]}${6:${7:[, string &amp;\$errstr]}${8:${9:[, float \$timeout= ini_get(&quot;default_socket_timeout&quot;)]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fstat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftell">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftok">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pathname}, ${2:string \$proj})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_alloc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:int \$filesize}${3:${4:[, string &amp;\$result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_cdup">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_chdir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_chmod">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:int \$mode}, ${3:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port= 21]}${4:${5:[, int \$timeout= 90]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$command})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_fget">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:resource \$handle}, ${3:string \$remote}, ${4:int \$mode}${5:${6:[, int \$resumepos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_fput">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$remote}, ${3:resource \$handle}, ${4:int \$mode}${5:${6:[, int \$startpos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:int \$option})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$local}, ${3:string \$remote}, ${4:int \$mode}${5:${6:[, int \$resumepos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_login">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$username}, ${3:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_mdtm">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$remote})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_mkdir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_nb_continue">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_nb_fget">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:resource \$handle}, ${3:string \$remote}, ${4:int \$mode}${5:${6:[, int \$resumepos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_nb_fput">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$remote}, ${3:resource \$handle}, ${4:int \$mode}${5:${6:[, int \$startpos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_nb_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$local}, ${3:string \$remote}, ${4:int \$mode}${5:${6:[, int \$resumepos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_nb_put">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$remote}, ${3:string \$local}, ${4:int \$mode}${5:${6:[, int \$startpos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_nlist">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_pasv">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:bool \$pasv})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_put">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$remote}, ${3:string \$local}, ${4:int \$mode}${5:${6:[, int \$startpos= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_pwd">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_quit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_raw">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$command})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_rawlist">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$directory}${3:${4:[, bool \$recursive= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_rename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$oldname}, ${3:string \$newname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_rmdir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:int \$option}, ${3:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_site">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$command})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp}, ${2:string \$remote})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_ssl_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port= 21]}${4:${5:[, int \$timeout= 90]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftp_systype">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$ftp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ftruncate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:int \$size})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="func_get_arg">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="func_get_args">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="func_num_args">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="function_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="fwrite">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$string}${3:${4:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gc_collect_cycles">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gc_disable">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gc_enable">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gc_enabled">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gd_info">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_continent_code_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_country_code_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_country_code3_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_country_name_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_database_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$database= GEOIP_COUNTRY_EDITION]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_db_avail">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$database})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_db_filename">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$database})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_db_get_all_info">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_id_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_isp_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_org_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_record_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_region_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_region_name_by_code">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$country}, ${2:string \$region})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="geoip_time_zone_by_country_and_region">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$country}${2:${3:[, string \$region_code]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_browser">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$user_agent]}${3:${4:[, bool \$return_array= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_called_class">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_cfg_var">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$option})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_class_methods">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_class_vars">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_class">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, object \$object]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_current_user">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_declared_classes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_declared_interfaces">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_defined_constants">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$categorize]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_defined_functions">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_defined_vars">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_extension_funcs">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$module})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_headers">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, int \$format= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_html_translation_table">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$table= HTML_SPECIALCHARS]}${3:${4:[, int \$quote_style= ENT_COMPAT]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_include_path">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_included_files">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_loaded_extensions">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$zend_extensions= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_magic_quotes_gpc">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_magic_quotes_runtime">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_meta_tags">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$use_include_path= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_object_vars">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_parent_class">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$object]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_required_files">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="get_resource_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getallheaders">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getcwd">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getdate">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp= time()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getenv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$varname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gethostbyaddr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gethostbyname">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gethostbynamel">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getimagesize">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, array &amp;\$imageinfo]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getlastmod">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getmxrr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}, ${2:\$mxhosts}${3:${4:[, array &amp;\$weight]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getmygid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getmyinode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getmypid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getmyuid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getopt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$options}${2:${3:[, array \$longopts]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getprotobyname">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getprotobynumber">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getrandmax">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getrusage">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$who= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getservbyname">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$service}, ${2:string \$protocol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="getservbyport">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$port}, ${2:string \$protocol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gettext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$message})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gettimeofday">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$return_float]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gettype">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="glob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}${2:${3:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmdate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, int \$timestamp]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmmktime">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$hour= gmdate(&quot;H&quot;)]}${3:${4:[, int \$minute= gmdate(&quot;i&quot;)]}${5:${6:[, int \$second= gmdate(&quot;s&quot;)]}${7:${8:[, int \$month= gmdate(&quot;n&quot;)]}${9:${10:[, int \$day= gmdate(&quot;j&quot;)]}${11:${12:[, int \$year= gmdate(&quot;Y&quot;)]}${13:${14:[, int \$is_dst= -1]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_abs">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_add">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_and">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_clrbit">
			<behavior>
				<append-static>
					<transform-into>(${1:\$a}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_cmp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_com">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_div_q">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b}${3:${4:[, int \$round= GMP_ROUND_ZERO]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_div_qr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$n}, ${2:resource \$d}${3:${4:[, int \$round= GMP_ROUND_ZERO]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_div_r">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$n}, ${2:resource \$d}${3:${4:[, int \$round= GMP_ROUND_ZERO]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_div">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_divexact">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$n}, ${2:resource \$d})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_fact">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_gcd">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_gcdext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_hamdist">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_init">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$number}${2:${3:[, int \$base= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_intval">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gmpnumber})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_invert">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_jacobi">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_legendre">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_mod">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$n}, ${2:resource \$d})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_mul">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_neg">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_nextprime">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_or">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_perfect_square">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_popcount">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_pow">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$base}, ${2:int \$exp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_powm">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$base}, ${2:resource \$exp}, ${3:resource \$mod})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_prob_prime">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}${2:${3:[, int \$reps= 10]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_random">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$limiter= 20]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_scan0">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:int \$start})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_scan1">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:int \$start})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_setbit">
			<behavior>
				<append-static>
					<transform-into>(${1:\$a}, ${2:int \$index}${3:${4:[, bool \$set_clear= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_sign">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_sqrt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_sqrtrem">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_strval">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gmpnumber}${2:${3:[, int \$base]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_sub">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_testbit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmp_xor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$a}, ${2:resource \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gmstrftime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, int \$timestamp= time()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_adddecryptkey">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$fingerprint}, ${3:string \$passphrase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_addencryptkey">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$fingerprint})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_addsignkey">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$fingerprint}${3:${4:[, string \$passphrase]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_cleardecryptkeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_clearencryptkeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_clearsignkeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_decrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_decryptverify">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$text}, ${3:\$plaintext})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_encrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$plaintext})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_encryptsign">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$plaintext})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_export">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$fingerprint})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_geterror">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_getprotocol">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_import">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$keydata})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_keyinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$pattern})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_setarmor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:int \$armor})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_seterrormode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:int \$errormode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_setsignmode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:int \$signmode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_sign">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$plaintext})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gnupg_verify">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$identifier}, ${2:string \$signed}, ${3:string \$signature}${4:${5:[, string &amp;\$plaintext]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gopher_parsedir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dirent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_extract">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:int \$size}${3:${4:[, int \$extract_type]}${5:${6:[, int \$start]}${7:${8:[, int &amp;\$next]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_stripos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_stristr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, bool \$before_needle]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_strlen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_strpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_strripos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_strrpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_strstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, bool \$before_needle]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="grapheme_substr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}, ${2:int \$start}${3:${4:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="GregorianToJD">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$month}, ${2:int \$day}, ${3:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzclose">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzcompress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$level= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzdecode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzdeflate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$level= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzencode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$level= -1]}${4:${5:[, int \$encoding_mode= FORCE_GZIP]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzeof">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$use_include_path= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzgetc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzgets">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp}, ${2:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzgetss">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp}, ${2:int \$length}${3:${4:[, string \$allowable_tags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzinflate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$length= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzopen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$mode}${3:${4:[, int \$use_include_path= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzpassthru">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzputs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzread">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp}, ${2:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzrewind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzseek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp}, ${2:int \$offset}${3:${4:[, int \$whence= SEEK_SET]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gztell">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzuncompress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$length= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="gzwrite">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zp}, ${2:string \$string}${3:${4:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="__halt_compiler">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruAnnotation::setBorderStyle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width}, ${2:int \$dash}, ${3:int \$dash})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruAnnotation::setHighlightMode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruAnnotation::setIcon">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$icon})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruAnnotation::setOpened">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$opened})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFitB">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFitBH">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$top})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFitBV">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$left})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFitH">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$top})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFitR">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$left}, ${2:float \$bottom}, ${3:float \$right}, ${4:float \$top})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setFitV">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$left})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDestination::setXYZ">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$left}, ${2:float \$top}, ${3:float \$zoom})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::addPage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::addPageLabel">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$first}, ${2:int \$style}, ${3:int \$first}${4:${5:[, string \$prefix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::createOutline">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}${2:${3:[, object \$parent_outline]}${4:${5:[, object \$encoder]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getCurrentEncoder">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getCurrentPage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getEncoder">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getFont">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$fontname}${2:${3:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getInfoAttr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getPageLayout">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getPageMode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::getStreamSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::insertPage">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$page})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::loadJPEG">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::loadPNG">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$deferred= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::loadRaw">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:int \$width}, ${3:int \$height}, ${4:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::loadTTC">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$fontfile}, ${2:int \$index}${3:${4:[, bool \$embed= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::loadTTF">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$fontfile}${2:${3:[, bool \$embed= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::loadType1">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$afmfile}${2:${3:[, string \$pfmfile]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::output">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::readFromStream">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bytes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::resetError">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::resetStream">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::save">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::saveToStream">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setCompressionMode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setCurrentEncoder">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setEncryptionMode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode}${2:${3:[, int \$key_len= 5]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setInfoAttr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:string \$info})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setInfoDateAttr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:int \$year}, ${3:int \$month}, ${4:int \$day}, ${5:int \$hour}, ${6:int \$min}, ${7:int \$sec}, ${8:string \$ind}, ${9:int \$off}, ${10:int \$off})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setOpenAction">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$destination})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setPageLayout">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$layout})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setPageMode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setPagesConfiguration">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$page})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setPassword">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$owner}, ${2:string \$user})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::setPermission">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$permission})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useCNSEncodings">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useCNSFonts">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useCNTEncodings">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useCNTFonts">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useJPEncodings">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useJPFonts">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useKREncodings">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruDoc::useKRFonts">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruEncoder::getByteType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruEncoder::getType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruEncoder::getUnicode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$character})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruEncoder::getWritingMode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getAscent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getCapHeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getDescent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getEncodingName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getFontName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getTextWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getUnicodeWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$character})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::getXHeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruFont::measureText">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text}, ${2:float \$width}, ${3:float \$font}, ${4:float \$char}, ${5:float \$word}${6:${7:[, bool \$word_wrap= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::getBitsPerComponent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::getColorSpace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::getHeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::getSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::getWidth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::setColorMask">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$rmin}, ${2:int \$rmax}, ${3:int \$gmin}, ${4:int \$gmax}, ${5:int \$bmin}, ${6:int \$bmax})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruImage::setMaskImage">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$mask})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruOutline::setDestination">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$destination})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruOutline::setOpened">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$opened})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::arc">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$ray}, ${4:float \$ang}, ${5:float \$ang})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::beginText">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::circle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$ray})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::closePath">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::concat">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$a}, ${2:float \$b}, ${3:float \$c}, ${4:float \$d}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::createDestination">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::createLinkAnnotation">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$rectangle}, ${2:object \$destination})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::createTextAnnotation">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$rectangle}, ${2:string \$text}${3:${4:[, object \$encoder]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::createURLAnnotation">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$rectangle}, ${2:string \$url})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::curveTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::curveTo2">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::curveTo3">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::drawImage">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$image}, ${2:float \$x}, ${3:float \$y}, ${4:float \$width}, ${5:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::ellipse">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$xray}, ${4:float \$yray})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::endPath">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::endText">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::eofill">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::eoFillStroke">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$close_path= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::fill">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::fillStroke">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$close_path= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCharSpace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCMYKFill">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCMYKStroke">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCurrentFont">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCurrentFontSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCurrentPos">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getCurrentTextPos">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getDash">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getFillingColorSpace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getFlatness">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getGMode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getGrayFill">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getGrayStroke">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getHeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getHorizontalScaling">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getLineCap">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getLineJoin">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getLineWidth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getMiterLimit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getRGBFill">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getRGBStroke">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getStrokingColorSpace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getTextLeading">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getTextMatrix">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getTextRenderingMode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getTextRise">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getTextWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getTransMatrix">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getWidth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::getWordSpace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::lineTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::measureText">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text}, ${2:float \$width}${3:${4:[, bool \$wordwrap= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::moveTextPos">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}${3:${4:[, bool \$set_leading= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::moveTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::moveToNextLine">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::rectangle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$width}, ${4:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setCharSpace">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$char})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setCMYKFill">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$c}, ${2:float \$m}, ${3:float \$y}, ${4:float \$k})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setCMYKStroke">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$c}, ${2:float \$m}, ${3:float \$y}, ${4:float \$k})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setDash">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$pattern}, ${2:int \$phase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setFlatness">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$flatness})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setFontAndSize">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$font}, ${2:float \$size})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setGrayFill">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setGrayStroke">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setHeight">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setHorizontalScaling">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$scaling})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setLineCap">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setLineJoin">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$join})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setLineWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setMiterLimit">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$limit})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setRGBFill">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$g}, ${3:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setRGBStroke">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$g}, ${3:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setRotate">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setSize">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$size}, ${2:int \$direction})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setSlideShow">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:float \$disp}, ${3:float \$trans})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setTextLeading">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setTextMatrix">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$a}, ${2:float \$b}, ${3:float \$c}, ${4:float \$d}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setTextRenderingMode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setTextRise">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$rise})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::setWordSpace">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::showText">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::showTextNextLine">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text}${2:${3:[, float \$word_space]}${4:${5:[, float \$char_space]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::stroke">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$close_path= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::textOut">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HaruPage::textRect">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$left}, ${2:float \$top}, ${3:float \$right}, ${4:float \$bottom}, ${5:string \$text}${6:${7:[, int \$align= HaruPage::TALIGN_LEFT]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_algos">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algo}, ${2:string \$filename}${3:${4:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_final">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context}${2:${3:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_hmac_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algo}, ${2:string \$filename}, ${3:string \$key}${4:${5:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_hmac">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algo}, ${2:string \$data}, ${3:string \$key}${4:${5:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_init">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algo}${2:${3:[, int \$options= 0]}${4:${5:[, string \$key= NULL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_update_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context}, ${2:string \$filename}${3:${4:[, resource \$context= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_update_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context}, ${2:resource \$handle}${3:${4:[, int \$length= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash_update">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hash">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algo}, ${2:string \$data}${3:${4:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="header">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, bool \$replace= true]}${4:${5:[, int \$http_response_code]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="headers_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="headers_sent">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string &amp;\$file]}${3:${4:[, int &amp;\$line]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hebrev">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hebrew}${2:${3:[, int \$max_chars_per_line= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hebrevc">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hebrew}${2:${3:[, int \$max_chars_per_line= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hexdec">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hex})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="highlight_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$return= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="highlight_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, bool \$return= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="html_entity_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$quote_style= ENT_COMPAT]}${4:${5:[, string \$charset]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="htmlentities">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$quote_style= ENT_COMPAT]}${4:${5:[, string \$charset]}${6:${7:[, bool \$double_encode= true]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="htmlspecialchars_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$quote_style= ENT_COMPAT]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="htmlspecialchars">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$quote_style= ENT_COMPAT]}${4:${5:[, string \$charset]}${6:${7:[, bool \$double_encode= true]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_build_cookie">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$cookie})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_build_query">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$formdata}${2:${3:[, string \$numeric_prefix]}${4:${5:[, string \$arg_separator]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_build_str">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$query}${2:${3:[, string \$prefix]}${4:${5:[, string \$arg_separator]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_build_url">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$url]}${3:${4:[, mixed \$parts]}${5:${6:[, int \$flags= HTTP_URL_REPLACE]}${7:${8:[, array &amp;\$new_url]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_cache_etag">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$etag]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_cache_last_modified">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp_or_expires]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_chunked_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoded})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_date">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_deflate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_get_request_body_stream">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_get_request_body">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_get_request_headers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_get">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, array \$options]}${4:${5:[, array &amp;\$info]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_head">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$url]}${3:${4:[, array \$options]}${5:${6:[, array &amp;\$info]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_inflate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_match_etag">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$etag}${2:${3:[, bool \$for_range= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_match_modified">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp]}${3:${4:[, bool \$for_range= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_match_request_header">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$header}, ${2:string \$value}${3:${4:[, bool \$match_case= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_negotiate_charset">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$supported}${2:${3:[, array &amp;\$result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_negotiate_content_type">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$supported}${2:${3:[, array &amp;\$result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_negotiate_language">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$supported}${2:${3:[, array &amp;\$result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_parse_cookie">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$cookie}${2:${3:[, int \$flags]}${4:${5:[, array \$allowed_extras]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_parse_headers">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$header})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_parse_message">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$message})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_parse_params">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$param}${2:${3:[, int \$flags= HTTP_PARAMS_DEFAULT]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_persistent_handles_clean">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$ident]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_persistent_handles_count">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_persistent_handles_ident">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ident})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_post_data">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, string \$data]}${4:${5:[, array \$options]}${6:${7:[, array &amp;\$info]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_post_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, array \$data]}${4:${5:[, array \$files]}${6:${7:[, array \$options]}${8:${9:[, array &amp;\$info]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_put_data">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, string \$data]}${4:${5:[, array \$options]}${6:${7:[, array &amp;\$info]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_put_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, string \$file]}${4:${5:[, array \$options]}${6:${7:[, array &amp;\$info]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_put_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, resource \$stream]}${4:${5:[, array \$options]}${6:${7:[, array &amp;\$info]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_redirect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$url]}${3:${4:[, array \$params]}${5:${6:[, bool \$session= false]}${7:${8:[, int \$status]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_request_body_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$fields}, ${2:array \$files})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_request_method_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_request_method_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_request_method_register">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_request_method_unregister">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_request">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method}${2:${3:[, string \$url]}${4:${5:[, string \$body]}${6:${7:[, array \$options]}${8:${9:[, array &amp;\$info]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_content_disposition">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$inline= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_content_type">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$content_type= &quot;application/x-octetstream&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_data">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_last_modified">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_status">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_send_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_support">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$feature= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="http_throttle">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, float \$sec]}${3:${4:[, int \$bytes= 40960]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpDeflateStream::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpDeflateStream::factory">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flags= 0]}${3:${4:[, string \$class_name= &quot;HttpDeflateStream&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpDeflateStream::finish">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$data]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpDeflateStream::flush">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$data]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpDeflateStream::update">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpInflateStream::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpInflateStream::factory">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flags= 0]}${3:${4:[, string \$class_name= &quot;HttpInflateStream&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpInflateStream::finish">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$data]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpInflateStream::flush">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$data]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpInflateStream::update">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::addHeaders">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$headers}${2:${3:[, bool \$append= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$message]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::detach">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::factory">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$raw_message]}${3:${4:[, string \$class_name= &quot;HttpMessage&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::fromEnv">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$message}${2:${3:[, string \$class_name= &quot;HttpMessage&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::fromString">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$raw_message]}${3:${4:[, string \$class_name= &quot;HttpMessage&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getBody">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getHeader">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$header})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getHeaders">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getHttpVersion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getParentMessage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getRequestMethod">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getRequestUrl">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getResponseCode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getResponseStatus">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::getType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::guessContentType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$magic}${2:${3:[, int \$magic_mode= MAGIC_MIME]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::prepend">
			<behavior>
				<append-static>
					<transform-into>(${1:HttpMessage \$message}${2:${3:[, bool \$top= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::reverse">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::send">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setBody">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$body})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setHeaders">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$headers})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setHttpVersion">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$version})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setRequestMethod">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setRequestUrl">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setResponseCode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setResponseStatus">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::setType">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::toMessageTypeObject">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpMessage::toString">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$include_parent= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$global= true]}${3:${4:[, mixed \$add]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::get">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$key]}${3:${4:[, mixed \$type= 0]}${5:${6:[, mixed \$defval= NULL]}${7:${8:[, bool \$delete= false]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::mod">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::set">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::singleton">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$global= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::toArray">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::toString">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpQueryString::xlate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ie}, ${2:string \$oe})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addCookies">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$cookies})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addHeaders">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$headers})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addPostFields">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$post})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addPostFile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$file}${3:${4:[, string \$content_type= &quot;application/x-octetstream&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addPutData">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$put})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addQueryData">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addRawPostData">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$raw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::addSslOptions">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::clearHistory">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$url]}${3:${4:[, int \$request_method= HTTP_METH_GET]}${5:${6:[, array \$options]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::enableCookies">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getContentType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getCookies">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getHeaders">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getHistory">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getMethod">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getOptions">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getPostFields">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getPostFiles">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getPutData">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getPutFile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getQueryData">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getRawPostData">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getRawRequestMessage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getRawResponseMessage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getRequestMessage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseBody">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseCode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseCookies">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flags]}${3:${4:[, array \$allowed_extras]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseData">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseHeader">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$name]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseInfo">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$name]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseMessage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getResponseStatus">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getSslOptions">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::getUrl">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::resetCookies">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$session_only= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::send">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setContentType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setCookies">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$cookies]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setHeaders">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$headers]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setMethod">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$request})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setOptions">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setPostFields">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$post})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setPostFiles">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$post})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setPutData">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$put_data]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setPutFile">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$file]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setQueryData">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setRawPostData">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$raw_post_data]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setSslOptions">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequest::setUrl">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::attach">
			<behavior>
				<append-static>
					<transform-into>(${1:HttpRequest \$request})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, HttpRequest \$request]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::__destruct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::detach">
			<behavior>
				<append-static>
					<transform-into>(${1:HttpRequest \$request})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::getAttachedRequests">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::getFinishedRequests">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::reset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::send">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::socketPerform">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpRequestPool::socketSelect">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::capture">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getBufferSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getCache">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getCacheControl">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getContentDisposition">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getContentType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getData">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getETag">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getFile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getGzip">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getHeader">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$name]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getLastModified">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getRequestBody">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getRequestBodyStream">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getRequestHeaders">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getStream">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::getThrottleDelay">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::guessContentType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$magic}${2:${3:[, int \$magic_mode= MAGIC_MIME]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::redirect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$url]}${3:${4:[, array \$params]}${5:${6:[, bool \$session= false]}${7:${8:[, int \$status]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::send">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$clean_ob= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setBufferSize">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bytes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setCache">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$cache})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setCacheControl">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$control}${2:${3:[, int \$max_age= 0]}${4:${5:[, bool \$must_revalidate= true]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setContentDisposition">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$inline= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setContentType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setData">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setETag">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$etag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setFile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setGzip">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$gzip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setHeader">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, mixed \$value]}${4:${5:[, bool \$replace= true]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setLastModified">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$timestamp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setStream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::setThrottleDelay">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$seconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="HttpResponse::status">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Array2Objrec">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_changeobject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link}, ${2:int \$objid}, ${3:array \$attributes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Children">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_ChildrenObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Close">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:int \$port}, ${3:string \$password}${4:${5:[, string \$username]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_connection_info">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_cp">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:array \$object}, ${3:int \$destination})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Deleteobject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_DocByAnchor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$anchorID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_DocByAnchorObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$anchorID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Document_Attributes">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Document_BodyTag">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw}${2:${3:[, string \$prefix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Document_Content">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Document_SetContent">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw}, ${2:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Document_Size">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_dummy">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link}, ${2:int \$id}, ${3:int \$msgid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_EditText">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Error">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_ErrorMsg">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Free_Document">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetAnchors">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetAnchorsObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetAndLock">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetChildColl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetChildCollObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetChildDocColl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetChildDocCollObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetObject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:mixed \$objectID}${3:${4:[, string \$query]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetObjectByQuery">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:string \$query}, ${3:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetObjectByQueryColl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID}, ${3:string \$query}, ${4:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetObjectByQueryCollObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID}, ${3:string \$query}, ${4:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetObjectByQueryObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:string \$query}, ${3:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetParents">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetParentsObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_getrellink">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link}, ${2:int \$rootid}, ${3:int \$sourceid}, ${4:int \$destid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetRemote">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_getremotechildren">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:string \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetSrcByDestObj">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_GetText">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID}${3:${4:[, mixed \$rootID/prefix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_getusername">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Identify">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link}, ${2:string \$username}, ${3:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_InCollections">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:array \$object}, ${3:array \$collection}, ${4:int \$return})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Info">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_InsColl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID}, ${3:array \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_InsDoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:int \$parentID}, ${3:string \$object}${4:${5:[, string \$text]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_insertanchors">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hwdoc}, ${2:array \$anchorecs}, ${3:array \$dest}${4:${5:[, array \$urlprefixes]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_InsertDocument">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$parent}, ${3:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_InsertObject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:string \$object}, ${3:string \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_mapid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$server}, ${3:int \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Modifyobject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$object}, ${3:array \$remove}, ${4:array \$add}${5:${6:[, int \$mode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_mv">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:array \$object}, ${3:int \$source}, ${4:int \$destination})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_New_Document">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$object}, ${2:string \$document}, ${3:int \$document})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_objrec2array">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$object}${2:${3:[, array \$format]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Output_Document">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_pConnect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:int \$port}, ${3:string \$password}${4:${5:[, string \$username]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_PipeDocument">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID}${3:${4:[, array \$url_prefixes]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Root">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_setlinkroot">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link}, ${2:int \$rootid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_stat">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Unlock">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:int \$objectID})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_Who">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_attribute->key">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_attribute->langdepvalue">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$language})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_attribute->value">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_attribute->values">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_attribute">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$name]}${3:${4:[, string \$value]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->checkin">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->checkout">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->children">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_content->mimetype">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_content->read">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$buffer}, ${2:int \$len})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->content">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->copy">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->dbstat">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->dcstat">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->dstanchors">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->dstofsrcanchor">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_error->count">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_error->reason">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->find">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->ftstat">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hwapi_hgcsp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}${2:${3:[, int \$port]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->hwstat">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->identify">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->info">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->insert">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->insertanchor">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->insertcollection">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->insertdocument">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->link">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->lock">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->move">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_content">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content}, ${2:string \$mimetype})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->assign">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->attreditable">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->count">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->insert">
			<behavior>
				<append-static>
					<transform-into>(${1:HW_API_Attribute \$attribute})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->title">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_object->value">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->object">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->objectbyanchor">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->parents">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_reason->description">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api_reason->type">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->remove">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->replace">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->setcommittedversion">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->srcanchors">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->srcsofdst">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->unlock">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->user">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hw_api->userlist">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$parameter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="hypot">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_add_user">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$user}, ${3:string \$password}${4:${5:[, string \$first_name]}${6:${7:[, string \$middle_name]}${8:${9:[, string \$last_name]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_affected_rows">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_backup">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$source}, ${3:string \$dest}${4:${5:[, int \$options= 0]}${6:${7:[, bool \$verbose= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_add">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$blob}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_cancel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$blob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$blob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_create">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_echo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$blob}, ${2:resource \$link}, ${3:string \$blob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$blob}, ${2:int \$len})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_import">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$file}, ${3:resource \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$blob}, ${3:string \$blob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_blob_open">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$blob}, ${3:string \$blob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection_id= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_commit_ret">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_or_trans_identifier= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_commit">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_or_trans_identifier= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, string \$charset]}${9:${10:[, int \$buffers]}${11:${12:[, int \$dialect]}${13:${14:[, string \$role]}${15:${16:[, int \$sync]}}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_db_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$db}, ${3:int \$action}${4:${5:[, int \$argument= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_delete_user">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$user})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_drop_db">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_errcode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_errmsg">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$query}${2:${3:[, mixed \$bind_arg]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$fetch_flag= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$fetch_flag= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$fetch_flag= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_field_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_free_event_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$event})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_free_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_gen_id">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$generator}${2:${3:[, int \$increment= 1]}${4:${5:[, resource \$link_identifier= NULL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_maintain_db">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$db}, ${3:int \$action}${4:${5:[, int \$argument= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_modify_user">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$user}, ${3:string \$password}${4:${5:[, string \$first_name]}${6:${7:[, string \$middle_name]}${8:${9:[, string \$last_name]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_name_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_num_params">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_param_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$query}, ${2:int \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, string \$charset]}${9:${10:[, int \$buffers]}${11:${12:[, int \$dialect]}${13:${14:[, string \$role]}${15:${16:[, int \$sync]}}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}, ${2:resource \$link}, ${3:string \$query}, ${4:resource \$link}, ${5:string \$trans}, ${6:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_query">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}${3:${4:[, string \$query]}${5:${6:[, int \$bind_args]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_restore">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:string \$source}, ${3:string \$dest}${4:${5:[, int \$options= 0]}${6:${7:[, bool \$verbose= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_rollback_ret">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_or_trans_identifier= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_rollback">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_or_trans_identifier= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_server_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service}, ${2:int \$action})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_service_attach">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:string \$dba}, ${3:string \$dba})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_service_detach">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$service})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_set_event_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$event}, ${2:string \$event}${3:${4:[, string \$event_name2]}${5:${6:[, string \$...   )   resource ibase_set_event_handler    ( resource \$connection]}${7:${8:[, callback \$event_handler]}${9:${10:[, string \$event_name1]}${11:${12:[, string \$event_name2]}${13:${14:[, string \$...]}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_timefmt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, int \$columntype]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_trans">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$trans_args]}${3:${4:[, resource \$link_identifier]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ibase_wait_event">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$event}${2:${3:[, string \$event_name2]}${4:${5:[, string \$...   )   string ibase_wait_event    ( resource \$connection]}${6:${7:[, string \$event_name1]}${8:${9:[, string \$event_name2]}${10:${11:[, string \$...]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_get_encoding">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$type= &quot;all&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_mime_decode_headers">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoded}${2:${3:[, int \$mode= 0]}${4:${5:[, string \$charset= ini_set(&quot;iconv.internal_encoding&quot;)]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_mime_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoded}${2:${3:[, int \$mode= 0]}${4:${5:[, string \$charset= ini_set(&quot;iconv.internal_encoding&quot;)]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_mime_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$field}, ${2:string \$field}${3:${4:[, array \$preferences= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_set_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$type}, ${2:string \$charset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_strlen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$charset= ini_set(&quot;iconv.internal_encoding&quot;)]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_strpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset= 0]}${5:${6:[, string \$charset= ini_set(&quot;iconv.internal_encoding&quot;)]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_strrpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, string \$charset= ini_set(&quot;iconv.internal_encoding&quot;)]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv_substr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:int \$offset}${3:${4:[, int \$length= 0]}${5:${6:[, string \$charset= ini_set(&quot;iconv.internal_encoding&quot;)]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iconv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$in}, ${2:string \$out}, ${3:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_frame_long_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$frameId})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_frame_short_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$frameId})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_genre_id">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$genre})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_genre_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_genre_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$genre})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_tag">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$version= ID3_BEST]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_get_version">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_remove_tag">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$version= ID3_V1_0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="id3_set_tag">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:array \$tag}${3:${4:[, int \$version= ID3_V1_0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="idate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, int \$timestamp= time()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="idn_strerror">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$errorcode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="idn_to_ascii">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$utf}${2:${3:[, int &amp;\$errorcode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="idn_to_utf8">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ascii}${2:${3:[, int &amp;\$errorcode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_affected_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_blobinfile_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_byteasvarchar">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database]}${3:${4:[, string \$userid]}${5:${6:[, string \$password]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_copy_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_create_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:int \$mode}, ${3:string \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_create_char">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_do">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_errormsg">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$errorcode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, mixed \$position]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_fieldproperties">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_fieldtypes">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_free_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_free_char">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_get_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_get_char">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_getsqlca">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_htmltbl_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, string \$html_table_options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_nullformat">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database]}${3:${4:[, string \$userid]}${5:${6:[, string \$password]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}, ${2:resource \$link}, ${3:mixed \$blobidarray}${4:${5:[, int \$cursor_def]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}, ${2:resource \$link}${3:${4:[, int \$cursor_type]}${5:${6:[, mixed \$blobidarray]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_textasvarchar">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_update_blob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid}, ${2:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifx_update_char">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid}, ${2:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_close_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_create_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_free_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_open_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_read_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid}, ${2:int \$nbytes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_seek_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid}, ${2:int \$mode}, ${3:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_tell_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ifxus_write_slob">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bid}, ${2:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ignore_user_abort">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$value]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_add_server">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}, ${2:string \$comment}, ${3:string \$server}, ${4:int \$port}, ${5:string \$host}, ${6:int \$rights}, ${7:int \$start})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_get_dir_security">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_get_script_map">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual}, ${3:string \$script})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_get_server_by_comment">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$comment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_get_server_by_path">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_get_server_rights">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_get_service_state">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$service})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_remove_server">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_set_app_settings">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual}, ${3:string \$application})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_set_dir_security">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual}, ${3:int \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_set_script_map">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual}, ${3:string \$script}, ${4:string \$engine}, ${5:int \$allow})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_set_server_rights">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server}, ${2:string \$virtual}, ${3:int \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_start_server">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_start_service">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$service})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_stop_server">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$server})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iis_stop_service">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$service})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="image_type_to_extension">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$imagetype}${2:${3:[, bool \$include_dot]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="image_type_to_mime_type">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$imagetype})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="image2wbmp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}${4:${5:[, int \$threshold]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagealphablending">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:bool \$blendmode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageantialias">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:bool \$enabled})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagearc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$cx}, ${3:int \$cy}, ${4:int \$width}, ${5:int \$height}, ${6:int \$start}, ${7:int \$end}, ${8:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagechar">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$font}, ${3:int \$x}, ${4:int \$y}, ${5:string \$c}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecharup">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$font}, ${3:int \$x}, ${4:int \$y}, ${5:string \$c}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorallocate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorallocatealpha">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}, ${5:int \$alpha})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorclosest">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorclosestalpha">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}, ${5:int \$alpha})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorclosesthwb">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolordeallocate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorexact">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorexactalpha">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}, ${5:int \$alpha})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolormatch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorresolve">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorresolvealpha">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}, ${5:int \$alpha})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorset">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$index}, ${3:int \$red}, ${4:int \$green}, ${5:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorsforindex">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolorstotal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecolortransparent">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, int \$color]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageconvolution">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:array \$matrix}, ${3:float \$div}, ${4:float \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecopy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dst}, ${2:resource \$src}, ${3:int \$dst}, ${4:int \$dst}, ${5:int \$src}, ${6:int \$src}, ${7:int \$src}, ${8:int \$src})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecopymerge">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dst}, ${2:resource \$src}, ${3:int \$dst}, ${4:int \$dst}, ${5:int \$src}, ${6:int \$src}, ${7:int \$src}, ${8:int \$src}, ${9:int \$pct})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecopymergegray">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dst}, ${2:resource \$src}, ${3:int \$dst}, ${4:int \$dst}, ${5:int \$src}, ${6:int \$src}, ${7:int \$src}, ${8:int \$src}, ${9:int \$pct})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecopyresampled">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dst}, ${2:resource \$src}, ${3:int \$dst}, ${4:int \$dst}, ${5:int \$src}, ${6:int \$src}, ${7:int \$dst}, ${8:int \$dst}, ${9:int \$src}, ${10:int \$src})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecopyresized">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dst}, ${2:resource \$src}, ${3:int \$dst}, ${4:int \$dst}, ${5:int \$src}, ${6:int \$src}, ${7:int \$dst}, ${8:int \$dst}, ${9:int \$src}, ${10:int \$src})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreate">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromgd">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromgd2">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromgd2part">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:int \$srcX}, ${3:int \$srcY}, ${4:int \$width}, ${5:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromgif">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromjpeg">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefrompng">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromstring">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromwbmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromxbm">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatefromxpm">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagecreatetruecolor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagedashedline">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$x}, ${5:int \$y}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagedestroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageellipse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$cx}, ${3:int \$cy}, ${4:int \$width}, ${5:int \$height}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefilledarc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$cx}, ${3:int \$cy}, ${4:int \$width}, ${5:int \$height}, ${6:int \$start}, ${7:int \$end}, ${8:int \$color}, ${9:int \$style})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefilledellipse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$cx}, ${3:int \$cy}, ${4:int \$width}, ${5:int \$height}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefilledpolygon">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:array \$points}, ${3:int \$num}, ${4:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefilledrectangle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$x}, ${5:int \$y}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefilltoborder">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$border}, ${5:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefilter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$filtertype}${3:${4:[, int \$arg1]}${5:${6:[, int \$arg2]}${7:${8:[, int \$arg3]}${9:${10:[, int \$arg4]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefontheight">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefontwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageftbbox">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$size}, ${2:float \$angle}, ${3:string \$fontfile}, ${4:string \$text}${5:${6:[, array \$extrainfo]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagefttext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:float \$size}, ${3:float \$angle}, ${4:int \$x}, ${5:int \$y}, ${6:int \$color}, ${7:string \$fontfile}, ${8:string \$text}${9:${10:[, array \$extrainfo]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagegammacorrect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:float \$inputgamma}, ${3:float \$outputgamma})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagegd">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagegd2">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}${4:${5:[, int \$chunk_size]}${6:${7:[, int \$type]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagegif">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagegrabscreen">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagegrabwindow">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$window}${2:${3:[, int \$client_area= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageinterlace">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, int \$interlace= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageistruecolor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagejpeg">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}${4:${5:[, int \$quality]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagelayereffect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$effect})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageline">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$x}, ${5:int \$y}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imageloadfont">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepalettecopy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$destination}, ${2:resource \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepng">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}${4:${5:[, int \$quality]}${6:${7:[, int \$filters]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepolygon">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:array \$points}, ${3:int \$num}, ${4:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepsbbox">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text}, ${2:resource \$font}, ${3:int \$size}, ${4:string \$text}, ${5:resource \$font}, ${6:int \$size}, ${7:int \$space}, ${8:int \$tightness}, ${9:float \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepsencodefont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$font}, ${2:string \$encodingfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepsextendfont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$font}, ${2:float \$extend})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepsfreefont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepsloadfont">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepsslantfont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$font}, ${2:float \$slant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagepstext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:string \$text}, ${3:resource \$font}, ${4:int \$size}, ${5:int \$foreground}, ${6:int \$background}, ${7:int \$x}, ${8:int \$y}${9:${10:[, int \$space= 0]}${11:${12:[, int \$tightness= 0]}${13:${14:[, float \$angle= 0.0]}${15:${16:[, int \$antialias_steps= 4]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagerectangle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$x}, ${5:int \$y}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagerotate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:float \$angle}, ${3:int \$bgd}${4:${5:[, int \$ignore_transparent= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesavealpha">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:bool \$saveflag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesetbrush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:resource \$brush})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesetpixel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$x}, ${3:int \$y}, ${4:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesetstyle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:array \$style})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesetthickness">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$thickness})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesettile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:resource \$tile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagestring">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$font}, ${3:int \$x}, ${4:int \$y}, ${5:string \$string}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagestringup">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:int \$font}, ${3:int \$x}, ${4:int \$y}, ${5:string \$string}, ${6:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesx">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagesy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagetruecolortopalette">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:bool \$dither}, ${3:int \$ncolors})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagettfbbox">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$size}, ${2:float \$angle}, ${3:string \$fontfile}, ${4:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagettftext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:float \$size}, ${3:float \$angle}, ${4:int \$x}, ${5:int \$y}, ${6:int \$color}, ${7:string \$fontfile}, ${8:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagetypes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagewbmp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}${2:${3:[, string \$filename]}${4:${5:[, int \$foreground]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imagexbm">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$image}, ${2:string \$filename}${3:${4:[, int \$foreground]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::adaptiveBlurImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::adaptiveResizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows}${3:${4:[, bool \$fit= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::adaptiveSharpenImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::adaptiveThresholdImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::addImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::addNoiseImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$noise}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::affineTransformImage">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickDraw \$matrix})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::annotateImage">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickDraw \$draw}, ${2:float \$x}, ${3:float \$y}, ${4:float \$angle}, ${5:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::appendImages">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$stack})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::averageImages">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::blackThresholdImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::blurImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}${3:${4:[, int \$channel]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::borderImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$bordercolor}, ${2:int \$width}, ${3:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::charcoalImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::chopImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::clipImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::clipPathImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pathname}, ${2:bool \$inside})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::clone">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::clutImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$lookup}${2:${3:[, float \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::coalesceImages">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::colorFloodfillImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$fill}, ${2:float \$fuzz}, ${3:mixed \$bordercolor}, ${4:int \$x}, ${5:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::colorizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$colorize}, ${2:mixed \$opacity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::combineImages">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$channelType})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::commentImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$comment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::compareImageChannels">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$image}, ${2:int \$channelType}, ${3:int \$metricType})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::compareImageLayers">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::compareImages">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$compare}, ${2:int \$metric})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::compositeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$composite}, ${2:int \$composite}, ${3:int \$x}, ${4:int \$y}${5:${6:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$files]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::contrastImage">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$sharpen})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::contrastStretchImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$black}, ${2:float \$white}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::convolveImage">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$kernel}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::cropImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::cropThumbnailImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::current">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::cycleColormapImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$displace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::deconstructImages">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::despeckleImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::destroy">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::displayImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$servername})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::displayImages">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$servername})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::distortImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method}, ${2:array \$arguments}, ${3:bool \$bestfit})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::drawImage">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickDraw \$draw})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::edgeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::embossImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::enhanceImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::equalizeImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::evaluateImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$op}, ${2:float \$constant}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::flattenImages">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::flipImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::flopImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::frameImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$matte}, ${2:int \$width}, ${3:int \$height}, ${4:int \$inner}, ${5:int \$outer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::fxImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$expression}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::gammaImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$gamma}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::gaussianBlurImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getCompression">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getCompressionQuality">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getCopyright">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getFilename">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getFormat">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getHomeURL">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageBackgroundColor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageBlob">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageBluePrimary">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageBorderColor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageChannelDepth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$channelType})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageChannelDistortion">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$reference}, ${2:int \$channel}, ${3:int \$metric})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageChannelExtrema">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$channel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageChannelMean">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$channel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageChannelStatistics">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageColormapColor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageColors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageColorspace">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageCompose">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageDelay">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageDepth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageDispose">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageDistortion">
			<behavior>
				<append-static>
					<transform-into>(${1:MagickWand \$reference}, ${2:int \$metric})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageExtrema">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageFilename">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageFormat">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageGamma">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageGeometry">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageGreenPrimary">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageHeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageHistogram">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageIndex">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageInterlaceScheme">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageInterpolateMethod">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageIterations">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageLength">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageMagickLicense">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageMatte">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageMatteColor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageOrientation">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImagePage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImagePixelColor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$x}, ${2:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageProfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageProfiles">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern= &quot;*&quot;]}${3:${4:[, bool \$only_names= true]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageProperties">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern= &quot;*&quot;]}${3:${4:[, bool \$only_names= true]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageProperty">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageRedPrimary">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageRegion">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageRenderingIntent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageResolution">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImagesBlob">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageScene">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageSignature">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageTicksPerSecond">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageTotalInkDensity">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageUnits">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageVirtualPixelMethod">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageWhitePoint">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getImageWidth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getInterlaceScheme">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getIteratorIndex">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getNumberImages">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getOption">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getPackageName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getPage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getPixelIterator">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getPixelRegionIterator">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$x}, ${2:int \$y}, ${3:int \$columns}, ${4:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getQuantumDepth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getQuantumRange">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getReleaseDate">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getResource">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getResourceLimit">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getSamplingFactors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getSizeOffset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::getVersion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::hasNextImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::hasPreviousImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::identifyImage">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$appendRawOutput= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::implodeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::labelImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$label})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::levelImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$blackPoint}, ${2:float \$gamma}, ${3:float \$whitePoint}${4:${5:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::linearStretchImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$blackPoint}, ${2:float \$whitePoint})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::magnifyImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::mapImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$map}, ${2:bool \$dither})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::matteFloodfillImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$alpha}, ${2:float \$fuzz}, ${3:mixed \$bordercolor}, ${4:int \$x}, ${5:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::medianFilterImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::minifyImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::modulateImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$brightness}, ${2:float \$saturation}, ${3:float \$hue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::montageImage">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickDraw \$draw}, ${2:string \$tile}, ${3:string \$thumbnail}, ${4:int \$mode}, ${5:string \$frame})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::morphImages">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::mosaicImages">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::motionBlurImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}, ${3:float \$angle}${4:${5:[, int \$channel= Imagick::CHANNEL_DEFAULT]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::negateImage">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$gray}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::newImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cols}, ${2:int \$rows}, ${3:mixed \$background}${4:${5:[, string \$format]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::newPseudoImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows}, ${3:string \$pseudoString})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::nextImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::normalizeImage">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$channel]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::oilPaintImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::optimizeImageLayers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::orderedPosterizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$threshold}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::colorFloodfillImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$fill}, ${2:float \$fuzz}, ${3:mixed \$bordercolor}, ${4:int \$x}, ${5:int \$y}${6:${7:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::paintOpaqueImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$target}, ${2:mixed \$fill}, ${3:float \$fuzz}${4:${5:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::paintTransparentImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$target}, ${2:float \$alpha}, ${3:float \$fuzz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::pingImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::pingImageBlob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::pingImageFile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}${2:${3:[, string \$fileName]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::polaroidImage">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickDraw \$properties}, ${2:float \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::posterizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$levels}, ${2:bool \$dither})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::previewImages">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$preview})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::previousImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::profileImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$profile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::quantizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$numberColors}, ${2:int \$colorspace}, ${3:int \$treedepth}, ${4:bool \$dither}, ${5:bool \$measureError})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::quantizeImages">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$numberColors}, ${2:int \$colorspace}, ${3:int \$treedepth}, ${4:bool \$dither}, ${5:bool \$measureError})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::queryFontMetrics">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickDraw \$properties}, ${2:string \$text}${3:${4:[, bool \$multiline]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::queryFonts">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern= &quot;*&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::queryFormats">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern= &quot;*&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::radialBlurImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$angle}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::raiseImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y}, ${5:bool \$raise})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::randomThresholdImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$low}, ${2:float \$high}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::readImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::readImageBlob">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$image}${2:${3:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::readImageFile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$filehandle}${2:${3:[, string \$fileName]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::reduceNoiseImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::removeImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::removeImageProfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::render">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::resampleImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:int \$filter}, ${4:float \$blur})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::resizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows}, ${3:int \$filter}, ${4:float \$blur}${5:${6:[, bool \$fit= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::rollImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$x}, ${2:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::rotateImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$background}, ${2:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::roundCorners">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}${3:${4:[, float \$stroke_width= 10]}${5:${6:[, float \$displace= 5]}${7:${8:[, float \$size_correction= -6]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::sampleImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::scaleImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cols}, ${2:int \$rows}${3:${4:[, bool \$fit= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::separateImageChannel">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$channel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::sepiaToneImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setBackgroundColor">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$background})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setCompression">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$compression})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setCompressionQuality">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$quality})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setFilename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setFirstIterator">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setFont">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setFormat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$replace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageBackgroundColor">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$background})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageBias">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$bias})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageBluePrimary">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageBorderColor">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$border})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageChannelDepth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$channel}, ${2:int \$depth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageColormapColor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}, ${2:ImagickPixel \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageColorspace">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$colorspace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageCompose">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$compose})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageCompression">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$compression})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageDelay">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$delay})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageDepth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$depth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageDispose">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dispose})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageExtent">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageFilename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageFormat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageGamma">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$gamma})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageGreenPrimary">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageInterlaceScheme">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$interlace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageInterpolateMethod">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageIterations">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$iterations})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageMatte">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$matte})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageMatteColor">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$matte})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageOpacity">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$opacity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageOrientation">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$orientation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImagePage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageProfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$profile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageProperty">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageRedPrimary">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageRenderingIntent">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$rendering})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageResolution">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageScene">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$scene})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageTicksPerSecond">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$ticks})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageType">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageUnits">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$units})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageVirtualPixelMethod">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setImageWhitePoint">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setInterlaceScheme">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$interlace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setIteratorIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setLastIterator">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setOption">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setPage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setResolution">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setResourceLimit">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$type}, ${2:int \$limit})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setSamplingFactors">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$factors})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setSize">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setSizeOffset">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows}, ${3:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::setType">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::shadeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$gray}, ${2:float \$azimuth}, ${3:float \$elevation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::shadowImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$opacity}, ${2:float \$sigma}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::sharpenImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}${3:${4:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::shaveImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::shearImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$background}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::sigmoidalContrastImage">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$sharpen}, ${2:float \$alpha}, ${3:float \$beta}${4:${5:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::sketchImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}, ${3:float \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::solarizeImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::spliceImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::spreadImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::steganoImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$watermark}, ${2:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::stereoImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::stripImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::swirlImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::textureImage">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$texture})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::thresholdImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$threshold}${2:${3:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::thumbnailImage">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$columns}, ${2:int \$rows}${3:${4:[, bool \$fit= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::tintImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$tint}, ${2:mixed \$opacity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::transformImage">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$crop}, ${2:string \$geometry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::transposeImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::transverseImage">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::trimImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$fuzz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::uniqueImageColors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::unsharpMaskImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$radius}, ${2:float \$sigma}, ${3:float \$amount}, ${4:float \$threshold}${5:${6:[, int \$channel= Imagick::CHANNEL_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::valid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::vignetteImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$blackPoint}, ${2:float \$whitePoint}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::waveImage">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$amplitude}, ${2:float \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::whiteThresholdImage">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::writeImage">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Imagick::writeImages">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:bool \$adjoin})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::affine">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$affine})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::annotation">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::arc">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$sx}, ${2:float \$sy}, ${3:float \$ex}, ${4:float \$ey}, ${5:float \$sd}, ${6:float \$ed})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::bezier">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$coordinates})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::circle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$ox}, ${2:float \$oy}, ${3:float \$px}, ${4:float \$py})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::clone">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::color">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:int \$paintMethod})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::comment">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$comment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::composite">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$compose}, ${2:float \$x}, ${3:float \$y}, ${4:float \$width}, ${5:float \$height}, ${6:Imagick \$compositeWand})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::destroy">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::ellipse">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$ox}, ${2:float \$oy}, ${3:float \$rx}, ${4:float \$ry}, ${5:float \$start}, ${6:float \$end})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getClipPath">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getClipRule">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getClipUnits">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFillColor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFillOpacity">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFillRule">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFont">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFontFamily">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFontSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFontStyle">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getFontWeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getGravity">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeAntialias">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeColor">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickPixel \$stroke})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeDashArray">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeDashOffset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeLineCap">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeLineJoin">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeMiterLimit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeOpacity">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getStrokeWidth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getTextAlignment">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getTextAntialias">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getTextDecoration">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getTextEncoding">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getTextUnderColor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::getVectorGraphics">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::line">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$sx}, ${2:float \$sy}, ${3:float \$ex}, ${4:float \$ey})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::matte">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:int \$paintMethod})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathClose">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToQuadraticBezierAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToQuadraticBezierRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToQuadraticBezierSmoothRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToSmoothAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathCurveToSmoothRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathEllipticArcAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$rx}, ${2:float \$ry}, ${3:float \$x}, ${4:bool \$large}, ${5:bool \$sweep}, ${6:float \$x}, ${7:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathEllipticArcRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$rx}, ${2:float \$ry}, ${3:float \$x}, ${4:bool \$large}, ${5:bool \$sweep}, ${6:float \$x}, ${7:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathFinish">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathLineToAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathLineToHorizontalAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathLineToHorizontalRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathLineToRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathLineToVerticalAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathLineToVerticalRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathMoveToAbsolute">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathMoveToRelative">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pathStart">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::point">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::polygon">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$coordinates})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::polyline">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$coordinates})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pop">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::popClipPath">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::popDefs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::popPattern">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::push">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pushClipPath">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pushDefs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::pushPattern">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:float \$x}, ${3:float \$y}, ${4:float \$width}, ${5:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::rectangle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::render">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::rotate">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::roundRectangle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y}, ${5:float \$rx}, ${6:float \$ry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::scale">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setClipPath">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setClipRule">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fill})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setClipUnits">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$clip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFillAlpha">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$opacity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFillColor">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickPixel \$fill})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFillOpacity">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$fillOpacity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFillPatternURL">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$fill})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFillRule">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fill})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFont">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFontFamily">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFontSize">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$pointsize})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFontStretch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fontStretch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFontStyle">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$style})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setFontWeight">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setGravity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$gravity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeAlpha">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$opacity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeAntialias">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$stroke})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeColor">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickPixel \$stroke})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeDashArray">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$dashArray})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeDashOffset">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dash})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeLineCap">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$linecap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeLineJoin">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$linejoin})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeMiterLimit">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$miterlimit})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeOpacity">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$stroke})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokePatternURL">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$stroke})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setStrokeWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$stroke})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setTextAlignment">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$alignment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setTextAntialias">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$antiAlias})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setTextDecoration">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$decoration})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setTextEncoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setTextUnderColor">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickPixel \$under})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setVectorGraphics">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xml})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::setViewbox">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$x}, ${2:int \$y}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::skewX">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::skewY">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickDraw::translate">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$color]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::destroy">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::getColor">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$normalized= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::getColorAsString">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::getColorCount">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::getColorValue">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::getHSL">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::isSimilar">
			<behavior>
				<append-static>
					<transform-into>(${1:ImagickPixel \$color}, ${2:float \$fuzz})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::setColor">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::setColorValue">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$color}, ${2:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixel::setHSL">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$hue}, ${2:float \$saturation}, ${3:float \$luminosity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$wand})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::destroy">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::getCurrentIteratorRow">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::getIteratorRow">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::getNextIteratorRow">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::getPreviousIteratorRow">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::newPixelIterator">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$wand})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::newPixelRegionIterator">
			<behavior>
				<append-static>
					<transform-into>(${1:Imagick \$wand}, ${2:int \$x}, ${3:int \$y}, ${4:int \$columns}, ${5:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::resetIterator">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::setIteratorFirstRow">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::setIteratorLastRow">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::setIteratorRow">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ImagickPixelIterator::syncIterator">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_8bit">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_alerts">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_append">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox}, ${3:string \$message}${4:${5:[, string \$options= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_base64">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_body">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}${3:${4:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_bodystruct">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}, ${3:string \$section})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_check">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_clearflag_full">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$sequence}, ${3:string \$flag}${4:${5:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}${2:${3:[, int \$flag= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_createmailbox">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}${3:${4:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_deletemailbox">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_errors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_expunge">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_fetch_overview">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$sequence}${3:${4:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_fetchbody">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}, ${3:string \$section}${4:${5:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_fetchheader">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}${3:${4:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_fetchstructure">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}${3:${4:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_get_quota">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$quota})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_get_quotaroot">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$quota})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_getacl">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_getmailboxes">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$ref}, ${3:string \$pattern})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_getsubscribed">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$ref}, ${3:string \$pattern})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_header">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_headerinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}${3:${4:[, int \$fromlength= 0]}${5:${6:[, int \$subjectlength= 0]}${7:${8:[, string \$defaulthost= NULL]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_headers">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_last_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_list">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$ref}, ${3:string \$pattern})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_listmailbox">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_listscan">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$ref}, ${3:string \$pattern}, ${4:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_listsubscribed">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_lsub">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$ref}, ${3:string \$pattern})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_mail_compose">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$envelope}, ${2:array \$body})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_mail_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$msglist}, ${3:string \$mailbox}${4:${5:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_mail_move">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$msglist}, ${3:string \$mailbox}${4:${5:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_mail">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$to}, ${2:string \$subject}, ${3:string \$message}${4:${5:[, string \$additional_headers= NULL]}${6:${7:[, string \$cc= NULL]}${8:${9:[, string \$bcc= NULL]}${10:${11:[, string \$rpath= NULL]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_mailboxmsginfo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_mime_header_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_msgno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$uid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_num_msg">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_num_recent">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$mailbox}, ${2:string \$username}, ${3:string \$password}${4:${5:[, int \$options= NIL]}${6:${7:[, int \$n_retries= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_ping">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_qprint">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_renamemailbox">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$old}, ${3:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_reopen">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox}${3:${4:[, int \$options= 0]}${5:${6:[, int \$n_retries= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_rfc822_parse_adrlist">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$address}, ${2:string \$default})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_rfc822_parse_headers">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$headers}${2:${3:[, string \$defaulthost= &quot;UNKNOWN&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_rfc822_write_address">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$mailbox}, ${2:string \$host}, ${3:string \$personal})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_savebody">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:mixed \$file}, ${3:int \$msg}${4:${5:[, string \$part_number= &quot;&quot;]}${6:${7:[, int \$options= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_scanmailbox">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_search">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$criteria}${3:${4:[, int \$options= SE_FREE]}${5:${6:[, string \$charset= NIL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_set_quota">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$quota}, ${3:int \$quota})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_setacl">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox}, ${3:string \$id}, ${4:string \$rights})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_setflag_full">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$sequence}, ${3:string \$flag}${4:${5:[, int \$options= NIL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_sort">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$criteria}, ${3:int \$reverse}${4:${5:[, int \$options= 0]}${6:${7:[, string \$search_criteria= NULL]}${8:${9:[, string \$charset= NIL]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox}, ${3:int \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_subscribe">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_thread">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}${2:${3:[, int \$options= SE_FREE]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_timeout">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$timeout}${2:${3:[, int \$timeout= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_uid">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_undelete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:int \$msg}${3:${4:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_unsubscribe">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$imap}, ${2:string \$mailbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_utf7_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_utf7_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="imap_utf8">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$mime})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="implode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$glue}, ${2:array \$pieces}, ${3:array \$pieces})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="import_request_variables">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$types}${2:${3:[, string \$prefix]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="in_array">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$needle}, ${2:array \$haystack}${3:${4:[, bool \$strict]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inclued_get_data">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inet_ntop">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$in})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inet_pton">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$address})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_autocommit_state">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_autocommit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_charset">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, array \$options]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_cursor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_errno">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_errsqlstate">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, array \$params]}${4:${5:[, string \$types]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_fetch_proc_return">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_field_length">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_field_nullable">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_field_precision">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_field_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_next_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$database]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, array \$options]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}${3:${4:[, array \$params]}${5:${6:[, string \$types]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_result_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:integer \$position})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_rollback">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_set_environment">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ingres_unbuffered_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}${3:${4:[, array \$params]}${5:${6:[, string \$types]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ini_alter">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ini_get_all">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$extension]}${3:${4:[, bool \$details= true]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ini_get">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$varname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ini_restore">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$varname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ini_set">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$varname}, ${2:string \$newvalue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inotify_add_watch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$inotify}, ${2:string \$pathname}, ${3:int \$mask})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inotify_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inotify_queue_len">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$inotify})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inotify_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$inotify})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="inotify_rm_watch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$inotify}, ${2:int \$watch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="interface_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$interface}${2:${3:[, bool \$autoload= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="intl_error_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$error})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="intl_get_error_code">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="intl_get_error_message">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="intl_is_failure">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$error})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="intval">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var}${2:${3:[, int \$base= 10]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ip2long">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iptcembed">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$iptcdata}, ${2:string \$jpeg}${3:${4:[, int \$spool]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iptcparse">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$iptcblock})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_a">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object}, ${2:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_array">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_bool">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_buffer">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_callable">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$name}${2:${3:[, bool \$syntax_only= false]}${4:${5:[, string &amp;\$callable_name]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_dir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_double">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_executable">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_finite">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_float">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_infinite">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_int">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_integer">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_link">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_long">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_nan">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_null">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_numeric">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_object">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_readable">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_real">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_resource">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_scalar">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_soap_fault">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_string">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_subclass_of">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$object}, ${2:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_unicode">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_uploaded_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_writable">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="is_writeable">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="isset">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var}${2:${3:[, mixed \$var]}${4:${5:[, \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iterator_apply">
			<behavior>
				<append-static>
					<transform-into>(${1:Traversable \$iterator}, ${2:callback \$function}${3:${4:[, array \$args]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iterator_count">
			<behavior>
				<append-static>
					<transform-into>(${1:Traversable \$iterator})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="iterator_to_array">
			<behavior>
				<append-static>
					<transform-into>(${1:Traversable \$iterator}${2:${3:[, bool \$use_keys= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="java_last_exception_clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="java_last_exception_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JDDayOfWeek">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$julianday}${2:${3:[, int \$mode= CAL_DOW_DAYNO]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JDMonthName">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$julianday}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JDToFrench">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$juliandaycount})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JDToGregorian">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$julianday})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="jdtojewish">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$juliandaycount}${2:${3:[, bool \$hebrew= false]}${4:${5:[, int \$fl= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JDToJulian">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$julianday})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="jdtounix">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$jday})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JewishToJD">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$month}, ${2:int \$day}, ${3:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="join">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="jpeg2wbmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$jpegname}, ${2:string \$wbmpname}, ${3:int \$dest}, ${4:int \$dest}, ${5:int \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="json_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$json}${2:${3:[, bool \$assoc= false]}${4:${5:[, int \$depth= 512]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="json_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value}${2:${3:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="json_last_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="JulianToJD">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$month}, ${2:int \$day}, ${3:int \$year})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_chpass_principal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$principal}, ${3:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_create_principal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$principal}${3:${4:[, string \$password]}${5:${6:[, array \$options]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_delete_principal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$principal})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_flush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_get_policies">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_get_principal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$principal})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_get_principals">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_init_with_password">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$admin}, ${2:string \$realm}, ${3:string \$principal}, ${4:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="kadm5_modify_principal">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$principal}, ${3:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="key">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="krsort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ksort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lcfirst">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lcg_value">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lchgrp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:mixed \$group})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lchown">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:mixed \$user})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_8859_to_t61">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_add">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:array \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_bind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$bind_rdn= NULL]}${4:${5:[, string \$bind_password= NULL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_close">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_compare">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:string \$attribute}, ${4:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$hostname= NULL]}${3:${4:[, int \$port= 389]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_count_entries">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_dn2ufn">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_err2str">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$errno})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_errno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_explode_dn">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dn}, ${2:int \$with})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_first_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_first_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_first_reference">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_get_attributes">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_get_dn">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_get_entries">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:int \$option}, ${3:\$retval})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_get_values_len">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result}, ${3:string \$attribute})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_get_values">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result}, ${3:string \$attribute})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_list">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$base}, ${3:string \$filter}${4:${5:[, array \$attributes]}${6:${7:[, int \$attrsonly]}${8:${9:[, int \$sizelimit]}${10:${11:[, int \$timelimit]}${12:${13:[, int \$deref]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_mod_add">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:array \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_mod_del">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:array \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_mod_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:array \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_modify">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:array \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_next_attribute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_next_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_next_reference">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_parse_reference">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$entry}, ${3:\$referrals})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_parse_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result}, ${3:\$errcode}${4:${5:[, string &amp;\$matcheddn]}${6:${7:[, string &amp;\$errmsg]}${8:${9:[, array &amp;\$referrals]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$base}, ${3:string \$filter}${4:${5:[, array \$attributes]}${6:${7:[, int \$attrsonly]}${8:${9:[, int \$sizelimit]}${10:${11:[, int \$timelimit]}${12:${13:[, int \$deref]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_rename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dn}, ${3:string \$newrdn}, ${4:string \$newparent}, ${5:bool \$deleteoldrdn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_sasl_bind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$binddn= NULL]}${4:${5:[, string \$password= NULL]}${6:${7:[, string \$sasl_mech= NULL]}${8:${9:[, string \$sasl_realm= NULL]}${10:${11:[, string \$sasl_authc_id= NULL]}${12:${13:[, string \$sasl_authz_id= NULL]}${14:${15:[, string \$props= NULL]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_search">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$base}, ${3:string \$filter}${4:${5:[, array \$attributes]}${6:${7:[, int \$attrsonly]}${8:${9:[, int \$sizelimit]}${10:${11:[, int \$timelimit]}${12:${13:[, int \$deref]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:int \$option}, ${3:mixed \$newval})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_set_rebind_proc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:callback \$callback})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_sort">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:resource \$result}, ${3:string \$sortfilter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_start_tls">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_t61_to_8859">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ldap_unbind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="levenshtein">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str}, ${3:string \$str}, ${4:string \$str}, ${5:int \$cost}, ${6:int \$cost}, ${7:int \$cost})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="libxml_clear_errors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="libxml_get_errors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="libxml_get_last_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="libxml_set_streams_context">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$streams})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="libxml_use_internal_errors">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$use_errors= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="link">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}, ${2:string \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="linkinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="list">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$varname}${2:${3:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="locale_get_default">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="locale_set_default">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="localeconv">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="localtime">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp= time()]}${3:${4:[, bool \$is_associative= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="log">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg}${2:${3:[, float \$base= M_E]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="log10">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="log1p">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="long2ip">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$proper})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lstat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ltrim">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$charlist]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lzf_compress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lzf_decompress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="lzf_optimized_for">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_checkstatus">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_completeauthorizations">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_connectionerror">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_deletetrans">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_destroyconn">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_destroyengine">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_getcell">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier}, ${3:string \$column}, ${4:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_getcellbynum">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier}, ${3:int \$column}, ${4:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_getcommadelimited">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_getheader">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier}, ${3:int \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_initconn">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_initengine">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$location})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_iscommadelimited">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_maxconntimeout">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$secs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_monitor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_numcolumns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_numrows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_parsecommadelimited">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_responsekeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_responseparam">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier}, ${3:string \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_returnstatus">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_setblocking">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$tf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_setdropfile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_setip">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:string \$host}, ${3:int \$port})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_setssl_cafile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:string \$cafile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_setssl_files">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:string \$sslkeyfile}, ${3:string \$sslcertfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_setssl">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:string \$host}, ${3:int \$port})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_settimeout">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$seconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_sslcert_gen_hash">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_transactionssent">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_transinqueue">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_transkeyval">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier}, ${3:string \$key}, ${4:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_transnew">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_transsend">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_uwait">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$microsecs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_validateidentifier">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$tf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_verifyconnection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$tf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="m_verifysslcert">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$conn}, ${2:int \$tf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mail">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$to}, ${2:string \$subject}, ${3:string \$message}${4:${5:[, string \$additional_headers]}${6:${7:[, string \$additional_parameters]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_determine_best_xfer_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_create">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_extract_part_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail}, ${2:mixed \$filename}${3:${4:[, callback \$callbackfunc]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_extract_part">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail}, ${2:string \$msgbody}${3:${4:[, callback \$callbackfunc]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_extract_whole_part_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail}, ${2:string \$filename}${3:${4:[, callback \$callbackfunc]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_get_part_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_get_part">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail}, ${2:string \$mimesection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_get_structure">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_parse_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_msg_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$mimemail}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_rfc822_parse_addresses">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$addresses})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_stream_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sourcefp}, ${2:resource \$destfp}, ${3:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mailparse_uudecode_all">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="main">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="max">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$values}, ${2:mixed \$value}, ${3:mixed \$value}${4:${5:[, mixed \$value3...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_affected_rows
		maxdb->affected_rows
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_autocommit
		 maxdb->auto_commit
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:bool \$mode}, ${3:bool \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_bind_param">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_bind_result">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_change_user
		maxdb->change_user
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$user}, ${3:string \$password}, ${4:string \$database}, ${5:string \$user}, ${6:string \$password}, ${7:string \$database})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_character_set_name
		maxdb->character_set_name
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_client_encoding">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_close_long_data
		maxdb->close_long_data
		">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_close
		maxdb->close
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_commit
		maxdb->commit
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_connect_errno">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_connect_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_connect
		maxdb
		">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$host]}${3:${4:[, string \$username]}${5:${6:[, string \$passwd]}${7:${8:[, string \$dbname]}${9:${10:[, int \$port]}${11:${12:[, string \$socket   )     __construct     ( string \$host]}${13:${14:[, string \$username]}${15:${16:[, string \$passwd]}${17:${18:[, string \$dbname]}${19:${20:[, int \$port]}${21:${22:[, string \$socket]}}}}}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_data_seek
		result->data_seek
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$offset}, ${3:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_debug">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$debug})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_disable_reads_from_master
		maxdb->disable_reads_from_master
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_disable_rpl_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_dump_debug_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_embedded_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$dbname]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_enable_reads_from_master">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_enable_rpl_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_errno
		maxdb->errno
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_escape_string">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_execute">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_array
		result->fetch_array
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$resulttype   )    mixed     fetch_array     ( int \$resulttype]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_assoc
		maxdb->fetch_assoc
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_field_direct
		result->fetch_field_direct
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$fieldnr}, ${3:int \$fieldnr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_field
		result->fetch_field
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_fields
		result->fetch_fields
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_lengths
		result->lengths
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_object
		result->fetch_object
		">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch_row
		result->fetch_row
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_fetch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_field_count
		maxdb->field_count
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_field_seek
		result->field_seek
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$fieldnr}, ${3:int \$fieldnr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_field_tell
		result->current_field
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_free_result
		result->free
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_client_info">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_client_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_host_info
		maxdb->get_host_info
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_metadata">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_proto_info
		maxdb->protocol_version
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_server_info
		maxdb->server_info
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_get_server_version">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_info
		maxdb->info
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_insert_id
		maxdb->insert_id
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_kill
		maxdb->kill
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:int \$processid}, ${3:int \$processid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_master_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_more_results
		maxdb->more_results
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_multi_query
		maxdb->multi_query
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_next_result
		maxdb->next_result
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_num_fields
		result->field_count
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_options
		maxdb->options
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:int \$option}, ${3:mixed \$value}, ${4:int \$option}, ${5:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_param_count">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_ping
		maxdb->ping
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_prepare
		maxdb->prepare
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_query
		maxdb->query
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}, ${3:string \$query}${4:${5:[, int \$resultmode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_real_connect
		maxdb->real_connect
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}${2:${3:[, string \$hostname]}${4:${5:[, string \$username]}${6:${7:[, string \$passwd]}${8:${9:[, string \$dbname]}${10:${11:[, int \$port]}${12:${13:[, string \$socket   )    bool     real_connect     ( string \$hostname]}${14:${15:[, string \$username]}${16:${17:[, string \$passwd]}${18:${19:[, string \$dbname]}${20:${21:[, int \$port]}${22:${23:[, string \$socket]}}}}}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_real_escape_string
		maxdb->real_escape_string
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$escapestr}, ${3:string \$escapestr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_real_query
		maxdb->real_query
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_report">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_rollback
		maxdb->rollback
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_rpl_parse_enabled">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_rpl_probe">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_rpl_query_type
		maxdb->rpl_query_type
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_select_db
		maxdb->select_db
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$dbname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_send_long_data">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_send_query
		maxdb->send_query
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_server_end">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_server_init">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$server]}${3:${4:[, array \$groups]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_set_opt">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_sqlstate
		maxdb->sqlstate
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_ssl_set
		maxdb->ssl_set
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link}, ${2:string \$key}, ${3:string \$cert}, ${4:string \$ca}, ${5:string \$capath}, ${6:string \$cipher}, ${7:string \$key}, ${8:string \$cert}, ${9:string \$ca}, ${10:string \$capath}, ${11:string \$cipher})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stat
		maxdb->stat
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_affected_rows
		maxdb_stmt->affected_rows
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_bind_param
		stmt->bind_param
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:string \$types}, ${3:\$var}, ${4:resource \$stmt}, ${5:string \$types}, ${6:\$var}, ${7:string \$types}, ${8:\$var}${9:${10:[, mixed &amp;\$...   )    bool      bind_param     ( string \$types]}${11:${12:[, mixed &amp;\$var1]}${13:${14:[, mixed &amp;\$...]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_bind_result
		stmt->bind_result
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:\$var}${3:${4:[, mixed &amp;\$...   )    bool     bind_result     ( mixed &amp;\$var1]}${5:${6:[, mixed &amp;\$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_close_long_data
		stmt->close_long_data
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:int \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_close
		maxdb_stmt->close
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_data_seek
		stmt->data_seek
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$offset}, ${3:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_errno
		maxdb_stmt->errno
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_error
		maxdb_stmt->error
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_execute
		stmt->execute
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_fetch
		stmt->fetch
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_free_result
		stmt->free_result
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_init
		maxdb->stmt_init
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_num_rows
		stmt->num_rows
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_param_count
		stmt->param_count
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_prepare
		stmt->prepare
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_reset
		stmt->reset
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_result_metadata">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_send_long_data
		stmt->send_long_data
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:int \$param}, ${3:string \$data}, ${4:int \$param}, ${5:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_sqlstate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_stmt_store_result
		maxdb->store_result
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_store_result
		maxdb->store_result
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_thread_id
		maxdb->thread_id
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_thread_safe">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_use_result
		maxdb->use_result
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="maxdb_warning_count
		maxdb->warning_count
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_check_encoding">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$var= NULL]}${3:${4:[, string \$encoding= mb_internal_encoding()]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_convert_case">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:int \$mode}${3:${4:[, string \$encoding= mb_internal_encoding()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_convert_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$to}${3:${4:[, mixed \$from_encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_convert_kana">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$option]}${4:${5:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_convert_variables">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$to}, ${2:mixed \$from}, ${3:\$vars}${4:${5:[, mixed &amp;\$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_decode_mimeheader">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_decode_numericentity">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:array \$convmap}, ${3:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_detect_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, mixed \$encoding_list= mb_detect_order()]}${4:${5:[, bool \$strict= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_detect_order">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$encoding_list]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_encode_mimeheader">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$charset]}${4:${5:[, string \$transfer_encoding]}${6:${7:[, string \$linefeed]}${8:${9:[, int \$indent]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_encode_numericentity">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:array \$convmap}, ${3:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_match">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, string \$option= &quot;msr&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$replacement}, ${3:string \$string}${4:${5:[, string \$option= &quot;msr&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search_getpos">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search_getregs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search_init">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, string \$pattern]}${4:${5:[, string \$option= &quot;msr&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search_pos">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern]}${3:${4:[, string \$option= &quot;ms&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search_regs">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern]}${3:${4:[, string \$option= &quot;ms&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search_setpos">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$position})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg_search">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$pattern]}${3:${4:[, string \$option= &quot;ms&quot;]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_ereg">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, array \$regs]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_eregi_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$replace}, ${3:string \$string}${4:${5:[, string \$option= &quot;msri&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_eregi">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, array \$regs]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_get_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$type= &quot;all&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_http_input">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$type= &quot;&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_http_output">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_internal_encoding">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$encoding= mb_internal_encoding()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_language">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$language]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_list_encodings">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_output_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$contents}, ${2:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_parse_str">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoded}${2:${3:[, array &amp;\$result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_preferred_mime_name">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_regex_encoding">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_regex_set_options">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$options= &quot;msr&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_send_mail">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$to}, ${2:string \$subject}, ${3:string \$message}${4:${5:[, string \$additional_headers= NULL]}${6:${7:[, string \$additional_parameter= NULL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_split">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, int \$limit= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strcut">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:int \$start}${3:${4:[, int \$length]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strimwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:int \$start}, ${3:int \$width}${4:${5:[, string \$trimmarker]}${6:${7:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_stripos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_stristr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, bool \$part]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strlen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strrchr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, bool \$part]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strrichr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, bool \$part]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strripos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strrpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, bool \$part]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strtolower">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$encoding= mb_internal_encoding()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strtoupper">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$encoding= mb_internal_encoding()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_strwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_substitute_character">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$substrchar]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_substr_count">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mb_substr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:int \$start}${3:${4:[, int \$length]}${5:${6:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_cbc">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$key}, ${3:string \$data}, ${4:int \$mode}${5:${6:[, string \$iv   )   string mcrypt_cbc    ( string \$cipher]}${7:${8:[, string \$key]}${9:${10:[, string \$data]}${11:${12:[, int \$mode]}${13:${14:[, string \$iv]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_cfb">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$key}, ${3:string \$data}, ${4:int \$mode}, ${5:string \$iv}, ${6:string \$cipher}, ${7:string \$key}, ${8:string \$data}, ${9:int \$mode}${10:${11:[, string \$iv]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_create_iv">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$size}${2:${3:[, int \$source= MCRYPT_DEV_RANDOM]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_decrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$cipher}, ${2:string \$key}, ${3:string \$data}, ${4:string \$mode}${5:${6:[, string \$iv]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_ecb">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$key}, ${3:string \$data}, ${4:int \$mode}, ${5:string \$cipher}, ${6:string \$key}, ${7:string \$data}, ${8:int \$mode}${9:${10:[, string \$iv]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_get_algorithms_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_get_block_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_get_iv_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_get_key_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_get_modes_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_get_supported_key_sizes">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_is_block_algorithm_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_is_block_algorithm">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_is_block_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_enc_self_test">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_encrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$cipher}, ${2:string \$key}, ${3:string \$data}, ${4:string \$mode}${5:${6:[, string \$iv]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_generic_deinit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_generic_end">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_generic_init">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td}, ${2:string \$key}, ${3:string \$iv})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_generic">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_get_block_size">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$cipher}, ${3:string \$module})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_get_cipher_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$cipher})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_get_iv_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$cipher}, ${2:string \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_get_key_size">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$cipher}, ${3:string \$module})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_list_algorithms">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$lib_dir= ini_get(&quot;mcrypt.algorithms_dir&quot;)]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_list_modes">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$lib_dir= ini_get(&quot;mcrypt.algorithms_dir&quot;)]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_get_algo_block_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algorithm}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_get_algo_key_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algorithm}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_get_supported_key_sizes">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algorithm}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_is_block_algorithm_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$mode}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_is_block_algorithm">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algorithm}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_is_block_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$mode}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algorithm}, ${2:string \$algorithm}, ${3:string \$mode}, ${4:string \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_module_self_test">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$algorithm}${2:${3:[, string \$lib_dir]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mcrypt_ofb">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cipher}, ${2:string \$key}, ${3:string \$data}, ${4:int \$mode}, ${5:string \$iv}, ${6:string \$cipher}, ${7:string \$key}, ${8:string \$data}, ${9:int \$mode}${10:${11:[, string \$iv]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="md5_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="md5">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mdecrypt_generic">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$td}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:mixed \$var}${3:${4:[, int \$flag]}${5:${6:[, int \$expire]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::addServer">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port]}${4:${5:[, bool \$persistent]}${6:${7:[, int \$weight]}${8:${9:[, int \$timeout]}${10:${11:[, int \$retry_interval]}${12:${13:[, bool \$status]}${14:${15:[, callback \$failure_callback]}${16:${17:[, int \$timeoutms]}}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::close">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port]}${4:${5:[, int \$timeout]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="memcache_debug">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$on})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::decrement">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}${2:${3:[, int \$value]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::delete">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}${2:${3:[, int \$timeout]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::flush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::get">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}${2:${3:[, int &amp;\$flags   )   array Memcache::get    ( array \$keys]}${4:${5:[, array &amp;\$flags]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::getExtendedStats">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$type]}${3:${4:[, int \$slabid]}${5:${6:[, int \$limit]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::getServerStatus">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::getStats">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$type]}${3:${4:[, int \$slabid]}${5:${6:[, int \$limit]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::getVersion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::increment">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}${2:${3:[, int \$value]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::pconnect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port]}${4:${5:[, int \$timeout]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::replace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:mixed \$var}${3:${4:[, int \$flag]}${5:${6:[, int \$expire]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::set">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:mixed \$var}${3:${4:[, int \$flag]}${5:${6:[, int \$expire]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::setCompressThreshold">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$threshold}${2:${3:[, float \$min_savings]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Memcache::setServerParams">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port]}${4:${5:[, int \$timeout]}${6:${7:[, int \$retry_interval]}${8:${9:[, bool \$status]}${10:${11:[, callback \$failure_callback]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="memory_get_peak_usage">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$real_usage= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="memory_get_usage">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$real_usage= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="metaphone">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, int \$phones= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="method_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$object}, ${2:string \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mhash_count">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mhash_get_block_size">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hash})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mhash_get_hash_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hash})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mhash_keygen_s2k">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hash}, ${2:string \$password}, ${3:string \$salt}, ${4:int \$bytes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mhash">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$hash}, ${2:string \$data}${3:${4:[, string \$key]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="microtime">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$get_as_float]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mime_content_type">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="min">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$values}, ${2:mixed \$value}, ${3:mixed \$value}${4:${5:[, mixed \$value3...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ming_keypress">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$char})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ming_setcubicthreshold">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ming_setscale">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$scale})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ming_setswfcompression">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$level})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ming_useconstants">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$use})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ming_useswfversion">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$version})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mkdir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pathname}${2:${3:[, int \$mode= 0777]}${4:${5:[, bool \$recursive= false]}${6:${7:[, resource \$context]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mktime">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$hour= date(&quot;H&quot;)]}${3:${4:[, int \$minute= date(&quot;i&quot;)]}${5:${6:[, int \$second= date(&quot;s&quot;)]}${7:${8:[, int \$month= date(&quot;n&quot;)]}${9:${10:[, int \$day= date(&quot;j&quot;)]}${11:${12:[, int \$year= date(&quot;Y&quot;)]}${13:${14:[, int \$is_dst= -1]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="money_format">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}, ${2:float \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:bool \$auto})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_find_one">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$ns}, ${3:array \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridchunk_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$chunk})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridchunk_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$file}, ${2:int \$num})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridchunk_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridchunk})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfile_chunk_num">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfile_chunk_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfile_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfile_filename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfile_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfile_write">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfile}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfs_find">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfs}, ${2:array \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfs_init">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$db}, ${3:string \$prefix})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfs_list">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfs}, ${2:array \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_gridfs_store">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$gridfs}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_has_next">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$cursor})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_insert">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$ns}, ${3:array \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_next">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$cursor})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$ns}, ${3:array \$query}, ${4:int \$skip}, ${5:int \$limit}, ${6:array \$sort}, ${7:array \$fields}, ${8:array \$hint})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$ns}, ${3:array \$query}, ${4:bool \$justOne})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mongo_update">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$ns}, ${3:array \$query}, ${4:array \$newobj}, ${5:bool \$upsert})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="move_uploaded_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$destination})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_back">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:\$compCode}, ${3:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_begin">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:array \$beginOptions}, ${3:\$compCode}, ${4:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:resource \$hobj}, ${3:int \$options}, ${4:\$compCode}, ${5:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_cmit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:\$compCode}, ${3:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_conn">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$qManagerName}, ${2:\$hconn}, ${3:\$compCode}, ${4:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_connx">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$qManagerName}, ${2:\$connOptions}, ${3:\$hconn}, ${4:\$compCode}, ${5:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_disc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:\$compCode}, ${3:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hConn}, ${2:resource \$hObj}, ${3:\$md}, ${4:\$gmo}, ${5:\$bufferLength}, ${6:\$msg}, ${7:\$data}, ${8:\$compCode}, ${9:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_inq">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:resource \$hobj}, ${3:int \$selectorCount}, ${4:array \$selectors}, ${5:int \$intAttrCount}, ${6:\$intAttr}, ${7:int \$charAttrLength}, ${8:\$charAttr}, ${9:\$compCode}, ${10:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_open">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:\$objDesc}, ${3:int \$option}, ${4:\$hobj}, ${5:\$compCode}, ${6:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_put">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hConn}, ${2:resource \$hObj}, ${3:\$md}, ${4:\$pmo}, ${5:string \$message}, ${6:\$compCode}, ${7:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_put1">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:\$objDesc}, ${3:\$msgDesc}, ${4:\$pmo}, ${5:string \$buffer}, ${6:\$compCode}, ${7:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$hconn}, ${2:resource \$hobj}, ${3:int \$selectorcount}, ${4:array \$selectors}, ${5:int \$intattrcount}, ${6:array \$intattrs}, ${7:int \$charattrlength}, ${8:array \$charattrs}, ${9:\$compCode}, ${10:\$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mqseries_strerror">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$reason})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:string \$port})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_count">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_create">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}${2:${3:[, string \$classname]}${4:${5:[, string \$data]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_disconnect">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_find">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_get_array">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_get_data">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_get">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:string \$name}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_inc">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_listvar">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_lock">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_plugin">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:string \$val}${3:${4:[, string \$param]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_randstr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_set_array">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:array \$tuples})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_set_data">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_set">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:string \$name}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_timeout">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}${2:${3:[, int \$param]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_uniq">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$param}${2:${3:[, string \$classname]}${4:${5:[, string \$data]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msession_unlock">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$session}, ${2:int \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_get_queue">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$key}${2:${3:[, int \$perms]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_queue_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_receive">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$queue}, ${2:int \$desiredmsgtype}, ${3:\$msgtype}, ${4:int \$maxsize}, ${5:\$message}${6:${7:[, bool \$unserialize]}${8:${9:[, int \$flags]}${10:${11:[, int &amp;\$errorcode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_remove_queue">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$queue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_send">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$queue}, ${2:int \$msgtype}, ${3:mixed \$message}${4:${5:[, bool \$serialize]}${6:${7:[, bool \$blocking]}${8:${9:[, int &amp;\$errorcode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_set_queue">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$queue}, ${2:array \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msg_stat_queue">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$queue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_affected_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$hostname]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_create_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_createdb">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_data_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_db_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$query}${3:${4:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_dbname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_drop_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fetch_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_field_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_field_len">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_field_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_field_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fieldflags">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fieldlen">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fieldname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fieldtable">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_fieldtype">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_list_dbs">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_list_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$tablename}${3:${4:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_list_tables">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_numfields">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_numrows">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$hostname]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_regcase">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}${3:${4:[, mixed \$field]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_select_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql_tablename">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="msql">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_bind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}, ${2:string \$param}, ${3:\$var}, ${4:int \$type}${5:${6:[, bool \$is_output= false]}${7:${8:[, bool \$is_null= false]}${9:${10:[, int \$maxlen= -1]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$servername]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, bool \$new_link]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_data_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt}${2:${3:[, bool \$skip_results= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type= MSSQL_BOTH]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_fetch_batch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_fetch_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_field_length">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$offset= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$offset= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_field_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$offset= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_free_statement">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stmt})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_get_last_message">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_guid_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$binary}${2:${3:[, bool \$short_format= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_init">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$sp}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_min_error_severity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$severity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_min_message_severity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$severity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_next_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$servername]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, bool \$new_link]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$link_identifier]}${4:${5:[, int \$batch_size= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}, ${3:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_rows_affected">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mssql_select_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mt_getrandmax">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mt_rand">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$min}, ${2:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mt_srand">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$seed]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_affected_rows">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_change_user">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$password}${3:${4:[, string \$database]}${5:${6:[, resource \$link_identifier]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_client_encoding">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$server= ini_get(&quot;mysql.default_host&quot;)]}${3:${4:[, string \$username= ini_get(&quot;mysql.default_user&quot;)]}${5:${6:[, string \$password= ini_get(&quot;mysql.default_password&quot;)]}${7:${8:[, bool \$new_link= false]}${9:${10:[, int \$client_flags= 0]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_create_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_data_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_db_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}${3:${4:[, mixed \$field]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_db_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$query}${3:${4:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_drop_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_errno">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$unescaped})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type= MYSQL_BOTH]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_fetch_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_fetch_lengths">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, string \$class_name]}${4:${5:[, array \$params]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_field_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_field_len">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_field_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_field_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_get_client_info">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_get_host_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_get_proto_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_get_server_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_insert_id">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_list_dbs">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_list_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$table}${3:${4:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_list_processes">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_list_tables">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$server= ini_get(&quot;mysql.default_host&quot;)]}${3:${4:[, string \$username= ini_get(&quot;mysql.default_user&quot;)]}${5:${6:[, string \$password= ini_get(&quot;mysql.default_password&quot;)]}${7:${8:[, int \$client_flags]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_ping">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_real_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$unescaped}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}${3:${4:[, mixed \$field= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_select_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_set_charset">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$charset}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_stat">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_tablename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$i})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_thread_id">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysql_unbuffered_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_bind_param">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_bind_result">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_client_encoding">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_disable_reads_from_master
		mysqli->disable_reads_from_master
		">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_disable_rpl_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_enable_reads_from_master">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_enable_rpl_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_escape_string">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_execute">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_fetch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_get_metadata">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_master_query">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_param_count">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_report">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_rpl_parse_enabled">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_rpl_probe">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_rpl_query_type
		mysqli->rpl_query_type
		">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_send_long_data">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_send_query
		mysqli->send_query
		">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link}, ${2:string \$query}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_set_opt">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="mysqli_slave_query">
			<behavior>
				<append-static>
					<transform-into>(${1:mysqli \$link}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="natcasesort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="natsort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_addch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_addchnstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$s}, ${2:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_addchstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$s})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_addnstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$s}, ${2:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_addstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_assume_default_colors">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fg}, ${2:int \$bg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_attroff">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$attributes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_attron">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$attributes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_attrset">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$attributes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_baudrate">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_beep">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_bkgd">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$attrchar})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_bkgdset">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$attrchar})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_border">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$right}, ${3:int \$top}, ${4:int \$bottom}, ${5:int \$tl}, ${6:int \$tr}, ${7:int \$bl}, ${8:int \$br})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_bottom_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_can_change_color">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_cbreak">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_clrtobot">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_clrtoeol">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_color_content">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$color}, ${2:\$r}, ${3:\$g}, ${4:\$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_color_set">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pair})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_curs_set">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$visibility})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_def_prog_mode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_def_shell_mode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_define_key">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$definition}, ${2:int \$keycode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_del_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_delay_output">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$milliseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_delch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_deleteln">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_delwin">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_doupdate">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_echo">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_echochar">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$character})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_end">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_erase">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_erasechar">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_filter">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_flash">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_flushinp">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_getch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_getmaxyx">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:\$y}, ${3:\$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_getmouse">
			<behavior>
				<append-static>
					<transform-into>(${1:\$mevent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_getyx">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:\$y}, ${3:\$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_halfdelay">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$tenth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_has_colors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_has_ic">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_has_il">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_has_key">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$keycode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_hide_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_hline">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$charattr}, ${2:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_inch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_init_color">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$color}, ${2:int \$r}, ${3:int \$g}, ${4:int \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_init_pair">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pair}, ${2:int \$fg}, ${3:int \$bg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_insch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$character})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_insdelln">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$count})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_insertln">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_insstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_instr">
			<behavior>
				<append-static>
					<transform-into>(${1:\$buffer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_isendwin">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_keyok">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$keycode}, ${2:bool \$enable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_keypad">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:bool \$bf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_killchar">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_longname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_meta">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:bool \$})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mouse_trafo">
			<behavior>
				<append-static>
					<transform-into>(${1:\$y}, ${2:\$x}, ${3:bool \$toscreen})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mouseinterval">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$milliseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mousemask">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$newmask}, ${2:\$oldmask})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_move_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel}, ${2:int \$startx}, ${3:int \$starty})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_move">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvaddch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:int \$c})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvaddchnstr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:string \$s}, ${4:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvaddchstr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:string \$s})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvaddnstr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:string \$s}, ${4:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvaddstr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:string \$s})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvcur">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$old}, ${2:int \$old}, ${3:int \$new}, ${4:int \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvdelch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvgetch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvhline">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:int \$attrchar}, ${4:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvinch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvvline">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$y}, ${2:int \$x}, ${3:int \$attrchar}, ${4:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_mvwaddstr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$y}, ${3:int \$x}, ${4:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_napms">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$milliseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_new_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_newpad">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$rows}, ${2:int \$cols})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_newwin">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$rows}, ${2:int \$cols}, ${3:int \$y}, ${4:int \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_nl">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_nocbreak">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_noecho">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_nonl">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_noqiflush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_noraw">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_pair_content">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pair}, ${2:\$f}, ${3:\$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_panel_above">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_panel_below">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_panel_window">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_pnoutrefresh">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pad}, ${2:int \$pminrow}, ${3:int \$pmincol}, ${4:int \$sminrow}, ${5:int \$smincol}, ${6:int \$smaxrow}, ${7:int \$smaxcol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_prefresh">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pad}, ${2:int \$pminrow}, ${3:int \$pmincol}, ${4:int \$sminrow}, ${5:int \$smincol}, ${6:int \$smaxrow}, ${7:int \$smaxcol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_putp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_qiflush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_raw">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_refresh">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_replace_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel}, ${2:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_reset_prog_mode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_reset_shell_mode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_resetty">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_savetty">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_scr_dump">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_scr_init">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_scr_restore">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_scr_set">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_scrl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$count})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_show_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_attr">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_attroff">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$intarg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_attron">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$intarg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_attrset">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$intarg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_color">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$intarg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_init">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_noutrefresh">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_refresh">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_restore">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_set">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$labelnr}, ${2:string \$label}, ${3:int \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_slk_touch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_standend">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_standout">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_start_color">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_termattrs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_termname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_timeout">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$millisec})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_top_panel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$panel})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_typeahead">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_ungetch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$keycode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_ungetmouse">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$mevent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_update_panels">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_use_default_colors">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_use_env">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$flag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_use_extended_names">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$flag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_vidattr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$intarg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_vline">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$charattr}, ${2:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_waddch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$ch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_waddstr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:string \$str}${3:${4:[, int \$n]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wattroff">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$attrs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wattron">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$attrs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wattrset">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$attrs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wborder">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$left}, ${3:int \$right}, ${4:int \$top}, ${5:int \$bottom}, ${6:int \$tl}, ${7:int \$tr}, ${8:int \$bl}, ${9:int \$br})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wclear">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wcolor_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_werase">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wgetch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_whline">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$charattr}, ${3:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wmouse_trafo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:\$y}, ${3:\$x}, ${4:bool \$toscreen})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wmove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$y}, ${3:int \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wnoutrefresh">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wrefresh">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wstandend">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wstandout">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ncurses_wvline">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$window}, ${2:int \$charattr}, ${3:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_bell">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_button_bar">
			<behavior>
				<append-static>
					<transform-into>(${1:\$buttons})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_button">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_centered_window">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$width}, ${2:int \$height}${3:${4:[, string \$title]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_get_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_set_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkbox}, ${2:int \$flags}, ${3:int \$sense})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_set_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkbox}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_add_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:string \$text}, ${3:mixed \$data}, ${4:int \$flags}, ${5:int \$index}${6:${7:[, int \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_find_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_get_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_get_entry_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_get_multi_selection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:string \$seqnum})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_get_selection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_multi">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$height}, ${4:string \$seq}${5:${6:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_set_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_set_entry_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:mixed \$data}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_set_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkboxtree}, ${2:mixed \$data}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree_set_width">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$checkbox}, ${2:int \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox_tree">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$height}${4:${5:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_checkbox">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text}, ${4:string \$def}${5:${6:[, string \$seq]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_clear_key_buffer">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_cls">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_compact_button">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_component_add_callback">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$component}, ${2:mixed \$func}, ${3:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_component_takes_focus">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$component}, ${2:bool \$takes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_create_grid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$cols}, ${2:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_cursor_off">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_cursor_on">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_delay">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$microseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_draw_form">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_draw_root_text">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_entry_get_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_entry_set_filter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$entry}, ${2:callback \$filter}, ${3:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_entry_set_flags">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$entry}, ${2:int \$flags}, ${3:int \$sense})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_entry_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$entry}, ${2:string \$value}${3:${4:[, bool \$cursor_at_end]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$width}${4:${5:[, string \$init_value]}${6:${7:[, int \$flags]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_finished">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_add_component">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:resource \$component})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_add_components">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:array \$components})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_add_hot_key">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:int \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_get_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_run">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:\$exit})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_set_background">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$from}, ${2:int \$background})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_set_height">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_set_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_set_timer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:int \$milliseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_set_width">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:int \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form_watch_fd">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form}, ${2:resource \$stream}${3:${4:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_form">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$vert_bar]}${3:${4:[, string \$help]}${5:${6:[, int \$flags]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_get_screen_size">
			<behavior>
				<append-static>
					<transform-into>(${1:\$cols}, ${2:\$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_add_components_to_form">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$grid}, ${2:resource \$form}, ${3:bool \$recurse})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_basic_window">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$text}, ${2:resource \$middle}, ${3:resource \$buttons})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$grid}, ${2:bool \$recurse})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_get_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resouce \$grid}, ${2:\$width}, ${3:\$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_h_close_stacked">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$element}, ${2:resource \$element}${3:${4:[, int \$...]}${5:${6:[, resource \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_h_stacked">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$element}, ${2:resource \$element}${3:${4:[, int \$...]}${5:${6:[, resource \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_place">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$grid}, ${2:int \$left}, ${3:int \$top})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_set_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$grid}, ${2:int \$col}, ${3:int \$row}, ${4:int \$type}, ${5:resource \$val}, ${6:int \$pad}, ${7:int \$pad}, ${8:int \$pad}, ${9:int \$pad}, ${10:int \$anchor}${11:${12:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_simple_window">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$text}, ${2:resource \$middle}, ${3:resource \$buttons})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_v_close_stacked">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$element}, ${2:resource \$element}${3:${4:[, int \$...]}${5:${6:[, resource \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_v_stacked">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$element}, ${2:resource \$element}${3:${4:[, int \$...]}${5:${6:[, resource \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_wrapped_window_at">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$grid}, ${2:string \$title}, ${3:int \$left}, ${4:int \$top})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_grid_wrapped_window">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$grid}, ${2:string \$title})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_init">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_label_set_text">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$label}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_label">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_append_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:string \$text}, ${3:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_clear_selection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_clear">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listobx})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_delete_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:mixed \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_get_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_get_selection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_insert_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:string \$text}, ${3:mixed \$data}, ${4:mixed \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_item_count">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_select_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:mixed \$key}, ${3:int \$sense})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_set_current_by_key">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:mixed \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_set_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:int \$num})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_set_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:int \$num}, ${3:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_set_entry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:int \$num}, ${3:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox_set_width">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$listbox}, ${2:int \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listbox">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$height}${4:${5:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listitem_get_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$item})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listitem_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$item}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_listitem">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text}, ${4:bool \$is}, ${5:resouce \$prev}, ${6:mixed \$data}${7:${8:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_open_window">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$width}, ${4:int \$height}${5:${6:[, string \$title]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_pop_help_line">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_pop_window">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_push_help_line">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$text]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_radio_get_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$set})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_radiobutton">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:string \$text}, ${4:bool \$is}${5:${6:[, resource \$prev_button]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_redraw_help_line">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_reflow_text">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text}, ${2:int \$width}, ${3:int \$flex}, ${4:int \$flex}, ${5:\$actual}, ${6:\$actual})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_refresh">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_resize_screen">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$redraw]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_resume">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_run_form">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$form})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_scale_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$scale}, ${2:int \$amount})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$width}, ${4:int \$full})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_scrollbar_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$scrollbar}, ${2:int \$where}, ${3:int \$total})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_set_help_callback">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_set_suspend_callback">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$function}, ${2:mixed \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_suspend">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_textbox_get_num_lines">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$textbox})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_textbox_reflowed">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:char \$}, ${4:int \$width}, ${5:int \$flex}, ${6:int \$flex}${7:${8:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_textbox_set_height">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$textbox}, ${2:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_textbox_set_text">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$textbox}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_textbox">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$width}, ${4:int \$height}${5:${6:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_vertical_scrollbar">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$left}, ${2:int \$top}, ${3:int \$height}${4:${5:[, int \$normal_colorset]}${6:${7:[, int \$thumb_colorset]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_wait_for_key">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_win_choice">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}, ${2:string \$button}, ${3:string \$button}, ${4:string \$format}${5:${6:[, mixed \$args]}${7:${8:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_win_entries">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}, ${2:string \$text}, ${3:int \$suggested}, ${4:int \$flex}, ${5:int \$flex}, ${6:int \$data}, ${7:\$items}, ${8:string \$button}${9:${10:[, string \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_win_menu">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}, ${2:string \$text}, ${3:int \$suggestedWidth}, ${4:int \$flexDown}, ${5:int \$flexUp}, ${6:int \$maxListHeight}, ${7:array \$items}, ${8:\$listItem}${9:${10:[, string \$button1]}${11:${12:[, string \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_win_message">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}, ${2:string \$button}, ${3:string \$format}${4:${5:[, mixed \$args]}${6:${7:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_win_messagev">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}, ${2:string \$button}, ${3:string \$format}, ${4:array \$args})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="newt_win_ternary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$title}, ${2:string \$button}, ${3:string \$button}, ${4:string \$button}, ${5:string \$format}${6:${7:[, mixed \$args]}${8:${9:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="next">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ngettext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$msgid}, ${2:string \$msgid}, ${3:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="nl_langinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$item})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="nl2br">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, bool \$is_xhtml= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_body">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$server}, ${2:string \$mailbox}, ${3:int \$msg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_copy_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$from}, ${2:string \$to})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_create_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_create_note">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$form})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_drop_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_find_note">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$name}${3:${4:[, string \$type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_header_info">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$server}, ${2:string \$mailbox}, ${3:int \$msg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_list_msgs">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$db})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_mark_read">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$user}, ${3:string \$note})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_mark_unread">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$user}, ${3:string \$note})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_nav_create">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_search">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$keywords})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_unread">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}, ${2:string \$user})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="notes_version">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="nsapi_request_headers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="nsapi_response_headers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="nsapi_virtual">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="nthmac">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clent}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="number_format">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$number}, ${2:float \$number}, ${3:int \$decimals}, ${4:string \$dec}, ${5:string \$thousands}${6:${7:[, int \$decimals]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oauth_urlencode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_clean">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_deflatehandler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_end_clean">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_end_flush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_etaghandler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_flush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_get_clean">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_get_contents">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_get_flush">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_get_length">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_get_level">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_get_status">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool  \$full_status = FALSE]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_gzhandler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$buffer}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_iconv_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$contents}, ${2:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_implicit_flush">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flag]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_inflatehandler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_list_handlers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_start">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, callback \$output_callback]}${3:${4:[, int \$chunk_size]}${5:${6:[, bool \$erase]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ob_tidyhandler">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input}${2:${3:[, int \$mode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_bind_array_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:string \$name}, ${3:\$var}, ${4:int \$max}${5:${6:[, int \$max_item_length= -1]}${7:${8:[, int \$type= SQLT_AFC]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_bind_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:string \$ph}, ${3:\$variable}${4:${5:[, int \$maxlength= -1]}${6:${7:[, int \$type= SQLT_CHR]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_cancel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->append">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->assign">
			<behavior>
				<append-static>
					<transform-into>(${1:Collection \$from})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->assignElem">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}, ${2:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->getElem">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->free">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->max">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->size">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Collection->trim">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$num})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$username}, ${2:string \$password}${3:${4:[, string \$db]}${5:${6:[, string \$charset]}${7:${8:[, int \$session_mode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_define_by_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:string \$column}, ${3:\$variable}${4:${5:[, int \$type= SQLT_CHR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$source]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}${2:${3:[, int \$mode= OCI_COMMIT_ON_SUCCESS]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_fetch_all">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:\$output}${3:${4:[, int \$skip= 0]}${5:${6:[, int \$maxrows= -1]}${7:${8:[, int \$flags= 0]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}${2:${3:[, int \$mode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_fetch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_is_null">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_precision">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_type_raw">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_free_statement">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_internal_debug">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$onoff})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->append">
			<behavior>
				<append-static>
					<transform-into>(${1:Lob \$lob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->close">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_lob_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:Lob \$lob}, ${2:Lob \$lob}${3:${4:[, int \$length= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->eof">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->erase">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$offset]}${3:${4:[, int \$length]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->export">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$start]}${4:${5:[, int \$length]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->flush">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flag]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->free">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->getBuffering">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->import">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_lob_is_equal">
			<behavior>
				<append-static>
					<transform-into>(${1:Lob \$lob}, ${2:Lob \$lob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->load">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->read">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->rewind">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->save">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$offset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->saveFile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->seek">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$offset}${2:${3:[, int \$whence]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->setBuffering">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$on})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->size">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->tell">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->truncate">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->write">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->writeTemporary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$lob_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="OCI-Lob->writeToFile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_new_collection">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$tdo}${3:${4:[, string \$schema= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_new_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$username}, ${2:string \$password}${3:${4:[, string \$db]}${5:${6:[, string \$charset]}${7:${8:[, int \$session_mode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_new_cursor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_new_descriptor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, int \$type= OCI_DTYPE_LOB]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_password_change">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$username}, ${3:string \$old}, ${4:string \$new}, ${5:string \$dbname}, ${6:string \$username}, ${7:string \$old}, ${8:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_pconnect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$username}, ${2:string \$password}${3:${4:[, string \$db]}${5:${6:[, string \$charset]}${7:${8:[, int \$session_mode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_rollback">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_server_version">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_set_prefetch">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:int \$rows})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="oci_statement_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocibindbyname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicancel">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicloselob">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicollappend">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicollassign">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicollassignelem">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicollgetelem">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicollmax">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicollsize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolltrim">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumnisnull">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumnname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumnprecision">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumnscale">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumnsize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumntype">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicolumntyperaw">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocicommit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocidefinebyname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocierror">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociexecute">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifetch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifetchinto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$statement}, ${2:\$result}${3:${4:[, int \$mode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifetchstatement">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifreecollection">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifreecursor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifreedesc">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocifreestatement">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociinternaldebug">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociloadlob">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocilogoff">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocilogon">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocinewcollection">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocinewcursor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocinewdescriptor">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocinlogon">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocinumcols">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociparse">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociplogon">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociresult">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocirollback">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocirowcount">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocisavelob">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocisavelobfile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociserverversion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocisetprefetch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ocistatementtype">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociwritelobtofile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ociwritetemporarylob">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="octdec">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$octal})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_autocommit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, bool \$OnOff= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_binmode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_close_all">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_columnprivileges">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$owner}, ${4:string \$table}, ${5:string \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_columns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$qualifier]}${4:${5:[, string \$schema]}${6:${7:[, string \$table_name]}${8:${9:[, string \$column_name]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dsn}, ${2:string \$user}, ${3:string \$password}${4:${5:[, int \$cursor_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_cursor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_data_source">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:int \$fetch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_do">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection_id]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_errormsg">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection_id]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$query}${3:${4:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, array \$parameters_array]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$rownumber]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_fetch_into">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:\$result}${3:${4:[, int \$rownumber]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$rownumber]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$row_number]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_field_len">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_field_num">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:string \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_field_precision">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_field_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_foreignkeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$pk}, ${3:string \$pk}, ${4:string \$pk}, ${5:string \$fk}, ${6:string \$fk}, ${7:string \$fk})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_gettypeinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, int \$data_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_longreadlen">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_next_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_pconnect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dsn}, ${2:string \$user}, ${3:string \$password}${4:${5:[, int \$cursor_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_primarykeys">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$owner}, ${4:string \$table})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_procedurecolumns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:resource \$connection}, ${3:string \$qualifier}, ${4:string \$owner}, ${5:string \$proc}, ${6:string \$column})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_procedures">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:resource \$connection}, ${3:string \$qualifier}, ${4:string \$owner}, ${5:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_result_all">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, string \$format]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_rollback">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_setoption">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:int \$function}, ${3:int \$option}, ${4:int \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_specialcolumns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:int \$type}, ${3:string \$qualifier}, ${4:string \$owner}, ${5:string \$table}, ${6:int \$scope}, ${7:int \$nullable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_statistics">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$owner}, ${4:string \$table}, ${5:int \$unique}, ${6:int \$accuracy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_tableprivileges">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$qualifier}, ${3:string \$owner}, ${4:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="odbc_tables">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, string \$qualifier]}${4:${5:[, string \$owner]}${6:${7:[, string \$name]}${8:${9:[, string \$types]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_buffer_create">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_buffer_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$buffer}, ${2:int \$format}, ${3:string \$data}, ${4:int \$freq})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_buffer_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$buffer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_buffer_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$buffer}, ${2:int \$property})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_buffer_loadwav">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$buffer}, ${2:string \$wavfile})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_context_create">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$device})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_context_current">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_context_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_context_process">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_context_suspend">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$context})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_device_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$device})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_device_open">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$device_desc]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_listener_get">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$property})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_listener_set">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$property}, ${2:mixed \$setting})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_create">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source}, ${2:int \$property})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_pause">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_play">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_rewind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_set">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source}, ${2:int \$property}, ${3:mixed \$setting})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_source_stop">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openal_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source}, ${2:int \$format}, ${3:int \$rate})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="opendir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, resource \$context]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openlog">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ident}, ${2:int \$option}, ${3:int \$facility})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_csr_export_to_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$csr}, ${2:string \$outfilename}${3:${4:[, bool \$notext= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_csr_export">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$csr}, ${2:\$out}${3:${4:[, bool \$notext= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_csr_get_public_key">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$csr}${2:${3:[, bool \$use_shortnames= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_csr_get_subject">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$csr}${2:${3:[, bool \$use_shortnames= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_csr_new">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$dn}, ${2:\$privkey}${3:${4:[, array \$configargs]}${5:${6:[, array \$extraattribs]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_csr_sign">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$csr}, ${2:mixed \$cacert}, ${3:mixed \$priv}, ${4:int \$days}${5:${6:[, array \$configargs]}${7:${8:[, int \$serial= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_error_string">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_free_key">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_get_privatekey">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_get_publickey">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$sealed}, ${2:\$open}, ${3:string \$env}, ${4:mixed \$priv})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs12_export_to_file">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x}, ${2:string \$filename}, ${3:mixed \$priv}, ${4:string \$pass}${5:${6:[, array \$args]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs12_export">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x}, ${2:\$out}, ${3:mixed \$priv}, ${4:string \$pass}${5:${6:[, array \$args]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs12_read">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pkcs}, ${2:\$certs}, ${3:string \$pass})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs7_decrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$infilename}, ${2:string \$outfilename}, ${3:mixed \$recipcert}${4:${5:[, mixed \$recipkey]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs7_encrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$infile}, ${2:string \$outfile}, ${3:mixed \$recipcerts}, ${4:array \$headers}${5:${6:[, int \$flags= 0]}${7:${8:[, int \$cipherid= OPENSSL_CIPHER_RC2_40]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs7_sign">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$infilename}, ${2:string \$outfilename}, ${3:mixed \$signcert}, ${4:mixed \$privkey}, ${5:array \$headers}${6:${7:[, int \$flags= PKCS7_DETACHED]}${8:${9:[, string \$extracerts]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkcs7_verify">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:int \$flags}${3:${4:[, string \$outfilename]}${5:${6:[, array \$cainfo]}${7:${8:[, string \$extracerts]}${9:${10:[, string \$content]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_export_to_file">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$key}, ${2:string \$outfilename}${3:${4:[, string \$passphrase]}${5:${6:[, array \$configargs]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_export">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$key}, ${2:\$out}${3:${4:[, string \$passphrase]}${5:${6:[, array \$configargs]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_get_details">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_get_private">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$key}${2:${3:[, string \$passphrase= &quot;&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_get_public">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$certificate})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_pkey_new">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$configargs]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_private_decrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:\$decrypted}, ${3:mixed \$key}${4:${5:[, int \$padding= OPENSSL_PKCS1_PADDING]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_private_encrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:\$crypted}, ${3:mixed \$key}${4:${5:[, int \$padding= OPENSSL_PKCS1_PADDING]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_public_decrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:\$decrypted}, ${3:mixed \$key}${4:${5:[, int \$padding= OPENSSL_PKCS1_PADDING]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_public_encrypt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:\$crypted}, ${3:mixed \$key}${4:${5:[, int \$padding= OPENSSL_PKCS1_PADDING]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_seal">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:\$sealed}, ${3:\$env}, ${4:array \$pub})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_sign">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:\$signature}, ${3:mixed \$priv}${4:${5:[, int \$signature_alg= OPENSSL_ALGO_SHA1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_verify">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}, ${2:string \$signature}, ${3:mixed \$pub}${4:${5:[, int \$signature_alg]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_check_private_key">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$cert}, ${2:mixed \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_checkpurpose">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x}, ${2:int \$purpose}${3:${4:[, array \$cainfo]}${5:${6:[, string \$untrustedfile]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_export_to_file">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x}, ${2:string \$outfilename}${3:${4:[, bool \$notext]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_export">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x}, ${2:\$output}${3:${4:[, bool \$notext]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x}${2:${3:[, bool \$shortnames= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="openssl_x509_read">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ord">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="output_add_rewrite_var">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="output_reset_rewrite_vars">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="overload">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="override_function">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$function}, ${2:string \$function}, ${3:string \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_close">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:string \$dborport}, ${3:string \$user}, ${4:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_cursor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}${2:${3:[, array \$parameters_array]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_fetch_into">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:\$result}${3:${4:[, string \$how]}${5:${6:[, int \$rownumber]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}${2:${3:[, int \$how]}${4:${5:[, int \$row_number]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_field_len">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_field_num">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:string \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_longreadlen">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:int \$length})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_result_all">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}${2:${3:[, string \$format]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_result">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$result}, ${2:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ovrimos_rollback">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pack">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, mixed \$args]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parse_ini_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$process_sections= false]}${4:${5:[, int \$scanner_mode= INI_SCANNER_NORMAL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parse_ini_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$ini}${2:${3:[, bool \$process_sections= false]}${4:${5:[, int \$scanner_mode= INI_SCANNER_NORMAL]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parse_str">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, array &amp;\$arr]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parse_url">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}${2:${3:[, int \$component= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parsekit_compile_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, array &amp;\$errors]}${4:${5:[, int \$options= PARSEKIT_QUIET]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parsekit_compile_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$phpcode}${2:${3:[, array &amp;\$errors]}${4:${5:[, int \$options= PARSEKIT_QUIET]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="parsekit_func_arginfo">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="passthru">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$command}${2:${3:[, int &amp;\$return_var]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pathinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, int \$options= PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pclose">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_alarm">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$seconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, array \$args]}${4:${5:[, array \$envs]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_fork">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_getpriority">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$pid= getmypid()]}${3:${4:[, int \$process_identifier= PRIO_PROCESS]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_setpriority">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$priority}${2:${3:[, int \$pid= getmypid()]}${4:${5:[, int \$process_identifier= PRIO_PROCESS]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_signal_dispatch">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_signal">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$signo}, ${2:callback \$handler}${3:${4:[, bool \$restart_syscalls= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_sigprocmask">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$how}, ${2:array \$set}${3:${4:[, array &amp;\$oldset]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_sigtimedwait">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$set}${2:${3:[, array &amp;\$siginfo]}${4:${5:[, int \$seconds= 0]}${6:${7:[, int \$nanoseconds= 0]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_sigwaitinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$set}${2:${3:[, array &amp;\$siginfo]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wait">
			<behavior>
				<append-static>
					<transform-into>(${1:\$status}${2:${3:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_waitpid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pid}, ${2:\$status}${3:${4:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wexitstatus">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wifexited">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wifsignaled">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wifstopped">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wstopsig">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pcntl_wtermsig">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_activate_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_annotation">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_bookmark">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_launchlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_locallink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$lowerleftx}, ${3:float \$lowerlefty}, ${4:float \$upperrightx}, ${5:float \$upperrighty}, ${6:int \$page}, ${7:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_nameddest">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$name}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_note">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$contents}, ${7:string \$title}, ${8:string \$icon}, ${9:int \$open})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_outline">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_pdflink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$bottom}, ${3:float \$bottom}, ${4:float \$up}, ${5:float \$up}, ${6:string \$filename}, ${7:int \$page}, ${8:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_table_cell">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$table}, ${3:int \$column}, ${4:int \$row}, ${5:string \$text}, ${6:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_textflow">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$textflow}, ${3:string \$text}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_thumbnail">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_add_weblink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$lowerleftx}, ${3:float \$lowerlefty}, ${4:float \$upperrightx}, ${5:float \$upperrighty}, ${6:string \$url})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_arc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y}, ${4:float \$r}, ${5:float \$alpha}, ${6:float \$beta})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_arcn">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y}, ${4:float \$r}, ${5:float \$alpha}, ${6:float \$beta})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_attach_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$filename}, ${7:string \$description}, ${8:string \$author}, ${9:string \$mimetype}, ${10:string \$icon})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_document">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_font">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename}, ${3:float \$a}, ${4:float \$b}, ${5:float \$c}, ${6:float \$d}, ${7:float \$e}, ${8:float \$f}, ${9:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_glyph">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$glyphname}, ${3:float \$wx}, ${4:float \$llx}, ${5:float \$lly}, ${6:float \$urx}, ${7:float \$ury})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$tag}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_layer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$layer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_page_ext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$width}, ${3:float \$height}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$width}, ${3:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_pattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$width}, ${3:float \$height}, ${4:float \$xstep}, ${5:float \$ystep}, ${6:int \$painttype})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_template_ext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$width}, ${3:float \$height}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_begin_template">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$width}, ${3:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_circle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$x}, ${3:float \$y}, ${4:float \$r})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_clip">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_close_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_close_pdi_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$page})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_close_pdi">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$doc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_closepath_fill_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_closepath_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_closepath">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_concat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$a}, ${3:float \$b}, ${4:float \$c}, ${5:float \$d}, ${6:float \$e}, ${7:float \$f})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_continue_text">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_3dview">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$username}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_action">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$type}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_annotation">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$type}, ${7:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_bookmark">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$text}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$name}, ${7:string \$type}, ${8:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_fieldgroup">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$name}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_gstate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_pvf">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename}, ${3:string \$data}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_create_textflow">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$text}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_curveto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y}, ${4:float \$x}, ${5:float \$y}, ${6:float \$x}, ${7:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_define_layer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$name}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_delete_pvf">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_delete_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$table}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_delete_textflow">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$textflow})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_encoding_set_char">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$encoding}, ${3:int \$slot}, ${4:string \$glyphname}, ${5:int \$uv})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_document">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_font">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_glyph">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_item">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_layer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_page_ext">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_pattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_end_template">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_endpath">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fill_imageblock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$page}, ${3:string \$blockname}, ${4:int \$image}, ${5:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fill_pdfblock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$page}, ${3:string \$blockname}, ${4:int \$contents}, ${5:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fill_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fill_textblock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$page}, ${3:string \$blockname}, ${4:string \$text}, ${5:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_findfont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$fontname}, ${3:string \$encoding}, ${4:int \$embed})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fit_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$image}, ${3:float \$x}, ${4:float \$y}, ${5:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fit_pdi_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$page}, ${3:float \$x}, ${4:float \$y}, ${5:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fit_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$table}, ${3:float \$llx}, ${4:float \$lly}, ${5:float \$urx}, ${6:float \$ury}, ${7:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fit_textflow">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$textflow}, ${3:float \$llx}, ${4:float \$lly}, ${5:float \$urx}, ${6:float \$ury}, ${7:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_fit_textline">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$text}, ${3:float \$x}, ${4:float \$y}, ${5:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_apiname">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_buffer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_errmsg">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_errnum">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_font">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_fontname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_fontsize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_image_height">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_image_width">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_majorversion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_minorversion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:float \$modifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_pdi_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:int \$doc}, ${4:int \$page}, ${5:int \$reserved})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_pdi_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:int \$doc}, ${4:int \$page}, ${5:int \$reserved})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_get_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:float \$modifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_info_font">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$font}, ${3:string \$keyword}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_info_matchbox">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$boxname}, ${3:int \$num}, ${4:string \$keyword})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_info_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$table}, ${3:string \$keyword})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_info_textflow">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$textflow}, ${3:string \$keyword})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_info_textline">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$text}, ${3:string \$keyword}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_initgraphics">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_lineto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_load_3ddata">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_load_font">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$fontname}, ${3:string \$encoding}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_load_iccprofile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$profilename}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_load_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$imagetype}, ${3:string \$filename}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_makespotcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$spotname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_moveto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_new">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_ccitt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename}, ${3:int \$width}, ${4:int \$height}, ${5:int \$BitReverse}, ${6:int \$k}, ${7:int \$Blackls})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_gif">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_image_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$imagetype}, ${3:string \$filename}, ${4:string \$stringparam}, ${5:int \$intparam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$imagetype}, ${3:string \$source}, ${4:string \$data}, ${5:int \$length}, ${6:int \$width}, ${7:int \$height}, ${8:int \$components}, ${9:int \$bpc}, ${10:string \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_jpeg">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_memory_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:resource \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_pdi_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$doc}, ${3:int \$pagenumber}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_pdi">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$filename}, ${3:string \$optlist}, ${4:int \$len})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_open_tiff">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_pcos_get_number">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$doc}, ${3:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_pcos_get_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$doc}, ${3:string \$optlist}, ${4:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_pcos_get_string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$doc}, ${3:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_place_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$image}, ${3:float \$x}, ${4:float \$y}, ${5:float \$scale})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_place_pdi_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$page}, ${3:float \$x}, ${4:float \$y}, ${5:float \$sx}, ${6:float \$sy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_process_pdi">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$doc}, ${3:int \$page}, ${4:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_rect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y}, ${4:float \$width}, ${5:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_restore">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_resume_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_rotate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$phi})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_save">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$sx}, ${3:float \$sy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_border_color">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$red}, ${3:float \$green}, ${4:float \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_border_dash">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$black}, ${3:float \$white})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_border_style">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$style}, ${3:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_char_spacing">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_duration">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_gstate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$gstate})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_horiz_scaling">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_info_author">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_info_creator">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_info_keywords">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_info_subject">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_info_title">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_layer_dependency">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$type}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_leading">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_text_matrix">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_text_pos">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_text_rendering">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_text_rise">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_set_word_spacing">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$fstype}, ${3:string \$colorspace}, ${4:float \$c}, ${5:float \$c}, ${6:float \$c}, ${7:float \$c})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setdash">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$b}, ${3:float \$w})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setdashpattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setflat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$flatness})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setfont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$font}, ${3:float \$fontsize})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setgray_fill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$g})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setgray_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$g})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setgray">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$g})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setlinecap">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$linecap})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setlinejoin">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:int \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setlinewidth">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setmatrix">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$a}, ${3:float \$b}, ${4:float \$c}, ${5:float \$d}, ${6:float \$e}, ${7:float \$f})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setmiterlimit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:float \$miter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setpolydash">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setrgbcolor_fill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$red}, ${3:float \$green}, ${4:float \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setrgbcolor_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$red}, ${3:float \$green}, ${4:float \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_setrgbcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$red}, ${3:float \$green}, ${4:float \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_shading_pattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$shading}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_shading">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$shtype}, ${3:float \$x}, ${4:float \$y}, ${5:float \$x}, ${6:float \$y}, ${7:float \$c}, ${8:float \$c}, ${9:float \$c}, ${10:float \$c}, ${11:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_shfill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:int \$shading})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_show_boxed">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$text}, ${3:float \$left}, ${4:float \$top}, ${5:float \$width}, ${6:float \$height}, ${7:string \$mode}, ${8:string \$feature})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_show_xy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$text}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_show">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_skew">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$alpha}, ${3:float \$beta})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_stringwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$text}, ${3:int \$font}, ${4:float \$fontsize})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_suspend_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_translate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:float \$tx}, ${3:float \$ty})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_utf16_to_utf8">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$utf})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_utf32_to_utf16">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$utf}, ${3:string \$ordering})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDF_utf8_to_utf16">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pdfdoc}, ${2:string \$utf}, ${3:string \$ordering})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDO::pgsqlLOBCreate">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDO::pgsqlLOBOpen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$oid}${2:${3:[, string \$mode= &quot;rb&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDO::pgsqlLOBUnlink">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$oid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDO::sqliteCreateAggregate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$function}, ${2:callback \$step}, ${3:callback \$finalize}, ${4:mixed \$context}, ${5:int \$rownumber}${6:${7:[, int \$num_args    )         step         ( mixed \$context]}${8:${9:[, int \$rownumber]}${10:${11:[, mixed \$value1]}${12:${13:[, mixed \$value2]}${14:${15:[, mixed \$..]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="PDO::sqliteCreateFunction">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$function}, ${2:callback \$callback}${3:${4:[, int \$num_args]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pfsockopen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}${2:${3:[, int \$port= -1]}${4:${5:[, int &amp;\$errno]}${6:${7:[, string &amp;\$errstr]}${8:${9:[, float \$timeout= ini_get(&quot;default_socket_timeout&quot;)]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_affected_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_cancel_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_client_encoding">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$connection}${2:${3:[, int \$connect_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_connection_busy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_connection_reset">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_connection_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_convert">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}, ${3:array \$assoc}${4:${5:[, int \$options= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_copy_from">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}, ${3:array \$rows}${4:${5:[, string \$delimiter]}${6:${7:[, string \$null_as]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_copy_to">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}${3:${4:[, string \$delimiter]}${5:${6:[, string \$null_as]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_dbname">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}, ${3:array \$assoc}${4:${5:[, int \$options= PGSQL_DML_EXEC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_end_copy">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_escape_bytea">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$stmtname}, ${2:array \$params}${3:${4:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_all_columns">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$column= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_all">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$row]}${4:${5:[, int \$result_type]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$row]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$row]}${4:${5:[, int \$result_type   )   object pg_fetch_object    ( resource \$result]}${6:${7:[, int \$row]}${8:${9:[, string \$class_name]}${10:${11:[, array \$params]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}, ${3:mixed \$field}, ${4:resource \$result}, ${5:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$row]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_is_null">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}, ${3:mixed \$field}, ${4:resource \$result}, ${5:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_num">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:string \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_prtlen">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}, ${3:mixed \$field}, ${4:resource \$result}, ${5:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_size">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_table">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field}${3:${4:[, bool \$oid_only= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_type_oid">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_field_type">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_get_notify">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}${2:${3:[, int \$result_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_get_pid">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_get_result">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_host">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_insert">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}, ${3:array \$assoc}${4:${5:[, int \$options= PGSQL_DML_EXEC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_last_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_last_notice">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_last_oid">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$large})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_create">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$object}${2:${3:[, resource \$connection]}${4:${5:[, mixed \$object_id]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_export">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$oid}, ${2:string \$pathname}${3:${4:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_import">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}${3:${4:[, string \$pathname]}${5:${6:[, mixed \$object_id   )         int pg_lo_import          ( string \$pathname]}${7:${8:[, resource \$connection]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_open">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:int \$oid}, ${3:string \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_read_all">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$large})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$large}${2:${3:[, int \$len]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$large}, ${2:int \$offset}${3:${4:[, int \$whence= PGSQL_SEEK_CUR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_tell">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$large})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_unlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:int \$oid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_lo_write">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$large}, ${2:string \$data}${3:${4:[, int \$len]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_meta_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_options">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_parameter_status">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$param}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_pconnect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$connection}${2:${3:[, int \$connect_type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_ping">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_port">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$stmtname}, ${2:string \$query}${3:${4:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_put_line">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_query_params">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}, ${2:array \$params}${3:${4:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_result_error_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$fieldcode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_result_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_result_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_result_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$type]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_select">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}, ${3:array \$assoc}${4:${5:[, int \$options= PGSQL_DML_EXEC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_send_execute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$stmtname}, ${3:array \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_send_prepare">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$stmtname}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_send_query_params">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$query}, ${3:array \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_send_query">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_set_client_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_set_error_verbosity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$verbosity}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_trace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pathname}${2:${3:[, string \$mode= &quot;w&quot;]}${4:${5:[, resource \$connection]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_transaction_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_tty">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_unescape_bytea">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_untrace">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_update">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$connection}, ${2:string \$table}, ${3:array \$data}, ${4:array \$condition}${5:${6:[, int \$options= PGSQL_DML_EXEC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pg_version">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_check_syntax">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, string &amp;\$error_message]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_ini_loaded_file">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_ini_scanned_files">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_logo_guid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_sapi_name">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_strip_whitespace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="php_uname">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$mode= &quot;a&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="phpcredits">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flag= CREDITS_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="phpinfo">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$what= INFO_ALL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="phpversion">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$extension]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pi">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="png2wbmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pngname}, ${2:string \$wbmpname}, ${3:int \$dest}, ${4:int \$dest}, ${5:int \$threshold})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="popen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$command}, ${2:string \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pos">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_access">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file}${2:${3:[, int \$mode= POSIX_F_OK]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_ctermid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_get_last_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getcwd">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getegid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_geteuid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getgid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getgrgid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$gid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getgrnam">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getgroups">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getlogin">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getpgid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getpgrp">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getpid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getppid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getpwnam">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$username})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getpwuid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$uid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getrlimit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getsid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_getuid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_initgroups">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:int \$base})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_isatty">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_kill">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pid}, ${2:int \$sig})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_mkfifo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pathname}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_mknod">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pathname}, ${2:int \$mode}${3:${4:[, int \$major= 0]}${5:${6:[, int \$minor= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_setegid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$gid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_seteuid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$uid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_setgid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$gid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_setpgid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$pid}, ${2:int \$pgid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_setsid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_setuid">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$uid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_strerror">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$errno})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_times">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_ttyname">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="posix_uname">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pow">
			<behavior>
				<append-static>
					<transform-into>(${1:number \$base}, ${2:number \$exp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_filter">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$pattern}, ${2:mixed \$replacement}, ${3:mixed \$subject}${4:${5:[, int \$limit= -1]}${6:${7:[, int &amp;\$count]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_grep">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:array \$input}${3:${4:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_last_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_match_all">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$subject}, ${3:\$matches}${4:${5:[, int \$flags]}${6:${7:[, int \$offset]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_match">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$subject}${3:${4:[, array &amp;\$matches]}${5:${6:[, int \$flags]}${7:${8:[, int \$offset]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_quote">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$delimiter= NULL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_replace_callback">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$pattern}, ${2:callback \$callback}, ${3:mixed \$subject}${4:${5:[, int \$limit= -1]}${6:${7:[, int &amp;\$count]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$pattern}, ${2:mixed \$replacement}, ${3:mixed \$subject}${4:${5:[, int \$limit= -1]}${6:${7:[, int &amp;\$count]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="preg_split">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$subject}${3:${4:[, int \$limit= -1]}${5:${6:[, int \$flags= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="prev">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="print_r">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$expression}${2:${3:[, bool \$return= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="print">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_abort">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_create_brush">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$style}, ${2:string \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_create_dc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_create_font">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$face}, ${2:int \$height}, ${3:int \$width}, ${4:int \$font}, ${5:bool \$italic}, ${6:bool \$underline}, ${7:bool \$strikeout}, ${8:int \$orientation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_create_pen">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$style}, ${2:int \$width}, ${3:string \$color})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_delete_brush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$brush})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_delete_dc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_delete_font">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_delete_pen">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pen})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_bmp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:string \$filename}, ${3:int \$x}, ${4:int \$y}, ${5:int \$height}${6:${7:[, int \$width]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_chord">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$rec}, ${3:int \$rec}, ${4:int \$rec}, ${5:int \$rec}, ${6:int \$rad}, ${7:int \$rad}, ${8:int \$rad}, ${9:int \$rad})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_elipse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$ul}, ${3:int \$ul}, ${4:int \$lr}, ${5:int \$lr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_line">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$from}, ${3:int \$from}, ${4:int \$to}, ${5:int \$to})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_pie">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$rec}, ${3:int \$rec}, ${4:int \$rec}, ${5:int \$rec}, ${6:int \$rad}, ${7:int \$rad}, ${8:int \$rad}, ${9:int \$rad})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_rectangle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$ul}, ${3:int \$ul}, ${4:int \$lr}, ${5:int \$lr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_roundrect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$ul}, ${3:int \$ul}, ${4:int \$lr}, ${5:int \$lr}, ${6:int \$width}, ${7:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_draw_text">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:string \$text}, ${3:int \$x}, ${4:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_end_doc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_end_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:string \$option})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_list">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$enumtype}${2:${3:[, string \$name]}${4:${5:[, int \$level]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_logical_fontheight">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_open">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$printername]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_select_brush">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:resource \$brush})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_select_font">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:resource \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_select_pen">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:resource \$pen})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:int \$option}, ${3:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_start_doc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}${2:${3:[, string \$document]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_start_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printer_write">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$printer}, ${2:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="printf">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, mixed \$args]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="proc_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$process})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="proc_get_status">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$process})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="proc_nice">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$increment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="proc_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$cmd}, ${2:array \$descriptorspec}, ${3:\$pipes}${4:${5:[, string \$cwd]}${6:${7:[, array \$env]}${8:${9:[, array \$other_options]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="proc_terminate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$process}${2:${3:[, int \$signal= 15]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="property_exists">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$class}, ${2:string \$property})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_add_bookmark">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}${3:${4:[, int \$parent= 0]}${5:${6:[, int \$open= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_add_launchlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_add_locallink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:int \$page}, ${7:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_add_note">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$contents}, ${7:string \$title}, ${8:string \$icon}, ${9:int \$open})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_add_pdflink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$filename}, ${7:int \$page}, ${8:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_add_weblink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$llx}, ${3:float \$lly}, ${4:float \$urx}, ${5:float \$ury}, ${6:string \$url})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_arc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y}, ${4:float \$radius}, ${5:float \$alpha}, ${6:float \$beta})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_arcn">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y}, ${4:float \$radius}, ${5:float \$alpha}, ${6:float \$beta})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_begin_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$width}, ${3:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_begin_pattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$width}, ${3:float \$height}, ${4:float \$xstep}, ${5:float \$ystep}, ${6:int \$painttype})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_begin_template">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$width}, ${3:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_circle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y}, ${4:float \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_clip">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_close_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$imageid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_closepath_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_closepath">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_continue_text">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_curveto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y}, ${4:float \$x}, ${5:float \$y}, ${6:float \$x}, ${7:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_end_page">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_end_pattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_end_template">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_fill_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_fill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_findfont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$fontname}, ${3:string \$encoding}${4:${5:[, bool \$embed= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_get_buffer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_get_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$name}${3:${4:[, float \$modifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_get_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$name}${3:${4:[, float \$modifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_hyphenate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_include_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_lineto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_makespotcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$name}${3:${4:[, int \$reserved= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_moveto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_new">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_open_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}${2:${3:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_open_image_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$type}, ${3:string \$filename}${4:${5:[, string \$stringparam]}${6:${7:[, int \$intparam= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_open_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$type}, ${3:string \$source}, ${4:string \$data}, ${5:int \$lenght}, ${6:int \$width}, ${7:int \$height}, ${8:int \$components}, ${9:int \$bpc}, ${10:string \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_open_memory_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$gd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_place_image">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$imageid}, ${3:float \$x}, ${4:float \$y}, ${5:float \$scale})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_rect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y}, ${4:float \$width}, ${5:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_restore">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_rotate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$rot})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_save">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_border_color">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$red}, ${3:float \$green}, ${4:float \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_border_dash">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$black}, ${3:float \$white})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_border_style">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$style}, ${3:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$p}, ${2:string \$key}, ${3:string \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$name}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_text_pos">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_set_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$name}, ${3:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$type}, ${3:string \$colorspace}, ${4:float \$c}, ${5:float \$c}, ${6:float \$c}, ${7:float \$c})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setdash">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$on}, ${3:float \$off})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setflat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setfont">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$fontid}, ${3:float \$size})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setgray">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$gray})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setlinecap">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setlinejoin">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setlinewidth">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setmiterlimit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setoverprintmode">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_setpolydash">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$arr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_shading_pattern">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$shadingid}, ${3:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_shading">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$type}, ${3:float \$x}, ${4:float \$y}, ${5:float \$x}, ${6:float \$y}, ${7:float \$c}, ${8:float \$c}, ${9:float \$c}, ${10:float \$c}, ${11:string \$optlist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_shfill">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$shadingid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_show_boxed">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}, ${3:float \$left}, ${4:float \$bottom}, ${5:float \$width}, ${6:float \$height}, ${7:string \$hmode}${8:${9:[, string \$feature]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_show_xy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_show_xy2">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}, ${3:int \$len}, ${4:float \$xcoor}, ${5:float \$ycoor})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_show">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_show2">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}, ${3:int \$len})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_string_geometry">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}${3:${4:[, int \$fontid= 0]}${5:${6:[, float \$size= 0.0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_stringwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:string \$text}${3:${4:[, int \$fontid= 0]}${5:${6:[, float \$size= 0.0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_stroke">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_symbol_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$ord}${3:${4:[, int \$fontid= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_symbol_width">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$ord}${3:${4:[, int \$fontid= 0]}${5:${6:[, float \$size= 0.0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_symbol">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:int \$ord})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ps_translate">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$psdoc}, ${2:float \$x}, ${3:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_add_to_personal">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_add_to_session">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_check">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_clear_session">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_create">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$language}${2:${3:[, string \$spelling]}${4:${5:[, string \$jargon]}${6:${7:[, string \$encoding]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_data_dir">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$conf}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_dict_dir">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$conf}, ${2:string \$directory})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_ignore">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_personal">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_repl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_runtogether">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:bool \$flag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_config_save_repl">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:bool \$flag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_new_config">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$config})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_new_personal">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$personal}, ${2:string \$language}${3:${4:[, string \$spelling]}${5:${6:[, string \$jargon]}${7:${8:[, string \$encoding]}${9:${10:[, int \$mode= 0]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_new">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$language}${2:${3:[, string \$spelling]}${4:${5:[, string \$jargon]}${6:${7:[, string \$encoding]}${8:${9:[, int \$mode= 0]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_save_wordlist">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_store_replacement">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$misspelled}, ${3:string \$correct})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="pspell_suggest">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$dictionary}, ${2:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="putenv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$setting})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_create_fp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:resource \$file}, ${3:array \$fielddesc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_date2string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:int \$value}, ${3:string \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_delete_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:int \$num})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_get_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:int \$fieldno})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_get_info">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_get_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_get_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:int \$num}${3:${4:[, int \$mode= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_get_schema">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}${2:${3:[, int \$mode= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_get_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_insert_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:array \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_new">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_numfields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_numrecords">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_open_fp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:resource \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_put_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:array \$record}${3:${4:[, int \$recpos= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_retrieve_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:int \$num}${3:${4:[, int \$mode= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_set_blob_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_set_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$name}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_set_tablename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_set_targetencoding">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_set_value">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:string \$name}, ${3:float \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_timestamp2string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:float \$value}, ${3:string \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="px_update_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pxdoc}, ${2:array \$data}, ${3:int \$num})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="qdom_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="qdom_tree">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$doc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="quoted_printable_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="quoted_printable_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="quotemeta">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rad2deg">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_acct_open">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_add_server">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:string \$hostname}, ${3:int \$port}, ${4:string \$secret}, ${5:int \$timeout}, ${6:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_auth_open">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_config">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_create_request">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_cvt_addr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_cvt_int">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_cvt_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_demangle_mppe_key">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:string \$mangled})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_demangle">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:string \$mangled})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_get_attr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_get_vendor_attr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_addr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$type}, ${3:string \$addr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_attr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$type}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_int">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$type}, ${3:int \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$type}, ${3:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_vendor_addr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$vendor}, ${3:int \$type}, ${4:string \$addr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_vendor_attr">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$vendor}, ${3:int \$type}, ${4:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_vendor_int">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$vendor}, ${3:int \$type}, ${4:int \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_put_vendor_string">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius}, ${2:int \$vendor}, ${3:int \$type}, ${4:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_request_authenticator">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_send_request">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_server_secret">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="radius_strerror">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$radius})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rand">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$min}, ${2:int \$max})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="range">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$low}, ${2:mixed \$high}${3:${4:[, number \$step]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rar_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$rar})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rar_entry_get">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$rar}, ${2:string \$entry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::extract">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dir}${2:${3:[, string \$filepath]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getAttr">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getCrc">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getFileTime">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getHostOs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getMethod">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getPackedSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getUnpackedSize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Rar::getVersion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rar_list">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$rar})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rar_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, string \$password]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rawurldecode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rawurlencode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="read_exif_data">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readdir">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$dir_handle]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$use_include_path= false]}${4:${5:[, resource \$context]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readgzfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$use_include_path= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_add_history">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$line})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_callback_handler_install">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$prompt}, ${2:callback \$callback})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_callback_handler_remove">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_callback_read_char">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_clear_history">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_completion_function">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_info">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$varname]}${3:${4:[, string \$newvalue]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_list_history">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_on_new_line">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_read_history">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_redisplay">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline_write_history">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readline">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$prompt]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="readlink">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="realpath">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="recode_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$request}, ${2:resource \$input}, ${3:resource \$output})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="recode_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$request}, ${2:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="recode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="register_shutdown_function">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$function}${2:${3:[, mixed \$parameter]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="register_tick_function">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$function}${2:${3:[, mixed \$arg]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rename_function">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$original}, ${2:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$oldname}, ${2:string \$newname}${3:${4:[, resource \$context]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="reset">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="restore_error_handler">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="restore_exception_handler">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="restore_include_path">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rewind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rewinddir">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$dir_handle]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rmdir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dirname}${2:${3:[, resource \$context]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="round">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$val}${2:${3:[, int \$precision= 0]}${4:${5:[, int \$mode= PHP_ROUND_HALF_UP]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rpm_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$rpmr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rpm_get_tag">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$rpmr}, ${2:int \$tagnum})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rpm_is_valid">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rpm_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rpm_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rsort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="rtrim">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$charlist]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_class_adopt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$parentname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_class_emancipate">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_constant_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$constname}, ${2:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_constant_redefine">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$constname}, ${2:mixed \$newvalue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_constant_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$constname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_function_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$funcname}, ${2:string \$arglist}, ${3:string \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_function_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$funcname}, ${2:string \$targetname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_function_redefine">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$funcname}, ${2:string \$arglist}, ${3:string \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_function_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$funcname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_function_rename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$funcname}, ${2:string \$newname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_import">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags= RUNKIT_IMPORT_CLASS_METHODS]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_lint_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_lint">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_method_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname}, ${3:string \$args}, ${4:string \$code}${5:${6:[, int \$flags= RUNKIT_ACC_PUBLIC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_method_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dClass}, ${2:string \$dMethod}, ${3:string \$sClass}${4:${5:[, string \$sMethod]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_method_redefine">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname}, ${3:string \$args}, ${4:string \$code}${5:${6:[, int \$flags= RUNKIT_ACC_PUBLIC]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_method_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_method_rename">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$classname}, ${2:string \$methodname}, ${3:string \$newname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_return_value_used">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_sandbox_output_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$sandbox}${2:${3:[, mixed \$callback]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="runkit_superglobals">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->commit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$protocol}${2:${3:[, array \$properties]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->disconnect">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->errno">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->isConnected">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->peek">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}${2:${3:[, array \$properties]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->peekAll">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}${2:${3:[, array \$properties]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->receive">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}${2:${3:[, array \$properties]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}${2:${3:[, array \$properties]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->rollback">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->send">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}, ${2:SAMMessage \$msg}${3:${4:[, array \$properties]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection::setDebug">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$switch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->subscribe">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$targetTopic})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMConnection->unsubscribe">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$subscriptionId}${2:${3:[, string \$targetTopic]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMMessage->body">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMMessage->__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$body]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SAMMessage->header">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SCA::createDataObject">
			<behavior>
				<append-static>
					<transform-into>(${1:string     \$type}, ${2:string     \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SCA::getService">
			<behavior>
				<append-static>
					<transform-into>(${1:string     \$target}${2:${3:[, string     \$binding]}${4:${5:[, array     \$config]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SCA_LocalProxy::createDataObject">
			<behavior>
				<append-static>
					<transform-into>(${1:string     \$type}, ${2:string     \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SCA_SoapProxy::createDataObject">
			<behavior>
				<append-static>
					<transform-into>(${1:string     \$type}, ${2:string     \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="scandir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$directory}${2:${3:[, int \$sorting_order= 0]}${4:${5:[, resource \$context]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::beginLogging">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::endLogging">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::getChangedDataObjects">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::getChangeType">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_DataObject \$dataObject})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::getOldContainer">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_DataObject \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::getOldValues">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_DataObject \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_ChangeSummary::isLogging">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_DataFactory::addPropertyToType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$parent}, ${2:string \$parent}, ${3:string \$property}, ${4:string \$type}, ${5:string \$type}${6:${7:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_DataFactory::addType">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$type}, ${2:string \$type}${3:${4:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_DataFactory::getDataFactory">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_DataObject::getChangeSummary">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Relational::applyChanges">
			<behavior>
				<append-static>
					<transform-into>(${1:PDO     \$database}, ${2:SDODataObject     \$root})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Relational::__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:array     \$database}${2:${3:[, string     \$application_root_type]}${4:${5:[, array     \$SDO_containment_references_metadata]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Relational::createRootDataObject">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Relational::executePreparedQuery">
			<behavior>
				<append-static>
					<transform-into>(${1:PDO     \$database}, ${2:PDOStatement     \$prepared}, ${3:array     \$value}${4:${5:[, array     \$column_specifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Relational::executeQuery">
			<behavior>
				<append-static>
					<transform-into>(${1:PDO     \$database}, ${2:string     \$SQL}${3:${4:[, array     \$column_specifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Setting::getListIndex">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Setting::getPropertyIndex">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Setting::getPropertyName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Setting::getValue">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_Setting::isSet">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::addTypes">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xsd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::create">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, mixed \$xsd_file]}${3:${4:[, string \$key]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::createDataObject">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$namespace}, ${2:string \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::createDocument">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$document_element_name   )   SDO_DAS_XML_Document SDO_DAS_XML::createDocument    ( string \$document_element_namespace_URI]}${3:${4:[, string \$document_element_name]}${5:${6:[, SDO_DataObject \$dataobject]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML_Document::getRootDataObject">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML_Document::getRootElementName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML_Document::getRootElementURI">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML_Document::setEncoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML_Document::setXMLDeclaration">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$xmlDeclatation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML_Document::setXMLVersion">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xmlVersion})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::loadFile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xml})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::loadString">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xml})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::saveFile">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_XMLDocument \$xdoc}, ${2:string \$xml}${3:${4:[, int \$indent]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DAS_XML::saveString">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_XMLDocument \$xdoc}${2:${3:[, int \$indent]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataFactory::create">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$type}, ${2:string \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataObject::clear">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataObject::createDataObject">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataObject::getContainer">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataObject::getSequence">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataObject::getTypeName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_DataObject::getTypeNamespaceURI">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Exception::getCause">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_List::insert">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value}${2:${3:[, int \$index]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Property::getContainingType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Property::getDefault">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Property::getName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Property::getType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Property::isContainment">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Property::isMany">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_ReflectionDataObject::__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_DataObject \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_ReflectionDataObject::export">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_Model_ReflectionDataObject \$rdo}${2:${3:[, bool \$return]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_ReflectionDataObject::getContainmentProperty">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_ReflectionDataObject::getInstanceProperties">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_ReflectionDataObject::getType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::getBaseType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::getName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::getNamespaceURI">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::getProperties">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::getProperty">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$identifier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::isAbstractType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::isDataType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::isInstance">
			<behavior>
				<append-static>
					<transform-into>(${1:SDO_DataObject \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::isOpenType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Model_Type::isSequencedType">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Sequence::getProperty">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$sequence})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Sequence::insert">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value}${2:${3:[, int \$sequenceIndex]}${4:${5:[, mixed \$propertyIdentifier]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SDO_Sequence::move">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$toIndex}, ${2:int \$fromIndex})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sem_acquire">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sem})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sem_get">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$key}${2:${3:[, int \$max_acquire]}${4:${5:[, int \$perm]}${6:${7:[, int \$auto_release]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sem_release">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sem})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sem_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sem})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="serialize">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_cache_expire">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$new_cache_expire]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_cache_limiter">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$cache_limiter]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_commit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_destroy">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_encode">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_get_cookie_params">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_id">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$id]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_is_registered">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_module_name">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$module]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_name">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$name]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_pgsql_add_error">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$error}${2:${3:[, string \$error_message]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_pgsql_get_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$with_error_message= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_pgsql_get_field">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_pgsql_reset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_pgsql_set_field">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_pgsql_status">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_regenerate_id">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$delete_old_session= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_register">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$name}${2:${3:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_save_path">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$path]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_set_cookie_params">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$lifetime}${2:${3:[, string \$path]}${4:${5:[, string \$domain]}${6:${7:[, bool \$secure= false]}${8:${9:[, bool \$httponly= false]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_set_save_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$open}, ${2:callback \$close}, ${3:callback \$read}, ${4:callback \$write}, ${5:callback \$destroy}, ${6:callback \$gc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_start">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_unregister">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_unset">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="session_write_close">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="set_error_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$error}${2:${3:[, int \$error_types= E_ALL | E_STRICT   )         handler         ( int \$errno]}${4:${5:[, string \$errstr]}${6:${7:[, string \$errfile]}${8:${9:[, int \$errline]}${10:${11:[, array \$errcontext]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="set_exception_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$exception})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="set_file_buffer">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="set_include_path">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="set_magic_quotes_runtime">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="set_time_limit">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$seconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="setcookie">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, string \$value]}${4:${5:[, int \$expire= 0]}${6:${7:[, string \$path]}${8:${9:[, string \$domain]}${10:${11:[, bool \$secure= false]}${12:${13:[, bool \$httponly= false]}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="setlocale">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$category}, ${2:string \$locale}, ${3:int \$category}, ${4:array \$locale}${5:${6:[, string \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="setrawcookie">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, string \$value]}${4:${5:[, int \$expire= 0]}${6:${7:[, string \$path]}${8:${9:[, string \$domain]}${10:${11:[, bool \$secure= false]}${12:${13:[, bool \$httponly= false]}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="settype">
			<behavior>
				<append-static>
					<transform-into>(${1:\$var}, ${2:string \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sha1_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sha1">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, bool \$raw_output= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shell_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$cmd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shm_attach">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$key}${2:${3:[, int \$memsize]}${4:${5:[, int \$perm]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shm_detach">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$shm})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shm_get_var">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$shm}, ${2:int \$variable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shm_put_var">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$shm}, ${2:int \$variable}, ${3:mixed \$variable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shm_remove_var">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$shm}, ${2:int \$variable})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shm_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$shm})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shmop_close">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$shmid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shmop_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$shmid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shmop_open">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$key}, ${2:string \$flags}, ${3:int \$mode}, ${4:int \$size})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shmop_read">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$shmid}, ${2:int \$start}, ${3:int \$count})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shmop_size">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$shmid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shmop_write">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$shmid}, ${2:string \$data}, ${3:int \$offset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="show_source">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="shuffle">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="signeurlpaiement">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$clent}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="similar_text">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$first}, ${2:string \$second}${3:${4:[, float &amp;\$percent]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::addAttribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value}${3:${4:[, string \$namespace]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::addChild">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, string \$value]}${4:${5:[, string \$namespace]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::asXML">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$filename]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::attributes">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$ns]}${3:${4:[, bool \$is_prefix]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::children">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$ns]}${3:${4:[, bool \$is_prefix]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, int \$options]}${4:${5:[, bool \$data_is_url]}${6:${7:[, string \$ns]}${8:${9:[, bool \$is_prefix]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::getDocNamespaces">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$recursive]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::getName">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::getNamespaces">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$recursive]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::registerXPathNamespace">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$prefix}, ${2:string \$ns})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SimpleXMLElement::xpath">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="simplexml_import_dom">
			<behavior>
				<append-static>
					<transform-into>(${1:DOMNode \$node}${2:${3:[, string \$class_name= &quot;SimpleXMLElement&quot;]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="simplexml_load_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, string \$class_name= &quot;SimpleXMLElement&quot;]}${4:${5:[, int \$options= 0]}${6:${7:[, string \$ns]}${8:${9:[, bool \$is_prefix= false]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="simplexml_load_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, string \$class_name= &quot;SimpleXMLElement&quot;]}${4:${5:[, int \$options= 0]}${6:${7:[, string \$ns]}${8:${9:[, bool \$is_prefix= false]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sin">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sinh">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sizeof">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sleep">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$seconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_get_quick_print">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_get_valueretrieval">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_read_mib">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_set_enum_print">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$enum})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_set_oid_numeric_print">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$oid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_set_oid_output_format">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$oid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_set_quick_print">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$quick})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmp_set_valueretrieval">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmpget">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}, ${2:string \$community}, ${3:string \$object}${4:${5:[, int \$timeout]}${6:${7:[, int \$retries]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmpgetnext">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:string \$community}, ${3:string \$object}${4:${5:[, int \$timeout]}${6:${7:[, int \$retries]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmprealwalk">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}, ${2:string \$community}, ${3:string \$object}${4:${5:[, int \$timeout]}${6:${7:[, int \$retries]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmpset">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}, ${2:string \$community}, ${3:string \$object}, ${4:string \$type}, ${5:mixed \$value}${6:${7:[, int \$timeout]}${8:${9:[, int \$retries]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmpwalk">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}, ${2:string \$community}, ${3:string \$object}${4:${5:[, int \$timeout]}${6:${7:[, int \$retries]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="snmpwalkoid">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$hostname}, ${2:string \$community}, ${3:string \$object}${4:${5:[, int \$timeout]}${6:${7:[, int \$retries]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_accept">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_bind">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:string \$address}${3:${4:[, int \$port= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_clear_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$socket]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:string \$address}${3:${4:[, int \$port= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_create_listen">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$port}${2:${3:[, int \$backlog= 128]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_create_pair">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$domain}, ${2:int \$type}, ${3:int \$protocol}, ${4:\$fd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_create">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$domain}, ${2:int \$type}, ${3:int \$protocol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:int \$level}, ${3:int \$optname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_get_status">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_getpeername">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:\$address}${3:${4:[, int &amp;\$port]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_getsockname">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:\$addr}${3:${4:[, int &amp;\$port]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_last_error">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$socket]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_listen">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}${2:${3:[, int \$backlog= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:int \$length}${3:${4:[, int \$type= PHP_BINARY_READ]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_recv">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:\$buf}, ${3:int \$len}, ${4:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_recvfrom">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:\$buf}, ${3:int \$len}, ${4:int \$flags}, ${5:\$name}${6:${7:[, int &amp;\$port]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_select">
			<behavior>
				<append-static>
					<transform-into>(${1:\$read}, ${2:\$write}, ${3:\$except}, ${4:int \$tv}${5:${6:[, int \$tv_usec= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_send">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:string \$buf}, ${3:int \$len}, ${4:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_sendto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:string \$buf}, ${3:int \$len}, ${4:int \$flags}, ${5:string \$addr}${6:${7:[, int \$port= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_set_block">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_set_blocking">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_set_nonblock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:int \$level}, ${3:int \$optname}, ${4:mixed \$optval})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_set_timeout">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_shutdown">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}${2:${3:[, int \$how= 2]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_strerror">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$errno})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="socket_write">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:string \$buffer}${3:${4:[, int \$length= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}${2:${3:[, int \$sort_flags= SORT_REGULAR]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="soundex">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_autoload_call">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$class})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_autoload_extensions">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$file_extensions]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_autoload_functions">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_autoload_register">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, callback \$autoload_function]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_autoload_unregister">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$autoload})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_autoload">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$class}${2:${3:[, string \$file_extensions= spl_autoload_extensions()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_classes">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spl_object_hash">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$obj})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="split">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, int \$limit]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="spliti">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$pattern}, ${2:string \$string}${3:${4:[, int \$limit]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sprintf">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, mixed \$args]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sql_regcase">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_array_query
		SQLiteDatabase->arrayQuery
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:string \$query}${3:${4:[, int \$result_type]}${5:${6:[, bool \$decode_binary   )   array sqlite_array_query    ( string \$query]}${7:${8:[, resource \$dbhandle]}${9:${10:[, int \$result_type]}${11:${12:[, bool \$decode_binary   )    array arrayQuery     ( string \$query]}${13:${14:[, int \$result_type]}${15:${16:[, bool \$decode_binary]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_busy_timeout
		SQLiteDatabase->busyTimeout
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:int \$milliseconds}, ${3:int \$milliseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_changes
		SQLiteDatabase->changes
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_column
		SQLiteResult->column
		SQLiteUnbuffered->column
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:mixed \$index}${3:${4:[, bool \$decode_binary= true   )    mixed column     ( mixed \$index_or_name]}${5:${6:[, bool \$decode_binary= true    )    mixed column     ( mixed \$index_or_name]}${7:${8:[, bool \$decode_binary= true]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_create_aggregate
		SQLiteDatabase->createAggregate
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:string \$function}, ${3:callback \$step}, ${4:callback \$finalize}${5:${6:[, int \$num_args= -1   )    void createAggregate     ( string \$function_name]}${7:${8:[, callback \$step_func]}${9:${10:[, callback \$finalize_func]}${11:${12:[, int \$num_args= -1]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_create_function
		SQLiteDatabase->createFunction
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:string \$function}, ${3:callback \$callback}${4:${5:[, int \$num_args= -1   )    void createFunction     ( string \$function_name]}${6:${7:[, callback \$callback]}${8:${9:[, int \$num_args= -1]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_current
		SQLiteResult->current
		SQLiteUnbuffered->current
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type= SQLITE_BOTH]}${4:${5:[, bool \$decode_binary= true   )    array current     ( int \$result_type= SQLITE_BOTH]}${6:${7:[, bool \$decode_binary= true    )    array current     ( int \$result_type= SQLITE_BOTH]}${8:${9:[, bool \$decode_binary= true]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_error_string">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$error})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_escape_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$item})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_exec
		SQLiteDatabase->exec
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:string \$query}${3:${4:[, string &amp;\$error_msg   )   bool sqlite_exec    ( string \$query]}${5:${6:[, resource \$dbhandle   )    bool queryExec     ( string \$query]}${7:${8:[, string &amp;\$error_msg]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_factory">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$mode= 0666]}${4:${5:[, string &amp;\$error_message]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_fetch_all
		SQLiteResult->fetchAll
		SQLiteUnbuffered->fetchAll
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type= SQLITE_BOTH]}${4:${5:[, bool \$decode_binary= true   )    array fetchAll     ( int \$result_type= SQLITE_BOTH]}${6:${7:[, bool \$decode_binary= true    )    array fetchAll     ( int \$result_type= SQLITE_BOTH]}${8:${9:[, bool \$decode_binary= true]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_fetch_array
		SQLiteResult->fetch
		SQLiteUnbuffered->fetch
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$result_type= SQLITE_BOTH]}${4:${5:[, bool \$decode_binary= true   )    array fetch     ( int \$result_type= SQLITE_BOTH]}${6:${7:[, bool \$decode_binary= true    )    array fetch     ( int \$result_type= SQLITE_BOTH]}${8:${9:[, bool \$decode_binary= true]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_fetch_column_types
		SQLiteDatabase->fetchColumnTypes
		">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$table}, ${2:resource \$dbhandle}${3:${4:[, int \$result_type   )    array fetchColumnTypes     ( string \$table_name]}${5:${6:[, int \$result_type]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_fetch_object
		SQLiteResult->fetchObject
		SQLiteUnbuffered->fetchObject
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, string \$class_name]}${4:${5:[, array \$ctor_params]}${6:${7:[, bool \$decode_binary= true   )    object fetchObject     ( string \$class_name]}${8:${9:[, array \$ctor_params]}${10:${11:[, bool \$decode_binary= true    )    object fetchObject     ( string \$class_name]}${12:${13:[, array \$ctor_params]}${14:${15:[, bool \$decode_binary= true]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_fetch_single
		SQLiteResult->fetchSingle
		SQLiteUnbuffered->fetchSingle
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, bool \$decode_binary= true   )    string fetchSingle     ( bool \$decode_binary= true    )    string fetchSingle     ( bool \$decode_binary= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_fetch_string">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_field_name
		SQLiteResult->fieldName
		SQLiteUnbuffered->fieldName
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field}, ${3:int \$field}, ${4:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_has_more">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_has_prev
		SQLiteResult->hasPrev
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_key
		SQLiteResult->key
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_last_error
		SQLiteDatabase->lastError
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_last_insert_rowid
		SQLiteDatabase->lastInsertRowid
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_libencoding">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_libversion">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_next
		SQLiteResult->next
		SQLiteUnbuffered->next
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_num_fields
		SQLiteResult->numFields
		SQLiteUnbuffered->numFields
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_num_rows
		SQLiteResult->numRows
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$mode= 0666]}${4:${5:[, string &amp;\$error_message   )     __construct     ( string \$filename]}${6:${7:[, int \$mode= 0666]}${8:${9:[, string &amp;\$error_message]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_popen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$mode= 0666]}${4:${5:[, string &amp;\$error_message]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_prev
		SQLiteResult->prev
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_query
		SQLiteDatabase->query
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:string \$query}${3:${4:[, int \$result_type]}${5:${6:[, string &amp;\$error_msg   )   resource sqlite_query    ( string \$query]}${7:${8:[, resource \$dbhandle]}${9:${10:[, int \$result_type]}${11:${12:[, string &amp;\$error_msg   )    SQLiteResult query     ( string \$query]}${13:${14:[, int \$result_type]}${15:${16:[, string &amp;\$error_msg]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_rewind
		SQLiteResult->rewind
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_seek
		SQLiteResult->seek
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$rownum}, ${3:int \$rownum})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_single_query
		SQLiteDatabase->singleQuery
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$db}, ${2:string \$query}${3:${4:[, bool \$first_row_only]}${5:${6:[, bool \$decode_binary   )    array singleQuery     ( string \$query]}${7:${8:[, bool \$first_row_only]}${9:${10:[, bool \$decode_binary]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_udf_decode_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_udf_encode_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_unbuffered_query
		SQLiteDatabase->unbufferedQuery
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$dbhandle}, ${2:string \$query}${3:${4:[, int \$result_type]}${5:${6:[, string &amp;\$error_msg   )   resource sqlite_unbuffered_query    ( string \$query]}${7:${8:[, resource \$dbhandle]}${9:${10:[, int \$result_type]}${11:${12:[, string &amp;\$error_msg      )    SQLiteUnbuffered unbufferedQuery     ( string \$query]}${13:${14:[, int \$result_type]}${15:${16:[, string &amp;\$error_msg]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqlite_valid
		SQLiteResult->valid
		SQLiteUnbuffered->valid
		">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sqrt">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="srand">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$seed]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sscanf">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$format}${3:${4:[, mixed &amp;\$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_auth_hostbased_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$username}, ${3:string \$hostname}, ${4:string \$pubkeyfile}, ${5:string \$privkeyfile}${6:${7:[, string \$passphrase]}${8:${9:[, string \$local_username]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_auth_none">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$username})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_auth_password">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$username}, ${3:string \$password})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_auth_pubkey_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$username}, ${3:string \$pubkeyfile}, ${4:string \$privkeyfile}${5:${6:[, string \$passphrase]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$host}${2:${3:[, int \$port= 22]}${4:${5:[, array \$methods]}${6:${7:[, array \$callbacks]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_exec">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$command}${3:${4:[, string \$pty]}${5:${6:[, array \$env]}${7:${8:[, int \$width= 80]}${9:${10:[, int \$height= 25]}${11:${12:[, int \$width_height_type= SSH2_TERM_UNIT_CHARS]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_fetch_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$channel}, ${2:int \$streamid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_fingerprint">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}${2:${3:[, int \$flags= SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_methods_negotiated">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_publickey_add">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pkey}, ${2:string \$algoname}, ${3:string \$blob}${4:${5:[, bool \$overwrite= false]}${6:${7:[, array \$attributes]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_publickey_init">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_publickey_list">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pkey})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_publickey_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$pkey}, ${2:string \$algoname}, ${3:string \$blob})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_scp_recv">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$remote}, ${3:string \$local})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_scp_send">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$local}, ${3:string \$remote}${4:${5:[, int \$create_mode= 0644]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_lstat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_mkdir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$dirname}${3:${4:[, int \$mode= 0777]}${5:${6:[, bool \$recursive= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_readlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_realpath">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_rename">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$from}, ${3:string \$to})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_rmdir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$dirname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_stat">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_symlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$target}, ${3:string \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp_unlink">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$sftp}, ${2:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_sftp">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_shell">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}${2:${3:[, string \$term_type= &quot;vanilla&quot;]}${4:${5:[, array \$env]}${6:${7:[, int \$width= 80]}${8:${9:[, int \$height= 25]}${10:${11:[, int \$width_height_type= SSH2_TERM_UNIT_CHARS]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ssh2_tunnel">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$session}, ${2:string \$host}, ${3:int \$port})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_absolute_deviation">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_beta">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_binomial">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_cauchy">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_chisquare">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_exponential">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_f">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_gamma">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_laplace">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_logistic">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_negative_binomial">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_noncentral_chisquare">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_noncentral_f">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:float \$par}, ${5:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_poisson">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_t">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_uniform">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_cdf_weibull">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_covariance">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a}, ${2:array \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_den_uniform">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$a}, ${3:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_beta">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$a}, ${3:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_cauchy">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$ave}, ${3:float \$stdev})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_chisquare">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$dfr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_exponential">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$scale})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_f">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$dfr}, ${3:float \$dfr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_gamma">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$shape}, ${3:float \$scale})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_laplace">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$ave}, ${3:float \$stdev})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_logistic">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$ave}, ${3:float \$stdev})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_negative_binomial">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$n}, ${3:float \$pi})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_normal">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$ave}, ${3:float \$stdev})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_pmf_binomial">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$n}, ${3:float \$pi})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_pmf_hypergeometric">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$n}, ${2:float \$n}, ${3:float \$N}, ${4:float \$N})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_pmf_poisson">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$lb})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_t">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$dfr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_dens_weibull">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$a}, ${3:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_harmonic_mean">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_kurtosis">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_beta">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$a}, ${2:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_chisquare">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$df})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_exponential">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$av})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_f">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dfn}, ${2:float \$dfd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_funiform">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$low}, ${2:float \$high})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_gamma">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$a}, ${2:float \$r})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_ibinomial_negative">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$n}, ${2:float \$p})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_ibinomial">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$n}, ${2:float \$pp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_int">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_ipoisson">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$mu})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_iuniform">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$low}, ${2:int \$high})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_noncenral_chisquare">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$df}, ${2:float \$xnonc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_noncentral_f">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dfn}, ${2:float \$dfd}, ${3:float \$xnonc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_noncentral_t">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$df}, ${2:float \$xnonc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_normal">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$av}, ${2:float \$sd})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_gen_t">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$df})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_get_seeds">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_phrase_to_seeds">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$phrase})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_ranf">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_rand_setall">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$iseed}, ${2:int \$iseed})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_skew">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_standard_deviation">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a}${2:${3:[, bool \$sample= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_binomial_coef">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$x}, ${2:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_correlation">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arr}, ${2:array \$arr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_gennch">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$n})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_independent_t">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arr}, ${2:array \$arr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_innerproduct">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arr}, ${2:array \$arr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_noncentral_t">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$par}, ${2:float \$par}, ${3:float \$par}, ${4:int \$which})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_paired_t">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arr}, ${2:array \$arr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_percentile">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$df}, ${2:float \$xnonc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_stat_powersum">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arr}, ${2:float \$power})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stats_variance">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$a}${2:${3:[, bool \$sample= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_getcsv">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input}${2:${3:[, string \$delimiter]}${4:${5:[, string \$enclosure]}${6:${7:[, string \$escape]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_ireplace">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$search}, ${2:mixed \$replace}, ${3:mixed \$subject}${4:${5:[, int &amp;\$count]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_pad">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input}, ${2:int \$pad}${3:${4:[, string \$pad_string= &quot; &quot;]}${5:${6:[, int \$pad_type= STR_PAD_RIGHT]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_repeat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input}, ${2:int \$multiplier})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$search}, ${2:mixed \$replace}, ${3:mixed \$subject}${4:${5:[, int &amp;\$count]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_rot13">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_shuffle">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_split">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$split_length= 1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="str_word_count">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}${2:${3:[, int \$format= 0]}${4:${5:[, string \$charlist]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strcasecmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strchr">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strcmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strcoll">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strcspn">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str}${3:${4:[, int \$start]}${5:${6:[, int \$length]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_bucket_append">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$brigade}, ${2:resource \$bucket})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_bucket_make_writeable">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$brigade})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_bucket_new">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:string \$buffer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_bucket_prepend">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$brigade}, ${2:resource \$bucket})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_create">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$options]}${3:${4:[, array \$params]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_get_default">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_get_options">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_get_params">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_set_default">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:string \$wrapper}, ${3:string \$option}, ${4:mixed \$value}, ${5:resource \$stream}, ${6:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_context_set_params">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:array \$params})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_copy_to_stream">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$source}, ${2:resource \$dest}${3:${4:[, int \$maxlength= -1]}${5:${6:[, int \$offset= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}${2:${3:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_filter_append">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:string \$filtername}${3:${4:[, int \$read_write]}${5:${6:[, mixed \$params]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_filter_prepend">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:string \$filtername}${3:${4:[, int \$read_write]}${5:${6:[, mixed \$params]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_filter_register">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filtername}, ${2:string \$classname}, ${3:resource \$in}, ${4:resource \$out}, ${5:\$consumed}, ${6:bool \$closing})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_filter_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_get_contents">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}${2:${3:[, int \$maxlength= -1]}${4:${5:[, int \$offset= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_get_filters">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_get_line">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:int \$length}${3:${4:[, string \$ending]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_get_meta_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_get_transports">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_get_wrappers">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_is_local">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_notification_callback">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$notification}, ${2:int \$severity}, ${3:string \$message}, ${4:int \$message}, ${5:int \$bytes}, ${6:int \$bytes})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_register_wrapper">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_resolve_include_path">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, resource \$context]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_select">
			<behavior>
				<append-static>
					<transform-into>(${1:\$read}, ${2:\$write}, ${3:\$except}, ${4:int \$tv}${5:${6:[, int \$tv_usec= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_set_blocking">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_set_timeout">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:int \$seconds}${3:${4:[, int \$microseconds= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_set_write_buffer">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:int \$buffer})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_accept">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$server}${2:${3:[, float \$timeout= ini_get(&quot;default_socket_timeout&quot;)]}${4:${5:[, string &amp;\$peername]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_client">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$remote}${2:${3:[, int &amp;\$errno]}${4:${5:[, string &amp;\$errstr]}${6:${7:[, float \$timeout= ini_get(&quot;default_socket_timeout&quot;)]}${8:${9:[, int \$flags= STREAM_CLIENT_CONNECT]}${10:${11:[, resource \$context]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_enable_crypto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:bool \$enable}${3:${4:[, int \$crypto_type]}${5:${6:[, resource \$session_stream]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_get_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:bool \$want})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_pair">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$domain}, ${2:int \$type}, ${3:int \$protocol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_recvfrom">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:int \$length}${3:${4:[, int \$flags= 0]}${5:${6:[, string &amp;\$address]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_sendto">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$socket}, ${2:string \$data}${3:${4:[, int \$flags= 0]}${5:${6:[, string \$address]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_server">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$local}${2:${3:[, int &amp;\$errno]}${4:${5:[, string &amp;\$errstr]}${6:${7:[, int \$flags= STREAM_SERVER_BIND | STREAM_SERVER_LISTEN]}${8:${9:[, resource \$context]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_socket_shutdown">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream}, ${2:int \$how})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_supports_lock">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$stream})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_wrapper_register">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$protocol}, ${2:string \$classname}${3:${4:[, int \$flags = 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_wrapper_restore">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$protocol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stream_wrapper_unregister">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$protocol})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strftime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}${2:${3:[, int \$timestamp= time()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strip_tags">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$allowable_tags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stripcslashes">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stripos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stripslashes">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="stristr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:mixed \$needle}${3:${4:[, bool \$before_needle= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strlen">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strnatcasecmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strnatcmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strncasecmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str}, ${3:int \$len})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strncmp">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str}, ${3:int \$len})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strpbrk">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$char})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:mixed \$needle}${3:${4:[, int \$offset= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strptime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$date}, ${2:string \$format})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strrchr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:mixed \$needle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strrev">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strripos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strrpos">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strspn">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$str}${3:${4:[, int \$start]}${5:${6:[, int \$length]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strstr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:mixed \$needle}${3:${4:[, bool \$before_needle= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strtok">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$token}, ${3:string \$token})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strtolower">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strtotime">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$time}${2:${3:[, int \$now]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strtoupper">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strtr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$from}, ${3:string \$to}, ${4:string \$str}, ${5:array \$replace})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="strval">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="substr_compare">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$main}, ${2:string \$str}, ${3:int \$offset}${4:${5:[, int \$length= 0]}${6:${7:[, bool \$case_insensitivity= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="substr_count">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$haystack}, ${2:string \$needle}${3:${4:[, int \$offset= 0]}${5:${6:[, int \$length]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="substr_replace">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$string}, ${2:string \$replacement}, ${3:int \$start}${4:${5:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="substr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string}, ${2:int \$start}${3:${4:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, bool \$recursive= true]}${4:${5:[, bool \$force= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_auth_get_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_auth_set_parameter">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$key}, ${2:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_blame">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$repository}${2:${3:[, int \$revision_no= SVN_REVISION_HEAD]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_cat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$repos}${2:${3:[, int \$revision_no]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_checkout">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$repos}, ${2:string \$targetpath}${3:${4:[, int \$revision]}${5:${6:[, int \$flags= 0]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_cleanup">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$workingdir})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_client_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$log}, ${2:array \$targets}${3:${4:[, bool \$dontrecurse]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_diff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}, ${2:int \$rev}, ${3:string \$path}, ${4:int \$rev})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_export">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$frompath}, ${2:string \$topath}${3:${4:[, bool \$working_copy= true]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_abort_txn">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$txn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_apply_text">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_begin_txn2">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$repos}, ${2:int \$rev})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_change_node_prop">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path}, ${3:string \$name}, ${4:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_check_path">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fsroot}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_contents_changed">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path}, ${3:resource \$root}, ${4:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_copy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$from}, ${2:string \$from}, ${3:resource \$to}, ${4:string \$to})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_delete">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_dir_entries">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fsroot}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_file_contents">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fsroot}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_file_length">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fsroot}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_is_dir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_is_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_make_dir">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_make_file">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_node_created_rev">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fsroot}, ${2:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_node_prop">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fsroot}, ${2:string \$path}, ${3:string \$propname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_props_changed">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$root}, ${2:string \$path}, ${3:resource \$root}, ${4:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_revision_prop">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fs}, ${2:int \$revnum}, ${3:string \$propname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_revision_root">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fs}, ${2:int \$revnum})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_txn_root">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$txn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_fs_youngest_rev">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$fs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_import">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}, ${2:string \$url}, ${3:bool \$nonrecursive})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_log">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$repos}${2:${3:[, int \$start_revision]}${4:${5:[, int \$end_revision]}${6:${7:[, int \$limit= 0]}${8:${9:[, int \$flags= SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_ls">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$repos}${2:${3:[, int \$revision_no= SVN_REVISION_HEAD]}${4:${5:[, bool \$recurse= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_mkdir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_create">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, array \$config]}${4:${5:[, array \$fsconfig]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_fs_begin_txn_for_commit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$repos}, ${2:int \$rev}, ${3:string \$author}, ${4:string \$log})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_fs_commit_txn">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$txn})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_fs">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$repos})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_hotcopy">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$repospath}, ${2:string \$destpath}, ${3:bool \$cleanlogs})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_repos_recover">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_revert">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, bool \$recursive= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_status">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="svn_update">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$path}${2:${3:[, int \$revno= SVN_REVISION_HEAD]}${4:${5:[, bool \$recurse= true]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actiongeturl">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$url}, ${2:string \$target})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actiongotoframe">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$framenumber})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actiongotolabel">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$label})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actionnextframe">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actionplay">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actionprevframe">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actionsettarget">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actionstop">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actiontogglequality">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_actionwaitforframe">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$framenumber}, ${2:int \$skipcount})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_addbuttonrecord">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$states}, ${2:int \$shapeid}, ${3:int \$depth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_addcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$g}, ${3:float \$b}, ${4:float \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_closefile">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$return_file]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_definebitmap">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:string \$image})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_definefont">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fontid}, ${2:string \$fontname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_defineline">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:float \$x}, ${3:float \$y}, ${4:float \$x}, ${5:float \$y}, ${6:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_definepoly">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:array \$coords}, ${3:int \$npoints}, ${4:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_definerect">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:float \$x}, ${3:float \$y}, ${4:float \$x}, ${5:float \$y}, ${6:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_definetext">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:string \$str}, ${3:int \$docenter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_endbutton">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_enddoaction">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_endshape">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_endsymbol">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_fontsize">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$size})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_fontslant">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$slant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_fonttracking">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$tracking})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_getbitmapinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bitmapid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_getfontinfo">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_getframe">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_labelframe">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_lookat">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$view}, ${2:float \$view}, ${3:float \$view}, ${4:float \$reference}, ${5:float \$reference}, ${6:float \$reference}, ${7:float \$twist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_modifyobject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$depth}, ${2:int \$how})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_mulcolor">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$g}, ${3:float \$b}, ${4:float \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_nextid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_oncondition">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$transition})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_openfile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:float \$width}, ${3:float \$height}, ${4:float \$framerate}, ${5:float \$r}, ${6:float \$g}, ${7:float \$b})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_ortho">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$xmin}, ${2:float \$xmax}, ${3:float \$ymin}, ${4:float \$ymax}, ${5:float \$zmin}, ${6:float \$zmax})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_ortho2">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$xmin}, ${2:float \$xmax}, ${3:float \$ymin}, ${4:float \$ymax})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_perspective">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$fovy}, ${2:float \$aspect}, ${3:float \$near}, ${4:float \$far})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_placeobject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:int \$depth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_polarview">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dist}, ${2:float \$azimuth}, ${3:float \$incidence}, ${4:float \$twist})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_popmatrix">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_posround">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$round})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_pushmatrix">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_removeobject">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$depth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_rotate">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$angle}, ${2:string \$axis})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_scale">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$z})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_setfont">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$fontid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_setframe">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$framenumber})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapearc">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$r}, ${4:float \$ang}, ${5:float \$ang})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapecurveto">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapecurveto3">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$x}, ${4:float \$y}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapefillbitmapclip">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bitmapid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapefillbitmaptile">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$bitmapid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapefilloff">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapefillsolid">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$g}, ${3:float \$b}, ${4:float \$a})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapelinesolid">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$g}, ${3:float \$b}, ${4:float \$a}, ${5:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapelineto">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_shapemoveto">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_showframe">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_startbutton">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid}, ${2:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_startdoaction">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_startshape">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_startsymbol">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$objid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_textwidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_translate">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y}, ${3:float \$z})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="swf_viewport">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$xmin}, ${2:float \$xmax}, ${3:float \$ymin}, ${4:float \$ymax})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFAction->__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$script})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFBitmap->__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$file}${2:${3:[, mixed \$alphafile]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFBitmap->getHeight">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFBitmap->getWidth">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->addAction">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFAction \$action}, ${2:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->addASound">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFSound \$sound}, ${2:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->addShape">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFShape \$shape}, ${2:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->setAction">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFAction \$action})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->setDown">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFShape \$shape})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->setHit">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFShape \$shape})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->setMenu">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$flag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->setOver">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFShape \$shape})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFButton->setUp">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFShape \$shape})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->addAction">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFAction \$action}, ${2:int \$flags})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->addColor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$red}, ${2:int \$green}, ${3:int \$blue}${4:${5:[, int \$a]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->endMask">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getRot">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getX">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getXScale">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getXSkew">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getY">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getYScale">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->getYSkew">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->move">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dx}, ${2:float \$dy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->moveTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->multColor">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$red}, ${2:float \$green}, ${3:float \$blue}${4:${5:[, float \$a]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->remove">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->rotate">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->rotateTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->scale">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dx}, ${2:float \$dy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->scaleTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}${2:${3:[, float \$y]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->setDepth">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$depth})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->setMaskLevel">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$level})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->setMatrix">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$a}, ${2:float \$b}, ${3:float \$c}, ${4:float \$d}, ${5:float \$x}, ${6:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->setName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->setRatio">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$ratio})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->skewX">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$ddegrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->skewXTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->skewY">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$ddegrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFDisplayItem->skewYTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$degrees})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFill->moveTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFill->rotateTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$angle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFill->scaleTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}${2:${3:[, float \$y]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFill->skewXTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFill->skewYTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->getAscent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->getDescent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->getLeading">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->getShape">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->getUTF8Width">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFont->getWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFontChar->addChars">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$char})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFFontChar->addUTF8Chars">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$char})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFGradient->addEntry">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$ratio}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}${5:${6:[, int \$alpha= 255]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFGradient->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMorph->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMorph->getShape1">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMorph->getShape2">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->add">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$instance})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->addExport">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFCharacter \$char}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->addFont">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFFont \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$version]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->importChar">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$libswf}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->importFont">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$libswf}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->labelFrame">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$label})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->nextFrame">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->output">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$compression]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->remove">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$instance})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->save">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$compression]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->saveToFile">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$x}${2:${3:[, int \$compression]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->setbackground">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$red}, ${2:int \$green}, ${3:int \$blue})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->setDimension">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width}, ${2:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->setFrames">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->setRate">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$rate})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->startSound">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFSound \$sound})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->stopSound">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFSound \$sound})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->streamMP3">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$mp}${2:${3:[, float \$skip= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFMovie->writeExports">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFPrebuiltClip->__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->addFill">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$red}, ${2:int \$green}, ${3:int \$blue}${4:${5:[, int \$alpha= 255    )    SWFFill addFill     ( SWFBitmap \$bitmap]}${6:${7:[, int \$flags    )    SWFFill addFill     ( SWFGradient \$gradient]}${8:${9:[, int \$flags]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawArc">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r}, ${2:float \$startAngle}, ${3:float \$endAngle})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawCircle">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$r})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawCubic">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$bx}, ${2:float \$by}, ${3:float \$cx}, ${4:float \$cy}, ${5:float \$dx}, ${6:float \$dy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawCubicTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$bx}, ${2:float \$by}, ${3:float \$cx}, ${4:float \$cy}, ${5:float \$dx}, ${6:float \$dy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawCurve">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$controldx}, ${2:float \$controldy}, ${3:float \$anchordx}, ${4:float \$anchordy}, ${5:float \$targetdy}${6:${7:[, float \$targetdx]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawCurveTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$controlx}, ${2:float \$controly}, ${3:float \$anchorx}, ${4:float \$anchory}, ${5:float \$targety}${6:${7:[, float \$targetx]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawGlyph">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFFont \$font}, ${2:string \$character}${3:${4:[, int \$size]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawLine">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dx}, ${2:float \$dy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->drawLineTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->movePen">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$dx}, ${2:float \$dy})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->movePenTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->setLeftFill">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFGradient \$fill}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}${5:${6:[, int \$a]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->setLine">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFShape \$shape}, ${2:int \$width}, ${3:int \$red}, ${4:int \$green}, ${5:int \$blue}${6:${7:[, int \$a]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFShape->setRightFill">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFGradient \$fill}, ${2:int \$red}, ${3:int \$green}, ${4:int \$blue}${5:${6:[, int \$a]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSound">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSoundInstance->loopCount">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$point})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSoundInstance->loopInPoint">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$point})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSoundInstance->loopOutPoint">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$point})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSoundInstance->noMultiple">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->add">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->labelFrame">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$label})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->nextFrame">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->remove">
			<behavior>
				<append-static>
					<transform-into>(${1:object \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->setFrames">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->startSound">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFSound \$sount})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFSprite->stopSound">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFSound \$sount})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->addString">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->addUTF8String">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->__construct">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->getAscent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->getDescent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->getLeading">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->getUTF8Width">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->getWidth">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->moveTo">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$x}, ${2:float \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->setColor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$red}, ${2:int \$green}, ${3:int \$blue}${4:${5:[, int \$a= 255]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->setFont">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFFont \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->setHeight">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFText->setSpacing">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$spacing})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->addChars">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$chars})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->addString">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$string})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->align">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$alignement})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setBounds">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width}, ${2:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setColor">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$red}, ${2:int \$green}, ${3:int \$blue}${4:${5:[, int \$a= 255]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setFont">
			<behavior>
				<append-static>
					<transform-into>(${1:SWFFont \$font})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setHeight">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setIndentation">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setLeftMargin">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setLineSpacing">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$height})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setMargins">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$left}, ${2:float \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setPadding">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$padding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFTextField->setRightMargin">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$width})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFVideoStream->__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$file]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFVideoStream->getNumFrames">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SWFVideoStream->setDimension">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$x}, ${2:int \$y})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Swish::__construct">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Swish->getMetaList">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Swish->getPropertyList">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Swish->prepare">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$query]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="Swish->query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishResult->getMetaList">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishResult->stem">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$word})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishResults->getParsedWords">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishResults->getRemovedStopwords">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishResults->nextResult">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishResults->seekResult">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$position})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishSearch->execute">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$query]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishSearch->resetLimit">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishSearch->setLimit">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$property}, ${2:string \$low}, ${3:string \$high})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishSearch->setPhraseDelimiter">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$delimiter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishSearch->setSort">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$sort})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="SwishSearch->setStructure">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$structure})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_affected_rows">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_close">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_connect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$servername]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, string \$charset]}${9:${10:[, string \$appname]}${11:${12:[, bool \$new= false]}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_data_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_deadlock_retry_count">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$retry})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_fetch_array">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_fetch_assoc">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_fetch_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, int \$field_offset= -1]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_fetch_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}${2:${3:[, mixed \$object]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_fetch_row">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_field_seek">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_free_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_get_last_message">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_min_client_severity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$severity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_min_error_severity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$severity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_min_message_severity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$severity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_min_server_severity">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$severity})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_num_fields">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_num_rows">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_pconnect">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$servername]}${3:${4:[, string \$username]}${5:${6:[, string \$password]}${7:${8:[, string \$charset]}${9:${10:[, string \$appname]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$result}, ${2:int \$row}, ${3:mixed \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_select_db">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$database}${2:${3:[, resource \$link_identifier]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_set_message_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:callback \$handler}${2:${3:[, resource \$connection]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sybase_unbuffered_query">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$query}, ${2:resource \$link}${3:${4:[, bool \$store_result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="symlink">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}, ${2:string \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sys_get_temp_dir">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="sys_getloadavg">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="syslog">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$priority}, ${2:string \$message})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="system">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$command}${2:${3:[, int &amp;\$return_var]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tan">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tanh">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tcpwrap_check">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$daemon}, ${2:string \$address}${3:${4:[, string \$user]}${5:${6:[, bool \$nodns= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tempnam">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dir}, ${2:string \$prefix})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="textdomain">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$text})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_access_count">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_clean_repair">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_config_count">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy::__construct">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$filename]}${3:${4:[, mixed \$config]}${5:${6:[, string \$encoding]}${7:${8:[, bool \$use_include_path]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_diagnose">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_error_count">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_body">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_config">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_error_buffer">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_head">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_html_ver">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_html">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_opt_doc">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object}, ${2:string \$optname}, ${3:string \$optname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_output">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_release">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_root">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_get_status">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_getopt">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object}, ${2:string \$option}, ${3:string \$option})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_is_xhtml">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_is_xml">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_load_config">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_node->get_attr">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$attrib})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_node->get_nodes">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$node})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_node->next">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_node->prev">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_parse_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, mixed \$config]}${4:${5:[, string \$encoding]}${6:${7:[, bool \$use_include_path= false   )   bool tidy-&gt;parseFile    ( string \$filename]}${8:${9:[, mixed \$config]}${10:${11:[, string \$encoding]}${12:${13:[, bool \$use_include_path= false]}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_parse_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input}${2:${3:[, mixed \$config]}${4:${5:[, string \$encoding   )   bool tidy-&gt;parseString    ( string \$input]}${6:${7:[, mixed \$config]}${8:${9:[, string \$encoding]}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_repair_file">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, mixed \$config]}${4:${5:[, string \$encoding]}${6:${7:[, bool \$use_include_path= false]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_repair_string">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data}${2:${3:[, mixed \$config]}${4:${5:[, string \$encoding]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_reset_config">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_save_config">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_set_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_setopt">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$option}, ${2:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidy_warning_count">
			<behavior>
				<append-static>
					<transform-into>(${1:tidy \$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode::getParent">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->hasChildren">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->hasSiblings">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->isAsp">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->isComment">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->isHtml">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->isJste">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->isPhp">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tidyNode->isText">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="time_nanosleep">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$seconds}, ${2:int \$nanoseconds})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="time_sleep_until">
			<behavior>
				<append-static>
					<transform-into>(${1:float \$timestamp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="time">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_abbreviations_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_identifiers_list">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_location_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_name_from_abbr">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$abbr}${2:${3:[, int \$gmtOffset= -1]}${4:${5:[, int \$isdst= -1]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_name_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_offset_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$timezone}, ${2:string \$timezone})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="timezone_transitions_get">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="tmpfile">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="token_get_all">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$source})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="token_name">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$token})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="touch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$time= time()]}${4:${5:[, int \$atime]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="trigger_error">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$error}${2:${3:[, int \$error_type= E_USER_NOTICE]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="trim">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, string \$charlist]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="uasort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}, ${2:callback \$cmp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ucfirst">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ucwords">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_add_search_limit">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:int \$var}, ${3:string \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_alloc_agent_array">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$databases})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_alloc_agent">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dbaddr}${2:${3:[, string \$dbmode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_api_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_cat_list">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$category})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_cat_path">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$category})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_check_charset">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$charset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_check_stored">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:int \$link}, ${3:string \$doc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_clear_search_limits">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_close_stored">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:int \$link})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_crc32">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_errno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_find">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_free_agent">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_free_ispell_data">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$agent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_free_res">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$res})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_get_doc_count">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_get_res_field">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$res}, ${2:int \$row}, ${3:int \$field})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_get_res_param">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$res}, ${2:int \$param})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_hash32">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_load_ispell_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:int \$var}, ${3:string \$val}, ${4:string \$val}, ${5:int \$flag})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_open_stored">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:string \$storedaddr})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="udm_set_agent_param">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$agent}, ${2:int \$var}, ${3:string \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="uksort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}, ${2:callback \$cmp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="umask">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$mask]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unicode_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$input}, ${2:string \$encoding}${3:${4:[, int \$errmode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unicode_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:unicode \$input}, ${2:string \$encoding}${3:${4:[, int \$errmode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unicode_get_error_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$direction})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unicode_get_subst_char">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unicode_set_error_mode">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$direction}, ${2:int \$mode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unicode_set_subst_char">
			<behavior>
				<append-static>
					<transform-into>(${1:unicode \$character})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="uniqid">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$prefix= &quot;&quot;]}${3:${4:[, bool \$more_entropy= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unixtojd">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$timestamp= time()]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unlink">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, resource \$context]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unpack">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}, ${2:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unregister_tick_function">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unserialize">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="unset">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var}${2:${3:[, mixed \$var]}${4:${5:[, mixed \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="urldecode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="urlencode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="use_soap_error_handler">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$handler]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="user_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="usleep">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$micro})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="usort">
			<behavior>
				<append-static>
					<transform-into>(${1:\$array}, ${2:callback \$cmp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="utf8_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="utf8_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="var_dump">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$expression}${2:${3:[, mixed \$expression]}${4:${5:[, \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="var_export">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$expression}${2:${3:[, bool \$return= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_abs">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$val})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_add">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_and">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_cast">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$variant}, ${2:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_cat">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_cmp">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right}${3:${4:[, int \$lcid]}${5:${6:[, int \$flags]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_date_from_timestamp">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$timestamp})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_date_to_timestamp">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$variant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_div">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_eqv">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_fix">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_get_type">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$variant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_idiv">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_imp">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_int">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_mod">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_mul">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_neg">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_not">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variant})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_or">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_pow">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_round">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$variant}, ${2:int \$decimals})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_set_type">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$variant}, ${2:int \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_set">
			<behavior>
				<append-static>
					<transform-into>(${1:variant \$variant}, ${2:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_sub">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="variant_xor">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$left}, ${2:mixed \$right})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="version_compare">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$version}, ${2:string \$version}${3:${4:[, string \$operator]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vfprintf">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$handle}, ${2:string \$format}, ${3:array \$args})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="virtual">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_add_alias_domain_ex">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$olddomain}, ${2:string \$newdomain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_add_alias_domain">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$aliasdomain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_add_domain_ex">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$passwd}${3:${4:[, string \$quota]}${5:${6:[, string \$bounce]}${7:${8:[, bool \$apop]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_add_domain">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$dir}, ${3:int \$uid}, ${4:int \$gid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_add_user">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain}, ${3:string \$password}${4:${5:[, string \$gecos]}${6:${7:[, bool \$apop]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_alias_add">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain}, ${3:string \$alias})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_alias_del_domain">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_alias_del">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_alias_get_all">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_alias_get">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$alias}, ${2:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_auth_user">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain}, ${3:string \$password}${4:${5:[, string \$apop]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_del_domain_ex">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_del_domain">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_del_user">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_error">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_passwd">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain}, ${3:string \$password}${4:${5:[, bool \$apop]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vpopmail_set_user_quota">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$user}, ${2:string \$domain}, ${3:string \$quota})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vprintf">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}, ${2:array \$args})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="vsprintf">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$format}, ${2:array \$args})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="w32api_deftype">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$typename}, ${2:string \$member}, ${3:string \$member}${4:${5:[, string \$...]}${6:${7:[, string \$...]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="w32api_init_dtype">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$typename}, ${2:mixed \$value}${3:${4:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="w32api_invoke_function">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$funcname}, ${2:mixed \$argument}${3:${4:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="w32api_register_function">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$library}, ${2:string \$function}, ${3:string \$return})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="w32api_set_call_method">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$method})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_add_vars">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$packet}, ${2:mixed \$var}${3:${4:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_deserialize">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_packet_end">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$packet})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_packet_start">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$comment]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_serialize_value">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var}${2:${3:[, string \$comment]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_serialize_vars">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$var}${2:${3:[, mixed \$...]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wddx_unserialize">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$packet})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_create_service">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$details}${2:${3:[, string \$machine]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_delete_service">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$servicename}${2:${3:[, string \$machine]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_get_last_control_message">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_ps_list_procs">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_ps_stat_mem">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_ps_stat_proc">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, int \$pid= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_query_service_status">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$servicename}${2:${3:[, string \$machine]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_set_service_status">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$status})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_start_service_ctrl_dispatcher">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_start_service">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$servicename}${2:${3:[, string \$machine]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="win32_stop_service">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$servicename}${2:${3:[, string \$machine]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="wordwrap">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}${2:${3:[, int \$width= 75]}${4:${5:[, string \$break= &quot;\n&quot;]}${6:${7:[, bool \$cut= false]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xattr_get">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$name}${3:${4:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xattr_list">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xattr_remove">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$name}${3:${4:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xattr_set">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}, ${2:string \$name}, ${3:string \$value}${4:${5:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xattr_supported">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags= 0]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_bdiff_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_bdiff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}, ${3:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_bpatch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file}, ${2:string \$patch}, ${3:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_diff_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}, ${3:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_diff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}, ${3:string \$dest}${4:${5:[, int \$context= 3]}${6:${7:[, bool \$minimal= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_merge3">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}, ${3:string \$new}, ${4:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_patch_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file}, ${2:string \$patch}, ${3:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_patch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$file}, ${2:string \$patch}, ${3:string \$dest}${4:${5:[, int \$flags= DIFF_PATCH_NORMAL]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_file_rabdiff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}, ${3:string \$dest})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_bdiff_size">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$patch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_bdiff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_bpatch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$patch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_diff_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_diff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}${3:${4:[, int \$context= 3]}${5:${6:[, bool \$minimal= false]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_merge3">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new}, ${3:string \$new}${4:${5:[, string &amp;\$error]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_patch_binary">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$patch})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_patch">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$str}, ${2:string \$patch}${3:${4:[, int \$flags]}${5:${6:[, string &amp;\$error]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xdiff_string_rabdiff">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$old}, ${2:string \$new})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_error_string">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$code})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_get_current_byte_index">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_get_current_column_number">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_get_current_line_number">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_get_error_code">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parse_into_struct">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:string \$data}, ${3:\$values}${4:${5:[, array &amp;\$index]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:string \$data}${3:${4:[, bool \$is_final= false]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parser_create_ns">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$encoding]}${3:${4:[, string \$separator]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parser_create">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parser_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parser_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:int \$option})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_parser_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:int \$option}, ${3:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_character_data_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_default_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_element_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$start}, ${3:callback \$end}, ${4:resource \$parser}, ${5:string \$name}, ${6:array \$attribs}, ${7:resource \$parser}, ${8:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_end_namespace_decl_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$user}, ${5:string \$prefix})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_external_entity_ref_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$open}, ${5:string \$base}, ${6:string \$system}, ${7:string \$public})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_notation_decl_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$notation}, ${5:string \$base}, ${6:string \$system}, ${7:string \$public})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:\$object})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_processing_instruction_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$target}, ${5:string \$data})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_start_namespace_decl_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$user}, ${5:string \$prefix}, ${6:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xml_set_unparsed_entity_decl_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$parser}, ${2:callback \$handler}, ${3:resource \$parser}, ${4:string \$entity}, ${5:string \$base}, ${6:string \$system}, ${7:string \$public}, ${8:string \$notation})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_decode_request">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xml}, ${2:\$method}${3:${4:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_decode">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xml}${2:${3:[, string \$encoding]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_encode_request">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$method}, ${2:mixed \$params}${3:${4:[, array \$output_options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_encode">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_get_type">
			<behavior>
				<append-static>
					<transform-into>(${1:mixed \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_is_fault">
			<behavior>
				<append-static>
					<transform-into>(${1:array \$arg})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_parse_method_descriptions">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xml})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_server_add_introspection_data">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$server}, ${2:array \$desc})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_server_call_method">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$server}, ${2:string \$xml}, ${3:mixed \$user}${4:${5:[, array \$output_options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_server_create">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_server_destroy">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$server})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_server_register_introspection_callback">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$server}, ${2:string \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_server_register_method">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$server}, ${2:string \$method}, ${3:string \$function})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xmlrpc_set_type">
			<behavior>
				<append-static>
					<transform-into>(${1:\$value}, ${2:string \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endAttribute">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endCData">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endComment">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endDocument">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endDTDAttlist">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endDTDElement">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endDTDEntity">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endDTD">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endElement">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::endPI">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::flush">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$empty    )   mixed xmlwriter_flush    ( resource \$xmlwriter]}${3:${4:[, bool \$empty]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::fullEndElement">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::openMemory">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::openURI">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$uri}, ${2:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::outputMemory">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, bool \$flush    )   string xmlwriter_output_memory    ( resource \$xmlwriter]}${3:${4:[, bool \$flush]}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::setIndentString">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$indentString}, ${2:resource \$xmlwriter}, ${3:string \$indentString})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::setIndent">
			<behavior>
				<append-static>
					<transform-into>(${1:bool \$indent}, ${2:resource \$xmlwriter}, ${3:bool \$indent})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startAttributeNS">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$prefix}, ${2:string \$name}, ${3:string \$uri}, ${4:resource \$xmlwriter}, ${5:string \$prefix}, ${6:string \$name}, ${7:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startAttribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:resource \$xmlwriter}, ${3:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startCData">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startComment">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xmlwriter})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startDocument">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, string \$version]}${3:${4:[, string \$encoding]}${5:${6:[, string \$standalone    )   bool xmlwriter_start_document    ( resource \$xmlwriter]}${7:${8:[, string \$version]}${9:${10:[, string \$encoding]}${11:${12:[, string \$standalone]}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startDTDAttlist">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:resource \$xmlwriter}, ${3:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startDTDElement">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$qualifiedName}, ${2:resource \$xmlwriter}, ${3:string \$qualifiedName})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startDTDEntity">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:bool \$isparam}, ${3:resource \$xmlwriter}, ${4:string \$name}, ${5:bool \$isparam})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startDTD">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$qualifiedName}${2:${3:[, string \$publicId]}${4:${5:[, string \$systemId    )   bool xmlwriter_start_dtd    ( resource \$xmlwriter]}${6:${7:[, string \$qualifiedName]}${8:${9:[, string \$publicId]}${10:${11:[, string \$systemId]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startElementNS">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$prefix}, ${2:string \$name}, ${3:string \$uri}, ${4:resource \$xmlwriter}, ${5:string \$prefix}, ${6:string \$name}, ${7:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startElement">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:resource \$xmlwriter}, ${3:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::startPI">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}, ${2:resource \$xmlwriter}, ${3:string \$target})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::text">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content}, ${2:resource \$xmlwriter}, ${3:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeAttributeNS">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$prefix}, ${2:string \$name}, ${3:string \$uri}, ${4:string \$content}, ${5:resource \$xmlwriter}, ${6:string \$prefix}, ${7:string \$name}, ${8:string \$uri}, ${9:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeAttribute">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$value}, ${3:resource \$xmlwriter}, ${4:string \$name}, ${5:string \$value})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeCData">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content}, ${2:resource \$xmlwriter}, ${3:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeComment">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content}, ${2:resource \$xmlwriter}, ${3:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeDTDAttlist">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$content}, ${3:resource \$xmlwriter}, ${4:string \$name}, ${5:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeDTDElement">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$content}, ${3:resource \$xmlwriter}, ${4:string \$name}, ${5:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeDTDEntity">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$content}, ${3:bool \$pe}, ${4:string \$pubid}, ${5:string \$sysid}, ${6:string \$ndataid}, ${7:resource \$xmlwriter}, ${8:string \$name}, ${9:string \$content}, ${10:bool \$pe}, ${11:string \$pubid}, ${12:string \$sysid}, ${13:string \$ndataid})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeDTD">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, string \$publicId]}${4:${5:[, string \$systemId]}${6:${7:[, string \$subset    )   bool xmlwriter_write_dtd    ( resource \$xmlwriter]}${8:${9:[, string \$name]}${10:${11:[, string \$publicId]}${12:${13:[, string \$systemId]}${14:${15:[, string \$subset]}}}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeElementNS">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$prefix}, ${2:string \$name}, ${3:string \$uri}${4:${5:[, string \$content    )   bool xmlwriter_write_element_ns    ( resource \$xmlwriter]}${6:${7:[, string \$prefix]}${8:${9:[, string \$name]}${10:${11:[, string \$uri]}${12:${13:[, string \$content]}}}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeElement">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, string \$content    )   bool xmlwriter_write_element    ( resource \$xmlwriter]}${4:${5:[, string \$name]}${6:${7:[, string \$content]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writePI">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$target}, ${2:string \$content}, ${3:resource \$xmlwriter}, ${4:string \$target}, ${5:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="XMLWriter::writeRaw">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$content}, ${2:resource \$xmlwriter}, ${3:string \$content})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xpath_eval_expression">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$expression}${2:${3:[, domnode \$contextnode            )     XPathObject xpath_eval_expression      ( XPathContext \$xpath_context]}${4:${5:[, string \$expression]}${6:${7:[, domnode \$contextnode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xpath_eval">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$xpath}${2:${3:[, domnode \$contextnode            )     XPathObject xpath_eval      ( XPathContext \$xpath_context]}${4:${5:[, string \$xpath_expression]}${6:${7:[, domnode \$contextnode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xpath_new_context">
			<behavior>
				<append-static>
					<transform-into>(${1:domdocument \$dom})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xpath_register_ns_auto">
			<behavior>
				<append-static>
					<transform-into>(${1:XPathContext \$xpath}${2:${3:[, object \$context_node]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xpath_register_ns">
			<behavior>
				<append-static>
					<transform-into>(${1:XPathContext \$xpath}, ${2:string \$prefix}, ${3:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xptr_eval">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$eval}${2:${3:[, domnode \$contextnode          )   int xptr_eval    ( XPathContext \$xpath_context]}${4:${5:[, string \$eval_str]}${6:${7:[, domnode \$contextnode]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xptr_new_context">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_backend_info">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_backend_name">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_backend_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_create">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_errno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_free">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_getopt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$processor})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_process">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:string \$xmlcontainer}, ${3:string \$xslcontainer}${4:${5:[, string \$resultcontainer]}${6:${7:[, array \$arguments]}${8:${9:[, array \$parameters]}}}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_base">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:string \$uri})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_encoding">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:string \$encoding})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_error_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:mixed \$handler}, ${3:resource \$xh}, ${4:int \$error}, ${5:int \$error}, ${6:array \$messages})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_log">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}${2:${3:[, mixed \$log]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_object">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$processor}, ${2:\$obj})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_sax_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:array \$handlers})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_sax_handlers">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$processor}, ${2:array \$handlers}, ${3:resource \$processor}, ${4:resource \$processor}, ${5:resource \$processor}, ${6:string \$name}, ${7:array \$attributes}, ${8:resource \$processor}, ${9:string \$name}, ${10:resource \$processor}, ${11:string \$prefix}, ${12:string \$uri}, ${13:resource \$processor}, ${14:string \$prefix}, ${15:resource \$processor}, ${16:string \$contents}, ${17:resource \$processor}, ${18:string \$target}, ${19:string \$contents}, ${20:resource \$processor}, ${21:string \$contents})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_scheme_handler">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:array \$handlers})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_set_scheme_handlers">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$xh}, ${2:array \$handlers})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="xslt_setopt">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$processor}, ${2:int \$newmask})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_addinfo">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_ccl_conf">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:array \$config})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_ccl_parse">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$query}, ${3:\$result})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_connect">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$zurl}${2:${3:[, mixed \$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_database">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$databases})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_element">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$elementset})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_errno">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_error">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_es_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_es">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$type}, ${3:array \$args})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_get_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_hits">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}${2:${3:[, array &amp;\$searchresult]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_itemorder">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:array \$args})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_present">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_range">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:int \$start}, ${3:int \$number})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_record">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:int \$pos}, ${3:string \$type})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_scan_result">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}${2:${3:[, array &amp;\$result]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_scan">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$type}, ${3:string \$startterm}${4:${5:[, array \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_schema">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$schema})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_search">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$type}, ${3:string \$query})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_set_option">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$name}, ${3:string \$value}, ${4:resource \$id}, ${5:array \$options})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_sort">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$criteria})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_syntax">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$id}, ${2:string \$syntax})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yaz_wait">
			<behavior>
				<append-static>
					<transform-into>($1${1:${2:[, array &amp;\$options]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_all">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map}, ${3:string \$callback})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_cat">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_err_string">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$errorcode})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_errno">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_first">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_get_default_domain">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_master">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_match">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map}, ${3:string \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_next">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map}, ${3:string \$key})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="yp_order">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$domain}, ${2:string \$map})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zend_logo_guid">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zend_thread_id">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zend_version">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_close">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_compressedsize">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_compressionmethod">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_filesize">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_name">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_open">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip}, ${2:resource \$zip}${3:${4:[, string \$mode]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_entry_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip}${2:${3:[, int \$length]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zip_read">
			<behavior>
				<append-static>
					<transform-into>(${1:resource \$zip})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::addEmptyDir">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$dirname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::addFile">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, string \$localname]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::addFromString">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$localname}, ${2:string \$contents})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::close">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::deleteIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::deleteName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::extractTo">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$destination}${2:${3:[, mixed \$entries]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getArchiveComment">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getCommentIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getCommentName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getFromIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getFromName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getNameIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::getStream">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::locateName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::open">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$filename}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::renameIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}, ${2:string \$newname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::renameName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$newname})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::setCommentName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name}, ${2:string \$comment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::setArchiveComment">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$comment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::setCommentIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}, ${2:string \$comment})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::statIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::statName">
			<behavior>
				<append-static>
					<transform-into>(${1:name \$name}${2:${3:[, int \$flags]}})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::unchangeAll">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::unchangeArchive">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::unchangeIndex">
			<behavior>
				<append-static>
					<transform-into>(${1:int \$index})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="ZipArchive::unchangeName">
			<behavior>
				<append-static>
					<transform-into>(${1:string \$name})</transform-into>
				</append-static>
			</behavior>
		</completion>

		<completion string="zlib_get_coding_type">
			<behavior>
				<append-static>
					<transform-into>($1)</transform-into>
				</append-static>
			</behavior>
		</completion>

    </set>
	
</codesense>